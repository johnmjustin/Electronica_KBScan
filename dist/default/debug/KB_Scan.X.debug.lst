

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Jul 29 18:29:04 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F45K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	smallconst
    73  000600                     __psmallconst:
    74                           	opt stack 0
    75  000600  00                 	db	0
    76  000601                     _LED_Data_Chan1:
    77                           	opt stack 0
    78  000601  08                 	db	8
    79  000602  04                 	db	4
    80  000603  02                 	db	2
    81  000604  01                 	db	1
    82  000605  80                 	db	128
    83  000606  40                 	db	64
    84  000607  20                 	db	32
    85  000608  10                 	db	16
    86  000609                     __end_of_LED_Data_Chan1:
    87                           	opt stack 0
    88  0000                     _WPUB	set	3964
    89  0000                     _ANSEL	set	3966
    90  0000                     _ANSELH	set	3967
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISA	set	3986
    95  0000                     _TRISE	set	3990
    96  0000                     _LATC	set	3979
    97  0000                     _LATB	set	3978
    98  0000                     _LATA	set	3977
    99  0000                     _LATD	set	3980
   100  0000                     _LATE	set	3981
   101  0000                     _PORTA	set	3968
   102  0000                     _PORTCbits	set	3970
   103  0000                     _PORTD	set	3971
   104  0000                     _OSCTUNE	set	3995
   105  0000                     _EEDATA	set	4008
   106  0000                     _EEADR	set	4009
   107  0000                     _EECON2	set	4007
   108  0000                     _EECON1bits	set	4006
   109  0000                     _OSCCON	set	4051
   110  0000                     _PIR2bits	set	4001
   111  0000                     _PIE2bits	set	4000
   112  0000                     _SSPCON2	set	4037
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPCON1bits	set	4038
   116  0000                     _PIE1bits	set	3997
   117  0000                     _PIR1bits	set	3998
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPCON1	set	4038
   120  0000                     _SSPSTAT	set	4039
   121  0000                     _CCPR1H	set	4031
   122  0000                     _CCPR1L	set	4030
   123  0000                     _PSTRCON	set	4025
   124  0000                     _PWM1CON	set	4023
   125  0000                     _ECCP1AS	set	4022
   126  0000                     _CCP1CON	set	4029
   127  0000                     _CVRCON	set	4021
   128  0000                     _CCPR2H	set	4028
   129  0000                     _CCPR2L	set	4027
   130  0000                     _CCP2CON	set	4026
   131  0000                     _RSEN	set	32297
   132  0000                     _PEN	set	32298
   133  0000                     _SEN	set	32296
   134  0000                     _ACKEN	set	32300
   135  0000                     _ACKDT	set	32301
   136  0000                     _RCEN	set	32299
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _TABLAT	set	4085
   139  0000                     _TBLPTRL	set	4086
   140  0000                     _TBLPTRH	set	4087
   141  0000                     _TBLPTRU	set	4088
   142  0000                     _INTCONbits	set	4082
   143                           
   144                           ; #config settings
   145  000609  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           	psect	cinit
   148  000AD4                     __pcinit:
   149                           	opt stack 0
   150  000AD4                     start_initialization:
   151                           	opt stack 0
   152  000AD4                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (37 bytes)
   156  000AD4  EE00  F001         	lfsr	0,__pbssCOMRAM
   157  000AD8  0E25               	movlw	37
   158  000ADA                     clear_0:
   159  000ADA  6AEE               	clrf	postinc0,c
   160  000ADC  06E8               	decf	wreg,f,c
   161  000ADE  E1FD               	bnz	clear_0
   162  000AE0                     end_of_initialization:
   163                           	opt stack 0
   164  000AE0                     __end_of__initialization:
   165                           	opt stack 0
   166  000AE0  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167  000AE2  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168  000AE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  000AE6  6EF8               	movwf	tblptru,c
   170  000AE8  0100               	movlb	0
   171  000AEA  EF24  F004         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000001                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000001                     _i2c_object:
   180                           	opt stack 0
   181  000001                     	ds	7
   182  000008                     I2C_ISR@pi2c_buf_ptr:
   183                           	opt stack 0
   184  000008                     	ds	2
   185  00000A                     _p_i2c_current:
   186                           	opt stack 0
   187  00000A                     	ds	2
   188  00000C                     _p_i2c_trb_current:
   189                           	opt stack 0
   190  00000C                     	ds	2
   191  00000E                     I2C_ISR@i2c_10bit_address_restart:
   192                           	opt stack 0
   193  00000E                     	ds	1
   194  00000F                     I2C_ISR@i2c_bytes_left:
   195                           	opt stack 0
   196  00000F                     	ds	1
   197  000010                     _i2c_trb_count:
   198                           	opt stack 0
   199  000010                     	ds	1
   200  000011                     _i2c_state:
   201                           	opt stack 0
   202  000011                     	ds	1
   203  000012                     I2C_MasterRead@trBlock:
   204                           	opt stack 0
   205  000012                     	ds	6
   206  000018                     I2C_MasterWrite@trBlock:
   207                           	opt stack 0
   208  000018                     	ds	6
   209  00001E                     _i2c_tr_queue:
   210                           	opt stack 0
   211  00001E                     	ds	6
   212  000024                     I2C_ISR@i2c_address:
   213                           	opt stack 0
   214  000024                     	ds	2
   215                           tblptru	equ	0xFF8
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	cstackCOMRAM
   220  000026                     __pcstackCOMRAM:
   221                           	opt stack 0
   222  000026                     ??_I2C_Stop:
   223  000026                     
   224                           ; 1 bytes @ 0x0
   225  000026                     	ds	2
   226  000028                     I2C_Stop@completion_code:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  000028                     	ds	1
   231  000029                     ??_I2C_ISR:
   232                           
   233                           ; 1 bytes @ 0x3
   234  000029                     	ds	2
   235  00002B                     ??_INTERRUPT_InterruptManager:
   236                           
   237                           ; 1 bytes @ 0x5
   238  00002B                     	ds	14
   239  000039                     ??_I2C_Master_Wait:
   240  000039                     Encode_LED_Data_Channel1@index:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x13
   244  000039                     	ds	1
   245  00003A                     I2C_Master_Read@a:
   246                           	opt stack 0
   247  00003A                     I2C_Master_Write@d:
   248                           	opt stack 0
   249  00003A                     Encode_LED_Data_Channel1@DataReadI2C:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x14
   253  00003A                     	ds	1
   254  00003B                     I2C_Master_Read@temp:
   255                           	opt stack 0
   256  00003B                     Write_I2C@Data:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x15
   260  00003B                     	ds	1
   261  00003C                     ??_Read_I2C:
   262  00003C                     ??_Write_I2C:
   263                           
   264                           ; 1 bytes @ 0x16
   265  00003C                     	ds	1
   266  00003D                     Read_I2C@rcv_data:
   267                           	opt stack 0
   268  00003D                     Write_I2C@Channel_Addr:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x17
   272  00003D                     	ds	1
   273  00003E                     Read_I2C@Channel_Addr:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x18
   277  00003E                     	ds	1
   278  00003F                     main@channel:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x19
   282  00003F                     	ds	1
   283  000040                     main@I2C_Data:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x1A
   287  000040                     	ds	1
   288                           tblptru	equ	0xFF8
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 160 in file "../KB_Scan.X/Source/main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  I2C_Data        1   26[COMRAM] unsigned char 
   302 ;;  channel         1   25[COMRAM] unsigned char 
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   312 ;;      Params:         0       0       0       0       0       0       0
   313 ;;      Locals:         2       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0
   315 ;;      Totals:         2       0       0       0       0       0       0
   316 ;;Total ram usage:        2 bytes
   317 ;; Hardware stack levels required when called:    6
   318 ;; This function calls:
   319 ;;		_Encode_LED_Data_Channel1
   320 ;;		_Read_I2C
   321 ;;		_Read_Port_IN
   322 ;;		_SYSTEM_Initialize
   323 ;;		_Write_I2C
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330  000848                     __ptext0:
   331                           	opt stack 0
   332  000848                     _main:
   333                           	opt stack 25
   334                           
   335                           ;main.c: 162: SYSTEM_Initialize();
   336                           
   337                           ;incstack = 0
   338  000848  EC59  F005         	call	_SYSTEM_Initialize	;wreg free
   339                           
   340                           ;main.c: 164: uint8_t channel = 0x00;
   341  00084C  0E00               	movlw	0
   342  00084E  6E3F               	movwf	main@channel,c
   343                           
   344                           ;main.c: 165: uint8_t I2C_Data = 0x00;
   345  000850  0E00               	movlw	0
   346  000852  6E40               	movwf	main@I2C_Data,c
   347                           
   348                           ;main.c: 167: Write_I2C(73, (0x02 ^ 0xFF));
   349  000854  0EFD               	movlw	253
   350  000856  6E3B               	movwf	Write_I2C@Data,c
   351  000858  0E49               	movlw	73
   352  00085A  ECB8  F004         	call	_Write_I2C
   353  00085E                     l1573:
   354                           
   355                           ;main.c: 170: {
   356                           ;main.c: 171: PORTCbits.RC5 = 1;
   357  00085E  8A82               	bsf	3970,5,c	;volatile
   358                           
   359                           ;main.c: 172: channel = Read_Port_IN() & 0b11000000;
   360  000860  ECB6  F005         	call	_Read_Port_IN	;wreg free
   361  000864  0BC0               	andlw	192
   362  000866  6E3F               	movwf	main@channel,c
   363                           
   364                           ;main.c: 174: channel = 0b10000000;
   365  000868  0E80               	movlw	128
   366  00086A  6E3F               	movwf	main@channel,c
   367                           
   368                           ;main.c: 175: switch (channel)
   369  00086C  D02A               	goto	l1591
   370  00086E                     l1577:
   371                           
   372                           ;main.c: 178: I2C_Data = Read_I2C(71);
   373  00086E  0E47               	movlw	71
   374  000870  EC71  F004         	call	_Read_I2C
   375  000874  6E40               	movwf	main@I2C_Data,c
   376                           
   377                           ;main.c: 179: if (I2C_Data != 0xFF)
   378  000876  2840               	incf	main@I2C_Data,w,c
   379  000878  B4D8               	btfsc	status,2,c
   380  00087A  D030               	goto	l304
   381                           
   382                           ;main.c: 180: {
   383                           ;main.c: 181: Write_I2C(73,~(Encode_LED_Data_Channel1(~I2C_Data)));
   384  00087C  5040               	movf	main@I2C_Data,w,c
   385  00087E  0AFF               	xorlw	255
   386  000880  EC31  F005         	call	_Encode_LED_Data_Channel1
   387  000884  0AFF               	xorlw	255
   388  000886  6E3B               	movwf	Write_I2C@Data,c
   389  000888  0E49               	movlw	73
   390  00088A  ECB8  F004         	call	_Write_I2C
   391                           
   392                           ;main.c: 182: }
   393                           ;main.c: 183: break;
   394  00088E  D026               	goto	l304
   395  000890                     l1583:
   396                           
   397                           ;main.c: 185: I2C_Data = Read_I2C(65);
   398  000890  0E41               	movlw	65
   399  000892  EC71  F004         	call	_Read_I2C
   400  000896  6E40               	movwf	main@I2C_Data,c
   401                           
   402                           ;main.c: 186: Write_I2C(75,I2C_Data);
   403  000898  C040  F03B         	movff	main@I2C_Data,Write_I2C@Data
   404  00089C  0E4B               	movlw	75
   405  00089E  ECB8  F004         	call	_Write_I2C
   406                           
   407                           ;main.c: 187: break;
   408  0008A2  D01C               	goto	l304
   409  0008A4                     l1585:
   410                           
   411                           ;main.c: 189: I2C_Data = Read_I2C(67);
   412  0008A4  0E43               	movlw	67
   413  0008A6  EC71  F004         	call	_Read_I2C
   414  0008AA  6E40               	movwf	main@I2C_Data,c
   415                           
   416                           ;main.c: 190: Write_I2C(77,I2C_Data);
   417  0008AC  C040  F03B         	movff	main@I2C_Data,Write_I2C@Data
   418  0008B0  0E4D               	movlw	77
   419  0008B2  ECB8  F004         	call	_Write_I2C
   420                           
   421                           ;main.c: 191: break;
   422  0008B6  D012               	goto	l304
   423  0008B8                     l1587:
   424                           
   425                           ;main.c: 193: I2C_Data = Read_I2C(69);
   426  0008B8  0E45               	movlw	69
   427  0008BA  EC71  F004         	call	_Read_I2C
   428  0008BE  6E40               	movwf	main@I2C_Data,c
   429                           
   430                           ;main.c: 198: }
   431                           
   432                           ;main.c: 197: break;
   433                           
   434                           ;main.c: 196: default:
   435                           
   436                           ;main.c: 195: break;
   437  0008C0  D00D               	goto	l304
   438  0008C2                     l1591:
   439  0008C2  503F               	movf	main@channel,w,c
   440                           
   441                           ; Switch size 1, requested type "space"
   442                           ; Number of cases is 4, Range of values is 0 to 192
   443                           ; switch strategies available:
   444                           ; Name         Instructions Cycles
   445                           ; simple_byte           13     7 (average)
   446                           ;	Chosen strategy is simple_byte
   447  0008C4  0A00               	xorlw	0	; case 0
   448  0008C6  B4D8               	btfsc	status,2,c
   449  0008C8  D7D2               	goto	l1577
   450  0008CA  0A40               	xorlw	64	; case 64
   451  0008CC  B4D8               	btfsc	status,2,c
   452  0008CE  D7E0               	goto	l1583
   453  0008D0  0AC0               	xorlw	192	; case 128
   454  0008D2  B4D8               	btfsc	status,2,c
   455  0008D4  D7E7               	goto	l1585
   456  0008D6  0A40               	xorlw	64	; case 192
   457  0008D8  B4D8               	btfsc	status,2,c
   458  0008DA  D7EE               	goto	l1587
   459  0008DC                     l304:
   460                           
   461                           ;main.c: 199: PORTA = I2C_Data;
   462  0008DC  C040  FF80         	movff	main@I2C_Data,3968	;volatile
   463  0008E0  D7BE               	goto	l1573
   464  0008E2                     __end_of_main:
   465                           	opt stack 0
   466                           tblptru	equ	0xFF8
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _Write_I2C *****************
   472 ;; Defined at:
   473 ;;		line 132 in file "../KB_Scan.X/Source/main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  Channel_Addr    1    wreg     unsigned char 
   476 ;;  Data            1   21[COMRAM] unsigned char 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  Channel_Addr    1   23[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         1       0       0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0       0       0
   490 ;;      Temps:          1       0       0       0       0       0       0
   491 ;;      Totals:         3       0       0       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    5
   495 ;; This function calls:
   496 ;;		_I2C_Master_Start
   497 ;;		_I2C_Master_Stop
   498 ;;		_I2C_Master_Write
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  000970                     __ptext1:
   506                           	opt stack 0
   507  000970                     _Write_I2C:
   508                           	opt stack 25
   509                           
   510                           ;incstack = 0
   511                           ;Write_I2C@Channel_Addr stored from wreg
   512  000970  6E3D               	movwf	Write_I2C@Channel_Addr,c
   513                           
   514                           ;main.c: 134: I2C_Master_Start();
   515  000972  ECAF  F005         	call	_I2C_Master_Start	;wreg free
   516                           
   517                           ;main.c: 135: I2C_Master_Write(Channel_Addr & 0xFE);
   518  000976  503D               	movf	Write_I2C@Channel_Addr,w,c
   519  000978  0BFE               	andlw	254
   520  00097A  ECA0  F005         	call	_I2C_Master_Write
   521                           
   522                           ;main.c: 136: I2C_Master_Write(0x03);
   523  00097E  0E03               	movlw	3
   524  000980  ECA0  F005         	call	_I2C_Master_Write
   525                           
   526                           ;main.c: 137: I2C_Master_Write(0x00);
   527  000984  0E00               	movlw	0
   528  000986  ECA0  F005         	call	_I2C_Master_Write
   529                           
   530                           ;main.c: 138: I2C_Master_Stop();
   531  00098A  ECAB  F005         	call	_I2C_Master_Stop	;wreg free
   532                           
   533                           ;main.c: 139: _delay((unsigned long)((1)*(8000000/4000.0)));
   534  00098E  0E03               	movlw	3
   535  000990  6E3C               	movwf	??_Write_I2C& (0+255),c
   536  000992  0E98               	movlw	152
   537  000994                     u477:
   538  000994  2EE8               	decfsz	wreg,f,c
   539  000996  D7FE               	bra	u477
   540  000998  2E3C               	decfsz	??_Write_I2C& (0+255),f,c
   541  00099A  D7FC               	bra	u477
   542                           
   543                           ;main.c: 140: I2C_Master_Start();
   544  00099C  ECAF  F005         	call	_I2C_Master_Start	;wreg free
   545                           
   546                           ;main.c: 141: I2C_Master_Write(Channel_Addr & 0xFE);
   547  0009A0  503D               	movf	Write_I2C@Channel_Addr,w,c
   548  0009A2  0BFE               	andlw	254
   549  0009A4  ECA0  F005         	call	_I2C_Master_Write
   550                           
   551                           ;main.c: 142: I2C_Master_Write(0x01);
   552  0009A8  0E01               	movlw	1
   553  0009AA  ECA0  F005         	call	_I2C_Master_Write
   554                           
   555                           ;main.c: 143: I2C_Master_Write(Data);
   556  0009AE  503B               	movf	Write_I2C@Data,w,c
   557  0009B0  ECA0  F005         	call	_I2C_Master_Write
   558                           
   559                           ;main.c: 144: I2C_Master_Stop();
   560  0009B4  ECAB  F005         	call	_I2C_Master_Stop	;wreg free
   561                           
   562                           ;main.c: 145: _delay((unsigned long)((1)*(8000000/4000.0)));
   563  0009B8  0E03               	movlw	3
   564  0009BA  6E3C               	movwf	??_Write_I2C& (0+255),c
   565  0009BC  0E98               	movlw	152
   566  0009BE                     u487:
   567  0009BE  2EE8               	decfsz	wreg,f,c
   568  0009C0  D7FE               	bra	u487
   569  0009C2  2E3C               	decfsz	??_Write_I2C& (0+255),f,c
   570  0009C4  D7FC               	bra	u487
   571  0009C6  0012               	return		;funcret
   572  0009C8                     __end_of_Write_I2C:
   573                           	opt stack 0
   574                           tblptru	equ	0xFF8
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           status	equ	0xFD8
   578                           
   579 ;; *************** function _SYSTEM_Initialize *****************
   580 ;; Defined at:
   581 ;;		line 79 in file "../KB_Scan.X/Source/main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   595 ;;      Params:         0       0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    4
   602 ;; This function calls:
   603 ;;		_CCP2_Initialize
   604 ;;		_CVREF_Initialize
   605 ;;		_ECCP1_Initialize
   606 ;;		_EXT_INT_Initialize
   607 ;;		_I2C_Initialize
   608 ;;		_INTERRUPT_Initialize
   609 ;;		_OSCILLATOR_Initialize
   610 ;;		_PIN_MANAGER_Initialize
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text2
   617  000AB2                     __ptext2:
   618                           	opt stack 0
   619  000AB2                     _SYSTEM_Initialize:
   620                           	opt stack 26
   621                           
   622                           ;main.c: 82: INTERRUPT_Initialize();
   623                           
   624                           ;incstack = 0
   625  000AB2  ECB8  F005         	call	_INTERRUPT_Initialize	;wreg free
   626                           
   627                           ;main.c: 83: PIN_MANAGER_Initialize();
   628  000AB6  EC03  F005         	call	_PIN_MANAGER_Initialize	;wreg free
   629                           
   630                           ;main.c: 84: OSCILLATOR_Initialize();
   631  000ABA  ECA6  F005         	call	_OSCILLATOR_Initialize	;wreg free
   632                           
   633                           ;main.c: 85: I2C_Initialize();
   634  000ABE  EC1C  F005         	call	_I2C_Initialize	;wreg free
   635                           
   636                           ;main.c: 86: ECCP1_Initialize();
   637  000AC2  EC77  F005         	call	_ECCP1_Initialize	;wreg free
   638                           
   639                           ;main.c: 87: CVREF_Initialize();
   640  000AC6  ECB3  F005         	call	_CVREF_Initialize	;wreg free
   641                           
   642                           ;main.c: 88: CCP2_Initialize();
   643  000ACA  EC99  F005         	call	_CCP2_Initialize	;wreg free
   644                           
   645                           ;main.c: 89: EXT_INT_Initialize();
   646  000ACE  ECB9  F005         	call	_EXT_INT_Initialize	;wreg free
   647  000AD2  0012               	return		;funcret
   648  000AD4                     __end_of_SYSTEM_Initialize:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           status	equ	0xFD8
   654                           
   655 ;; *************** function _PIN_MANAGER_Initialize *****************
   656 ;; Defined at:
   657 ;;		line 52 in file "../KB_Scan.X/Source/pin_manager.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   671 ;;      Params:         0       0       0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    3
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_SYSTEM_Initialize
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text3
   686  000A06                     __ptext3:
   687                           	opt stack 0
   688  000A06                     _PIN_MANAGER_Initialize:
   689                           	opt stack 26
   690                           
   691                           ;pin_manager.c: 57: LATE = 0x00;
   692                           
   693                           ;incstack = 0
   694  000A06  0E00               	movlw	0
   695  000A08  6E8D               	movwf	3981,c	;volatile
   696                           
   697                           ;pin_manager.c: 58: LATD = 0x00;
   698  000A0A  0E00               	movlw	0
   699  000A0C  6E8C               	movwf	3980,c	;volatile
   700                           
   701                           ;pin_manager.c: 59: LATA = 0x00;
   702  000A0E  0E00               	movlw	0
   703  000A10  6E89               	movwf	3977,c	;volatile
   704                           
   705                           ;pin_manager.c: 60: LATB = 0x00;
   706  000A12  0E00               	movlw	0
   707  000A14  6E8A               	movwf	3978,c	;volatile
   708                           
   709                           ;pin_manager.c: 61: LATC = 0x00;
   710  000A16  0E00               	movlw	0
   711  000A18  6E8B               	movwf	3979,c	;volatile
   712                           
   713                           ;pin_manager.c: 66: TRISE = 0x07;
   714  000A1A  0E07               	movlw	7
   715  000A1C  6E96               	movwf	3990,c	;volatile
   716                           
   717                           ;pin_manager.c: 67: TRISA = 0x00;
   718  000A1E  0E00               	movlw	0
   719  000A20  6E92               	movwf	3986,c	;volatile
   720                           
   721                           ;pin_manager.c: 68: TRISB = 0xFF;
   722  000A22  6893               	setf	3987,c	;volatile
   723                           
   724                           ;pin_manager.c: 69: TRISC = 0xDF;
   725  000A24  0EDF               	movlw	223
   726  000A26  6E94               	movwf	3988,c	;volatile
   727                           
   728                           ;pin_manager.c: 70: TRISD = 0xFF;
   729  000A28  6895               	setf	3989,c	;volatile
   730                           
   731                           ;pin_manager.c: 75: ANSELH = 0x1F;
   732  000A2A  0E1F               	movlw	31
   733  000A2C  6E7F               	movwf	3967,c	;volatile
   734                           
   735                           ;pin_manager.c: 76: ANSEL = 0xE0;
   736  000A2E  0EE0               	movlw	224
   737  000A30  6E7E               	movwf	3966,c	;volatile
   738                           
   739                           ;pin_manager.c: 81: WPUB = 0xFF;
   740  000A32  687C               	setf	3964,c	;volatile
   741                           
   742                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 0;
   743  000A34  9EF1               	bcf	intcon2,7,c	;volatile
   744  000A36  0012               	return		;funcret
   745  000A38                     __end_of_PIN_MANAGER_Initialize:
   746                           	opt stack 0
   747                           tblptru	equ	0xFF8
   748                           intcon2	equ	0xFF1
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           status	equ	0xFD8
   752                           
   753 ;; *************** function _OSCILLATOR_Initialize *****************
   754 ;; Defined at:
   755 ;;		line 92 in file "../KB_Scan.X/Source/main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   769 ;;      Params:         0       0       0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    3
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_SYSTEM_Initialize
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text4
   784  000B4C                     __ptext4:
   785                           	opt stack 0
   786  000B4C                     _OSCILLATOR_Initialize:
   787                           	opt stack 26
   788                           
   789                           ;main.c: 95: OSCCON = 0x60;
   790                           
   791                           ;incstack = 0
   792  000B4C  0E60               	movlw	96
   793  000B4E  6ED3               	movwf	4051,c	;volatile
   794                           
   795                           ;main.c: 97: OSCTUNE = 0x00;
   796  000B50  0E00               	movlw	0
   797  000B52  6E9B               	movwf	3995,c	;volatile
   798  000B54  0012               	return		;funcret
   799  000B56                     __end_of_OSCILLATOR_Initialize:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           intcon2	equ	0xFF1
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _INTERRUPT_Initialize *****************
   808 ;; Defined at:
   809 ;;		line 51 in file "../KB_Scan.X/Source/interrupt_manager.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		None
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         0       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    3
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_SYSTEM_Initialize
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text5
   838  000B70                     __ptext5:
   839                           	opt stack 0
   840  000B70                     _INTERRUPT_Initialize:
   841                           	opt stack 26
   842                           
   843                           ;incstack = 0
   844  000B70  0012               	return		;funcret
   845  000B72                     __end_of_INTERRUPT_Initialize:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           intcon2	equ	0xFF1
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           status	equ	0xFD8
   852                           
   853 ;; *************** function _I2C_Initialize *****************
   854 ;; Defined at:
   855 ;;		line 198 in file "../KB_Scan.X/Source/i2c.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   869 ;;      Params:         0       0       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    3
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_SYSTEM_Initialize
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text6
   884  000A38                     __ptext6:
   885                           	opt stack 0
   886  000A38                     _I2C_Initialize:
   887                           	opt stack 26
   888                           
   889                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
   890                           
   891                           ;incstack = 0
   892  000A38  0E1E               	movlw	low _i2c_tr_queue
   893  000A3A  6E03               	movwf	_i2c_object+2,c
   894  000A3C  0E00               	movlw	high _i2c_tr_queue
   895  000A3E  6E04               	movwf	_i2c_object+3,c
   896                           
   897                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
   898  000A40  0E1E               	movlw	low _i2c_tr_queue
   899  000A42  6E01               	movwf	_i2c_object,c
   900  000A44  0E00               	movlw	high _i2c_tr_queue
   901  000A46  6E02               	movwf	_i2c_object+1,c
   902                           
   903                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
   904  000A48  8205               	bsf	_i2c_object+4,1,c
   905                           
   906                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
   907  000A4A  9005               	bcf	_i2c_object+4,0,c
   908                           
   909                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
   910  000A4C  0E00               	movlw	0
   911  000A4E  6E07               	movwf	_i2c_object+6,c
   912                           
   913                           ;i2c.c: 208: SSPSTAT = 0x80;
   914  000A50  0E80               	movlw	128
   915  000A52  6EC7               	movwf	4039,c	;volatile
   916                           
   917                           ;i2c.c: 210: SSPCON1 = 0x28;
   918  000A54  0E28               	movlw	40
   919  000A56  6EC6               	movwf	4038,c	;volatile
   920                           
   921                           ;i2c.c: 212: SSPADD = 0x03;
   922  000A58  0E03               	movlw	3
   923  000A5A  6EC8               	movwf	4040,c	;volatile
   924                           
   925                           ;i2c.c: 216: PIR1bits.SSPIF = 0;
   926  000A5C  969E               	bcf	3998,3,c	;volatile
   927                           
   928                           ;i2c.c: 221: PIE1bits.SSPIE = 0;
   929  000A5E  969D               	bcf	3997,3,c	;volatile
   930  000A60  0012               	return		;funcret
   931  000A62                     __end_of_I2C_Initialize:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           intcon2	equ	0xFF1
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           status	equ	0xFD8
   938                           
   939 ;; *************** function _EXT_INT_Initialize *****************
   940 ;; Defined at:
   941 ;;		line 47 in file "../KB_Scan.X/Source/ext_int.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		None
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   955 ;;      Params:         0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    3
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_SYSTEM_Initialize
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text7
   970  000B72                     __ptext7:
   971                           	opt stack 0
   972  000B72                     _EXT_INT_Initialize:
   973                           	opt stack 26
   974                           
   975                           ;incstack = 0
   976  000B72  0012               	return		;funcret
   977  000B74                     __end_of_EXT_INT_Initialize:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           intcon2	equ	0xFF1
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           status	equ	0xFD8
   984                           
   985 ;; *************** function _ECCP1_Initialize *****************
   986 ;; Defined at:
   987 ;;		line 57 in file "../KB_Scan.X/Source/eccp1.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    3
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_SYSTEM_Initialize
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text8
  1016  000AEE                     __ptext8:
  1017                           	opt stack 0
  1018  000AEE                     _ECCP1_Initialize:
  1019                           	opt stack 26
  1020                           
  1021                           ;eccp1.c: 60: CCP1CON = 0x00;
  1022                           
  1023                           ;incstack = 0
  1024  000AEE  0E00               	movlw	0
  1025  000AF0  6EBD               	movwf	4029,c	;volatile
  1026                           
  1027                           ;eccp1.c: 62: ECCP1AS = 0x00;
  1028  000AF2  0E00               	movlw	0
  1029  000AF4  6EB6               	movwf	4022,c	;volatile
  1030                           
  1031                           ;eccp1.c: 64: PWM1CON = 0x00;
  1032  000AF6  0E00               	movlw	0
  1033  000AF8  6EB7               	movwf	4023,c	;volatile
  1034                           
  1035                           ;eccp1.c: 66: PSTRCON = 0x01;
  1036  000AFA  0E01               	movlw	1
  1037  000AFC  6EB9               	movwf	4025,c	;volatile
  1038                           
  1039                           ;eccp1.c: 68: CCPR1L = 0x00;
  1040  000AFE  0E00               	movlw	0
  1041  000B00  6EBE               	movwf	4030,c	;volatile
  1042                           
  1043                           ;eccp1.c: 70: CCPR1H = 0x00;
  1044  000B02  0E00               	movlw	0
  1045  000B04  6EBF               	movwf	4031,c	;volatile
  1046  000B06  0012               	return		;funcret
  1047  000B08                     __end_of_ECCP1_Initialize:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           intcon2	equ	0xFF1
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _CVREF_Initialize *****************
  1056 ;; Defined at:
  1057 ;;		line 57 in file "../KB_Scan.X/Source/cvref.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1071 ;;      Params:         0       0       0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    3
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_SYSTEM_Initialize
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text9
  1086  000B66                     __ptext9:
  1087                           	opt stack 0
  1088  000B66                     _CVREF_Initialize:
  1089                           	opt stack 26
  1090                           
  1091                           ;cvref.c: 62: CVRCON = 0x80;
  1092                           
  1093                           ;incstack = 0
  1094  000B66  0E80               	movlw	128
  1095  000B68  6EB5               	movwf	4021,c	;volatile
  1096  000B6A  0012               	return		;funcret
  1097  000B6C                     __end_of_CVREF_Initialize:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           intcon2	equ	0xFF1
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _CCP2_Initialize *****************
  1106 ;; Defined at:
  1107 ;;		line 57 in file "../KB_Scan.X/Source/ccp2.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    3
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_SYSTEM_Initialize
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text10
  1136  000B32                     __ptext10:
  1137                           	opt stack 0
  1138  000B32                     _CCP2_Initialize:
  1139                           	opt stack 26
  1140                           
  1141                           ;ccp2.c: 60: CCP2CON = 0x00;
  1142                           
  1143                           ;incstack = 0
  1144  000B32  0E00               	movlw	0
  1145  000B34  6EBA               	movwf	4026,c	;volatile
  1146                           
  1147                           ;ccp2.c: 62: CCPR2L = 0x00;
  1148  000B36  0E00               	movlw	0
  1149  000B38  6EBB               	movwf	4027,c	;volatile
  1150                           
  1151                           ;ccp2.c: 64: CCPR2H = 0x00;
  1152  000B3A  0E00               	movlw	0
  1153  000B3C  6EBC               	movwf	4028,c	;volatile
  1154  000B3E  0012               	return		;funcret
  1155  000B40                     __end_of_CCP2_Initialize:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           intcon2	equ	0xFF1
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _Read_Port_IN *****************
  1164 ;; Defined at:
  1165 ;;		line 100 in file "../KB_Scan.X/Source/main.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      unsigned char 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       0       0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    3
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text11
  1194  000B6C                     __ptext11:
  1195                           	opt stack 0
  1196  000B6C                     _Read_Port_IN:
  1197                           	opt stack 27
  1198                           
  1199                           ;main.c: 102: return(PORTD);
  1200                           
  1201                           ;incstack = 0
  1202  000B6C  5083               	movf	3971,w,c	;volatile
  1203  000B6E  0012               	return	
  1204  000B70                     __end_of_Read_Port_IN:
  1205                           	opt stack 0
  1206                           tblptru	equ	0xFF8
  1207                           intcon2	equ	0xFF1
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _Read_I2C *****************
  1213 ;; Defined at:
  1214 ;;		line 105 in file "../KB_Scan.X/Source/main.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  Channel_Addr    1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  Channel_Addr    1   24[COMRAM] unsigned char 
  1219 ;;  rcv_data        1   23[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      unsigned char 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1229 ;;      Params:         0       0       0       0       0       0       0
  1230 ;;      Locals:         2       0       0       0       0       0       0
  1231 ;;      Temps:          1       0       0       0       0       0       0
  1232 ;;      Totals:         3       0       0       0       0       0       0
  1233 ;;Total ram usage:        3 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    5
  1236 ;; This function calls:
  1237 ;;		_I2C_Master_Read
  1238 ;;		_I2C_Master_Start
  1239 ;;		_I2C_Master_Stop
  1240 ;;		_I2C_Master_Write
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text12
  1247  0008E2                     __ptext12:
  1248                           	opt stack 0
  1249  0008E2                     _Read_I2C:
  1250                           	opt stack 25
  1251                           
  1252                           ;incstack = 0
  1253                           ;Read_I2C@Channel_Addr stored from wreg
  1254  0008E2  6E3E               	movwf	Read_I2C@Channel_Addr,c
  1255                           
  1256                           ;main.c: 107: uint8_t rcv_data = 0x00;
  1257  0008E4  0E00               	movlw	0
  1258  0008E6  6E3D               	movwf	Read_I2C@rcv_data,c
  1259                           
  1260                           ;main.c: 109: I2C_Master_Start();
  1261  0008E8  ECAF  F005         	call	_I2C_Master_Start	;wreg free
  1262                           
  1263                           ;main.c: 110: I2C_Master_Write(Channel_Addr & 0xFE);
  1264  0008EC  503E               	movf	Read_I2C@Channel_Addr,w,c
  1265  0008EE  0BFE               	andlw	254
  1266  0008F0  ECA0  F005         	call	_I2C_Master_Write
  1267                           
  1268                           ;main.c: 111: I2C_Master_Write(0x03);
  1269  0008F4  0E03               	movlw	3
  1270  0008F6  ECA0  F005         	call	_I2C_Master_Write
  1271                           
  1272                           ;main.c: 112: I2C_Master_Write(0xFF);
  1273  0008FA  0EFF               	movlw	255
  1274  0008FC  ECA0  F005         	call	_I2C_Master_Write
  1275                           
  1276                           ;main.c: 113: I2C_Master_Stop();
  1277  000900  ECAB  F005         	call	_I2C_Master_Stop	;wreg free
  1278                           
  1279                           ;main.c: 114: _delay((unsigned long)((1)*(8000000/4000.0)));
  1280  000904  0E03               	movlw	3
  1281  000906  6E3C               	movwf	??_Read_I2C& (0+255),c
  1282  000908  0E98               	movlw	152
  1283  00090A                     u497:
  1284  00090A  2EE8               	decfsz	wreg,f,c
  1285  00090C  D7FE               	bra	u497
  1286  00090E  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1287  000910  D7FC               	bra	u497
  1288                           
  1289                           ;main.c: 115: I2C_Master_Start();
  1290  000912  ECAF  F005         	call	_I2C_Master_Start	;wreg free
  1291                           
  1292                           ;main.c: 116: I2C_Master_Write(Channel_Addr & 0xFE);
  1293  000916  503E               	movf	Read_I2C@Channel_Addr,w,c
  1294  000918  0BFE               	andlw	254
  1295  00091A  ECA0  F005         	call	_I2C_Master_Write
  1296                           
  1297                           ;main.c: 117: I2C_Master_Write(0x00);
  1298  00091E  0E00               	movlw	0
  1299  000920  ECA0  F005         	call	_I2C_Master_Write
  1300                           
  1301                           ;main.c: 118: I2C_Master_Start();
  1302  000924  ECAF  F005         	call	_I2C_Master_Start	;wreg free
  1303                           
  1304                           ;main.c: 119: I2C_Master_Write(Channel_Addr & 0xFF);
  1305  000928  503E               	movf	Read_I2C@Channel_Addr,w,c
  1306  00092A  ECA0  F005         	call	_I2C_Master_Write
  1307                           
  1308                           ;main.c: 120: rcv_data = I2C_Master_Read(0);
  1309  00092E  0E00               	movlw	0
  1310  000930  EC46  F005         	call	_I2C_Master_Read
  1311  000934  6E3D               	movwf	Read_I2C@rcv_data,c
  1312                           
  1313                           ;main.c: 121: I2C_Master_Stop();
  1314  000936  ECAB  F005         	call	_I2C_Master_Stop	;wreg free
  1315                           
  1316                           ;main.c: 122: _delay((unsigned long)((1)*(8000000/4000.0)));
  1317  00093A  0E03               	movlw	3
  1318  00093C  6E3C               	movwf	??_Read_I2C& (0+255),c
  1319  00093E  0E98               	movlw	152
  1320  000940                     u507:
  1321  000940  2EE8               	decfsz	wreg,f,c
  1322  000942  D7FE               	bra	u507
  1323  000944  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1324  000946  D7FC               	bra	u507
  1325                           
  1326                           ;main.c: 123: I2C_Master_Start();
  1327  000948  ECAF  F005         	call	_I2C_Master_Start	;wreg free
  1328                           
  1329                           ;main.c: 124: I2C_Master_Write(Channel_Addr & 0xFF);
  1330  00094C  503E               	movf	Read_I2C@Channel_Addr,w,c
  1331  00094E  ECA0  F005         	call	_I2C_Master_Write
  1332                           
  1333                           ;main.c: 125: rcv_data = I2C_Master_Read(0);
  1334  000952  0E00               	movlw	0
  1335  000954  EC46  F005         	call	_I2C_Master_Read
  1336  000958  6E3D               	movwf	Read_I2C@rcv_data,c
  1337                           
  1338                           ;main.c: 126: I2C_Master_Stop();
  1339  00095A  ECAB  F005         	call	_I2C_Master_Stop	;wreg free
  1340                           
  1341                           ;main.c: 127: _delay((unsigned long)((1)*(8000000/4000.0)));
  1342  00095E  0E03               	movlw	3
  1343  000960  6E3C               	movwf	??_Read_I2C& (0+255),c
  1344  000962  0E98               	movlw	152
  1345  000964                     u517:
  1346  000964  2EE8               	decfsz	wreg,f,c
  1347  000966  D7FE               	bra	u517
  1348  000968  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1349  00096A  D7FC               	bra	u517
  1350                           
  1351                           ;main.c: 128: return rcv_data;
  1352  00096C  503D               	movf	Read_I2C@rcv_data,w,c
  1353  00096E  0012               	return	
  1354  000970                     __end_of_Read_I2C:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           intcon2	equ	0xFF1
  1358                           postinc0	equ	0xFEE
  1359                           wreg	equ	0xFE8
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _I2C_Master_Write *****************
  1363 ;; Defined at:
  1364 ;;		line 774 in file "../KB_Scan.X/Source/i2c.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  d               1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  d               1   20[COMRAM] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       0       0       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0
  1381 ;;      Totals:         1       0       0       0       0       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    4
  1385 ;; This function calls:
  1386 ;;		_I2C_Master_Wait
  1387 ;; This function is called by:
  1388 ;;		_Read_I2C
  1389 ;;		_Write_I2C
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text13
  1394  000B40                     __ptext13:
  1395                           	opt stack 0
  1396  000B40                     _I2C_Master_Write:
  1397                           	opt stack 25
  1398                           
  1399                           ;incstack = 0
  1400                           ;I2C_Master_Write@d stored from wreg
  1401  000B40  6E3A               	movwf	I2C_Master_Write@d,c
  1402                           
  1403                           ;i2c.c: 776: I2C_Master_Wait();
  1404  000B42  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1405                           
  1406                           ;i2c.c: 777: SSPBUF = d;
  1407  000B46  C03A  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1408  000B4A  0012               	return		;funcret
  1409  000B4C                     __end_of_I2C_Master_Write:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           intcon2	equ	0xFF1
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _I2C_Master_Stop *****************
  1418 ;; Defined at:
  1419 ;;		line 756 in file "../KB_Scan.X/Source/i2c.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    4
  1440 ;; This function calls:
  1441 ;;		_I2C_Master_Wait
  1442 ;; This function is called by:
  1443 ;;		_Read_I2C
  1444 ;;		_Write_I2C
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text14
  1449  000B56                     __ptext14:
  1450                           	opt stack 0
  1451  000B56                     _I2C_Master_Stop:
  1452                           	opt stack 25
  1453                           
  1454                           ;i2c.c: 758: I2C_Master_Wait();
  1455                           
  1456                           ;incstack = 0
  1457  000B56  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1458                           
  1459                           ;i2c.c: 759: PEN = 1;
  1460  000B5A  84C5               	bsf	4037,2,c	;volatile
  1461  000B5C  0012               	return		;funcret
  1462  000B5E                     __end_of_I2C_Master_Stop:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           intcon2	equ	0xFF1
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _I2C_Master_Start *****************
  1471 ;; Defined at:
  1472 ;;		line 750 in file "../KB_Scan.X/Source/i2c.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1486 ;;      Params:         0       0       0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    4
  1493 ;; This function calls:
  1494 ;;		_I2C_Master_Wait
  1495 ;; This function is called by:
  1496 ;;		_Read_I2C
  1497 ;;		_Write_I2C
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text15
  1502  000B5E                     __ptext15:
  1503                           	opt stack 0
  1504  000B5E                     _I2C_Master_Start:
  1505                           	opt stack 25
  1506                           
  1507                           ;i2c.c: 752: I2C_Master_Wait();
  1508                           
  1509                           ;incstack = 0
  1510  000B5E  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1511                           
  1512                           ;i2c.c: 753: SEN = 1;
  1513  000B62  80C5               	bsf	4037,0,c	;volatile
  1514  000B64  0012               	return		;funcret
  1515  000B66                     __end_of_I2C_Master_Start:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           intcon2	equ	0xFF1
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _I2C_Master_Read *****************
  1524 ;; Defined at:
  1525 ;;		line 736 in file "../KB_Scan.X/Source/i2c.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  a               1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  a               1   20[COMRAM] unsigned char 
  1530 ;;  temp            1   21[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      unsigned char 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         2       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    4
  1547 ;; This function calls:
  1548 ;;		_I2C_Master_Wait
  1549 ;; This function is called by:
  1550 ;;		_Read_I2C
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text16
  1555  000A8C                     __ptext16:
  1556                           	opt stack 0
  1557  000A8C                     _I2C_Master_Read:
  1558                           	opt stack 25
  1559                           
  1560                           ;incstack = 0
  1561                           ;I2C_Master_Read@a stored from wreg
  1562  000A8C  6E3A               	movwf	I2C_Master_Read@a,c
  1563                           
  1564                           ;i2c.c: 738: uint8_t temp;
  1565                           ;i2c.c: 739: I2C_Master_Wait();
  1566  000A8E  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1567                           
  1568                           ;i2c.c: 740: RCEN = 1;
  1569  000A92  86C5               	bsf	4037,3,c	;volatile
  1570                           
  1571                           ;i2c.c: 741: I2C_Master_Wait();
  1572  000A94  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1573                           
  1574                           ;i2c.c: 742: temp = SSPBUF;
  1575  000A98  CFC9 F03B          	movff	4041,I2C_Master_Read@temp	;volatile
  1576                           
  1577                           ;i2c.c: 743: I2C_Master_Wait();
  1578  000A9C  EC90  F005         	call	_I2C_Master_Wait	;wreg free
  1579                           
  1580                           ;i2c.c: 744: ACKDT = (a)?0:1;
  1581  000AA0  503A               	movf	I2C_Master_Read@a,w,c
  1582  000AA2  A4D8               	btfss	status,2,c
  1583  000AA4  D002               	goto	u40
  1584  000AA6  8AC5               	bsf	4037,5,c	;volatile
  1585  000AA8  D001               	goto	l1071
  1586  000AAA                     u40:
  1587  000AAA  9AC5               	bcf	4037,5,c	;volatile
  1588  000AAC                     l1071:
  1589                           
  1590                           ;i2c.c: 745: ACKEN = 1;
  1591  000AAC  88C5               	bsf	4037,4,c	;volatile
  1592                           
  1593                           ;i2c.c: 746: return temp;
  1594  000AAE  503B               	movf	I2C_Master_Read@temp,w,c
  1595  000AB0  0012               	return	
  1596  000AB2                     __end_of_I2C_Master_Read:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           intcon2	equ	0xFF1
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _I2C_Master_Wait *****************
  1605 ;; Defined at:
  1606 ;;		line 762 in file "../KB_Scan.X/Source/i2c.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1620 ;;      Params:         0       0       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0
  1622 ;;      Temps:          1       0       0       0       0       0       0
  1623 ;;      Totals:         1       0       0       0       0       0       0
  1624 ;;Total ram usage:        1 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    3
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_I2C_Master_Read
  1631 ;;		_I2C_Master_Start
  1632 ;;		_I2C_Master_Stop
  1633 ;;		_I2C_Master_Write
  1634 ;;		_I2C_Master_RepeatedStart
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text17
  1639  000B20                     __ptext17:
  1640                           	opt stack 0
  1641  000B20                     _I2C_Master_Wait:
  1642                           	opt stack 25
  1643  000B20                     l205:
  1644  000B20  B4C7               	btfsc	4039,2,c	;volatile
  1645  000B22  D7FE               	goto	l205
  1646  000B24  CFC5 F039          	movff	4037,??_I2C_Master_Wait	;volatile
  1647  000B28  0E1F               	movlw	31
  1648  000B2A  1639               	andwf	??_I2C_Master_Wait,f,c
  1649  000B2C  B4D8               	btfsc	status,2,c
  1650  000B2E  0012               	return	
  1651  000B30  D7F7               	goto	l205
  1652  000B32                     __end_of_I2C_Master_Wait:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           intcon2	equ	0xFF1
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _Encode_LED_Data_Channel1 *****************
  1661 ;; Defined at:
  1662 ;;		line 148 in file "../KB_Scan.X/Source/main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  DataReadI2C     1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  DataReadI2C     1   20[COMRAM] unsigned char 
  1667 ;;  index           1   19[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      unsigned char 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       0       0       0       0       0       0
  1678 ;;      Locals:         2       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         2       0       0       0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text18
  1692  000A62                     __ptext18:
  1693                           	opt stack 0
  1694  000A62                     _Encode_LED_Data_Channel1:
  1695                           	opt stack 27
  1696                           
  1697                           ;incstack = 0
  1698                           ;Encode_LED_Data_Channel1@DataReadI2C stored from wreg
  1699  000A62  6E3A               	movwf	Encode_LED_Data_Channel1@DataReadI2C,c
  1700                           
  1701                           ;main.c: 150: uint8_t index = 0;
  1702  000A64  0E00               	movlw	0
  1703  000A66  6E39               	movwf	Encode_LED_Data_Channel1@index,c
  1704                           
  1705                           ;main.c: 152: while(!(DataReadI2C & 0b00000001))
  1706  000A68  D004               	goto	l294
  1707  000A6A                     l1313:
  1708                           
  1709                           ;main.c: 153: {
  1710                           ;main.c: 154: DataReadI2C = DataReadI2C >> 1;
  1711  000A6A  90D8               	bcf	status,0,c
  1712  000A6C  303A               	rrcf	Encode_LED_Data_Channel1@DataReadI2C,w,c
  1713  000A6E  6E3A               	movwf	Encode_LED_Data_Channel1@DataReadI2C,c
  1714                           
  1715                           ;main.c: 155: index++;
  1716  000A70  2A39               	incf	Encode_LED_Data_Channel1@index,f,c
  1717  000A72                     l294:
  1718  000A72  A03A               	btfss	Encode_LED_Data_Channel1@DataReadI2C,0,c
  1719  000A74  D7FA               	goto	l1313
  1720                           
  1721                           ;main.c: 156: }
  1722                           ;main.c: 157: return(LED_Data_Chan1[index]);
  1723  000A76  5039               	movf	Encode_LED_Data_Channel1@index,w,c
  1724  000A78  0D01               	mullw	1
  1725  000A7A  0E01               	movlw	low _LED_Data_Chan1
  1726  000A7C  24F3               	addwf	prodl,w,c
  1727  000A7E  6EF6               	movwf	tblptrl,c
  1728  000A80  0E06               	movlw	high _LED_Data_Chan1
  1729  000A82  20F4               	addwfc	prodh,w,c
  1730  000A84  6EF7               	movwf	tblptrh,c
  1731  000A86                     	if	0	;There are less than 3 active tblptr bytes
  1732  000A86                     	endif
  1733  000A86  0008               	tblrd		*
  1734  000A88  50F5               	movf	tablat,w,c
  1735  000A8A  0012               	return	
  1736  000A8C                     __end_of_Encode_LED_Data_Channel1:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon2	equ	0xFF1
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function _INTERRUPT_InterruptManager *****************
  1750 ;; Defined at:
  1751 ;;		line 57 in file "../KB_Scan.X/Source/interrupt_manager.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         0       0       0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0
  1767 ;;      Temps:         14       0       0       0       0       0       0
  1768 ;;      Totals:        14       0       0       0       0       0       0
  1769 ;;Total ram usage:       14 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    2
  1772 ;; This function calls:
  1773 ;;		_I2C_BusCollisionISR
  1774 ;;		_I2C_ISR
  1775 ;; This function is called by:
  1776 ;;		Interrupt level 2
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	intcode
  1781  000008                     __pintcode:
  1782                           	opt stack 0
  1783  000008                     _INTERRUPT_InterruptManager:
  1784                           	opt stack 25
  1785                           
  1786                           ;incstack = 0
  1787  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1788  00000A  CFFA F02B          	movff	pclath,??_INTERRUPT_InterruptManager
  1789  00000E  CFFB F02C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1790  000012  CFE9 F02D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1791  000016  CFEA F02E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1792  00001A  CFE1 F02F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1793  00001E  CFE2 F030          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1794  000022  CFD9 F031          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1795  000026  CFDA F032          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1796  00002A  CFF3 F033          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1797  00002E  CFF4 F034          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1798  000032  CFF6 F035          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1799  000036  CFF7 F036          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1800  00003A  CFF8 F037          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1801  00003E  CFF5 F038          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1802                           
  1803                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  1804  000042  BCF2               	btfsc	intcon,6,c	;volatile
  1805  000044  A6A0               	btfss	4000,3,c	;volatile
  1806  000046  D005               	goto	i2l234
  1807  000048  A6A1               	btfss	4001,3,c	;volatile
  1808  00004A  D003               	goto	i2l234
  1809                           
  1810                           ;interrupt_manager.c: 61: {
  1811                           ;interrupt_manager.c: 62: I2C_BusCollisionISR();
  1812  00004C  ECBA  F005         	call	_I2C_BusCollisionISR	;wreg free
  1813                           
  1814                           ;interrupt_manager.c: 63: }
  1815  000050  D006               	goto	i2l238
  1816  000052                     i2l234:
  1817                           
  1818                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bit
      +                          s.SSPIF == 1)
  1819  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1820  000054  A69D               	btfss	3997,3,c	;volatile
  1821  000056  D003               	goto	i2l238
  1822  000058  B69E               	btfsc	3998,3,c	;volatile
  1823                           
  1824                           ;interrupt_manager.c: 65: {
  1825                           ;interrupt_manager.c: 66: I2C_ISR();
  1826  00005A  EC05  F003         	call	_I2C_ISR	;wreg free
  1827  00005E                     i2l238:
  1828  00005E  C038  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1829  000062  C037  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1830  000066  C036  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1831  00006A  C035  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1832  00006E  C034  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1833  000072  C033  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1834  000076  C032  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1835  00007A  C031  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1836  00007E  C030  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1837  000082  C02F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1838  000086  C02E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1839  00008A  C02D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1840  00008E  C02C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1841  000092  C02B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1842  000096  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1843  000098  0011               	retfie		f
  1844  00009A                     __end_of_INTERRUPT_InterruptManager:
  1845                           	opt stack 0
  1846                           pclatu	equ	0xFFB
  1847                           pclath	equ	0xFFA
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           intcon2	equ	0xFF1
  1856                           postinc0	equ	0xFEE
  1857                           fsr0h	equ	0xFEA
  1858                           fsr0l	equ	0xFE9
  1859                           wreg	equ	0xFE8
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           fsr2h	equ	0xFDA
  1863                           fsr2l	equ	0xFD9
  1864                           status	equ	0xFD8
  1865                           
  1866 ;; *************** function _I2C_ISR *****************
  1867 ;; Defined at:
  1868 ;;		line 235 in file "../KB_Scan.X/Source/i2c.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1882 ;;      Params:         0       0       0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0
  1884 ;;      Temps:          2       0       0       0       0       0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    1
  1889 ;; This function calls:
  1890 ;;		_I2C_FunctionComplete
  1891 ;;		_I2C_Stop
  1892 ;; This function is called by:
  1893 ;;		_INTERRUPT_InterruptManager
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text20
  1898  00060A                     __ptext20:
  1899                           	opt stack 0
  1900  00060A                     _I2C_ISR:
  1901                           	opt stack 25
  1902                           
  1903                           ;i2c.c: 238: static uint8_t *pi2c_buf_ptr;
  1904                           ;i2c.c: 239: static uint16_t i2c_address = 0;
  1905                           ;i2c.c: 240: static uint8_t i2c_bytes_left = 0;
  1906                           ;i2c.c: 241: static uint8_t i2c_10bit_address_restart = 0;
  1907                           ;i2c.c: 243: PIR1bits.SSPIF = 0;
  1908                           
  1909                           ;incstack = 0
  1910  00060A  969E               	bcf	3998,3,c	;volatile
  1911                           
  1912                           ;i2c.c: 247: if(SSPCON1bits.WCOL)
  1913  00060C  AEC6               	btfss	4038,7,c	;volatile
  1914  00060E  D0F9               	goto	i2l1233
  1915                           
  1916                           ;i2c.c: 248: {
  1917                           ;i2c.c: 250: SSPCON1bits.WCOL = 0;
  1918  000610  9EC6               	bcf	4038,7,c	;volatile
  1919                           
  1920                           ;i2c.c: 251: i2c_state = S_MASTER_IDLE;
  1921  000612  0E00               	movlw	0
  1922  000614  6E11               	movwf	_i2c_state,c
  1923                           
  1924                           ;i2c.c: 252: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  1925  000616  EE20 F003          	lfsr	2,3
  1926  00061A  500A               	movf	_p_i2c_current,w,c
  1927  00061C  26D9               	addwf	fsr2l,f,c
  1928  00061E  500B               	movf	_p_i2c_current+1,w,c
  1929  000620  22DA               	addwfc	fsr2h,f,c
  1930  000622  CFDE F029          	movff	postinc2,??_I2C_ISR
  1931  000626  CFDD F02A          	movff	postdec2,??_I2C_ISR+1
  1932  00062A  C029  FFD9         	movff	??_I2C_ISR,fsr2l
  1933  00062E  C02A  FFDA         	movff	??_I2C_ISR+1,fsr2h
  1934  000632  0E01               	movlw	1
  1935  000634  6EDF               	movwf	indf2,c
  1936                           
  1937                           ;i2c.c: 255: p_i2c_current = (0);
  1938  000636  0E00               	movlw	0
  1939  000638  6E0A               	movwf	_p_i2c_current,c
  1940  00063A  0E00               	movlw	0
  1941  00063C  6E0B               	movwf	_p_i2c_current+1,c
  1942                           
  1943                           ;i2c.c: 257: return;
  1944  00063E  0012               	return	
  1945  000640                     i2l106:
  1946                           
  1947                           ;i2c.c: 265: if(i2c_object.trStatus.s.empty != 1)
  1948  000640  B205               	btfsc	_i2c_object+4,1,c
  1949  000642  0012               	return	
  1950                           
  1951                           ;i2c.c: 266: {
  1952                           ;i2c.c: 268: p_i2c_current = i2c_object.pTrHead;
  1953  000644  C003  F00A         	movff	_i2c_object+2,_p_i2c_current
  1954  000648  C004  F00B         	movff	_i2c_object+3,_p_i2c_current+1
  1955                           
  1956                           ;i2c.c: 269: i2c_trb_count = i2c_object.pTrHead->count;
  1957  00064C  C003  FFD9         	movff	_i2c_object+2,fsr2l
  1958  000650  C004  FFDA         	movff	_i2c_object+3,fsr2h
  1959  000654  50DF               	movf	indf2,w,c
  1960  000656  6E10               	movwf	_i2c_trb_count,c
  1961                           
  1962                           ;i2c.c: 270: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  1963  000658  EE20 F001          	lfsr	2,1
  1964  00065C  5003               	movf	_i2c_object+2,w,c
  1965  00065E  26D9               	addwf	fsr2l,f,c
  1966  000660  5004               	movf	_i2c_object+3,w,c
  1967  000662  22DA               	addwfc	fsr2h,f,c
  1968  000664  CFDE F00C          	movff	postinc2,_p_i2c_trb_current
  1969  000668  CFDD F00D          	movff	postdec2,_p_i2c_trb_current+1
  1970                           
  1971                           ;i2c.c: 272: i2c_object.pTrHead++;
  1972  00066C  0E06               	movlw	6
  1973  00066E  2603               	addwf	_i2c_object+2,f,c
  1974  000670  0E00               	movlw	0
  1975  000672  2204               	addwfc	_i2c_object+3,f,c
  1976                           
  1977                           ;i2c.c: 275: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  1978  000674  0E24               	movlw	low (_i2c_tr_queue+6)
  1979  000676  1803               	xorwf	_i2c_object+2,w,c
  1980  000678  E108               	bnz	i2l1125
  1981  00067A  0E00               	movlw	high (_i2c_tr_queue+6)
  1982  00067C  1804               	xorwf	_i2c_object+3,w,c
  1983  00067E  A4D8               	btfss	status,2,c
  1984  000680  D004               	goto	i2l1125
  1985                           
  1986                           ;i2c.c: 276: {
  1987                           ;i2c.c: 278: i2c_object.pTrHead = i2c_tr_queue;
  1988  000682  0E1E               	movlw	low _i2c_tr_queue
  1989  000684  6E03               	movwf	_i2c_object+2,c
  1990  000686  0E00               	movlw	high _i2c_tr_queue
  1991  000688  6E04               	movwf	_i2c_object+3,c
  1992  00068A                     i2l1125:
  1993                           
  1994                           ;i2c.c: 279: }
  1995                           ;i2c.c: 283: i2c_object.trStatus.s.full = 0;
  1996  00068A  9005               	bcf	_i2c_object+4,0,c
  1997                           
  1998                           ;i2c.c: 286: if(i2c_object.pTrHead == i2c_object.pTrTail)
  1999  00068C  5001               	movf	_i2c_object,w,c
  2000  00068E  1803               	xorwf	_i2c_object+2,w,c
  2001  000690  E104               	bnz	i2l109
  2002  000692  5002               	movf	_i2c_object+1,w,c
  2003  000694  1804               	xorwf	_i2c_object+3,w,c
  2004  000696  B4D8               	btfsc	status,2,c
  2005                           
  2006                           ;i2c.c: 287: {
  2007                           ;i2c.c: 289: i2c_object.trStatus.s.empty = 1;
  2008  000698  8205               	bsf	_i2c_object+4,1,c
  2009  00069A                     i2l109:
  2010                           
  2011                           ;i2c.c: 290: }
  2012                           ;i2c.c: 293: SSPCON2bits.SEN = 1;
  2013  00069A  80C5               	bsf	4037,0,c	;volatile
  2014                           
  2015                           ;i2c.c: 296: i2c_state = S_MASTER_SEND_ADDR;
  2016  00069C  0E02               	movlw	2
  2017  00069E  6E11               	movwf	_i2c_state,c
  2018                           
  2019                           ;i2c.c: 297: }
  2020                           ;i2c.c: 299: break;
  2021  0006A0  0012               	return	
  2022  0006A2                     i2l111:
  2023                           
  2024                           ;i2c.c: 306: SSPCON2bits.RSEN = 1;
  2025  0006A2  82C5               	bsf	4037,1,c	;volatile
  2026                           
  2027                           ;i2c.c: 309: i2c_state = S_MASTER_SEND_ADDR;
  2028  0006A4  0E02               	movlw	2
  2029  0006A6  6E11               	movwf	_i2c_state,c
  2030                           
  2031                           ;i2c.c: 311: break;
  2032  0006A8  0012               	return	
  2033  0006AA                     i2l112:
  2034                           
  2035                           ;i2c.c: 315: if(SSPCON2bits.ACKSTAT)
  2036  0006AA  ACC5               	btfss	4037,6,c	;volatile
  2037  0006AC  D005               	goto	i2l1137
  2038                           
  2039                           ;i2c.c: 316: {
  2040                           ;i2c.c: 317: i2c_object.i2cErrors++;
  2041  0006AE  2A07               	incf	_i2c_object+6,f,c
  2042                           
  2043                           ;i2c.c: 318: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2044  0006B0  0E04               	movlw	4
  2045  0006B2  ECE4  F004         	call	_I2C_Stop
  2046                           
  2047                           ;i2c.c: 319: }
  2048  0006B6  0012               	return	
  2049  0006B8                     i2l1137:
  2050                           
  2051                           ;i2c.c: 320: else
  2052                           ;i2c.c: 321: {
  2053                           ;i2c.c: 323: SSPBUF = (i2c_address >> 1) & 0x00FF;
  2054  0006B8  90D8               	bcf	status,0,c
  2055  0006BA  3025               	rrcf	I2C_ISR@i2c_address+1,w,c
  2056  0006BC  6E2A               	movwf	(??_I2C_ISR+1)& (0+255),c
  2057  0006BE  3024               	rrcf	I2C_ISR@i2c_address,w,c
  2058  0006C0  6E29               	movwf	??_I2C_ISR& (0+255),c
  2059  0006C2  5029               	movf	??_I2C_ISR,w,c
  2060  0006C4  6EC9               	movwf	4041,c	;volatile
  2061                           
  2062                           ;i2c.c: 326: if(i2c_address & 0x01)
  2063  0006C6  A024               	btfss	I2C_ISR@i2c_address,0,c
  2064  0006C8  D003               	goto	i2l1143
  2065                           
  2066                           ;i2c.c: 327: {
  2067                           ;i2c.c: 330: i2c_state = S_MASTER_10BIT_RESTART;
  2068  0006CA  0E0B               	movlw	11
  2069  0006CC  6E11               	movwf	_i2c_state,c
  2070                           
  2071                           ;i2c.c: 331: }
  2072  0006CE  0012               	return	
  2073  0006D0                     i2l1143:
  2074                           
  2075                           ;i2c.c: 332: else
  2076                           ;i2c.c: 333: {
  2077                           ;i2c.c: 335: i2c_state = S_MASTER_SEND_DATA;
  2078  0006D0  0E03               	movlw	3
  2079  0006D2  6E11               	movwf	_i2c_state,c
  2080                           
  2081                           ;i2c.c: 336: }
  2082                           ;i2c.c: 337: }
  2083                           ;i2c.c: 339: break;
  2084  0006D4  0012               	return	
  2085  0006D6                     i2l117:
  2086                           
  2087                           ;i2c.c: 343: if(SSPCON2bits.ACKSTAT)
  2088  0006D6  ACC5               	btfss	4037,6,c	;volatile
  2089  0006D8  D005               	goto	i2l118
  2090                           
  2091                           ;i2c.c: 344: {
  2092                           ;i2c.c: 345: i2c_object.i2cErrors++;
  2093  0006DA  2A07               	incf	_i2c_object+6,f,c
  2094                           
  2095                           ;i2c.c: 346: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2096  0006DC  0E04               	movlw	4
  2097  0006DE  ECE4  F004         	call	_I2C_Stop
  2098                           
  2099                           ;i2c.c: 347: }
  2100  0006E2  0012               	return	
  2101  0006E4                     i2l118:
  2102                           
  2103                           ;i2c.c: 348: else
  2104                           ;i2c.c: 349: {
  2105                           ;i2c.c: 352: SSPCON2bits.RSEN = 1;
  2106  0006E4  82C5               	bsf	4037,1,c	;volatile
  2107                           
  2108                           ;i2c.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2109  0006E6  C024  F029         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  2110  0006EA  C025  F02A         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  2111  0006EE  C02A  F029         	movff	??_I2C_ISR+1,??_I2C_ISR
  2112  0006F2  6A2A               	clrf	??_I2C_ISR+1,c
  2113  0006F4  0E06               	movlw	6
  2114  0006F6  1629               	andwf	??_I2C_ISR,f,c
  2115  0006F8  0E00               	movlw	0
  2116  0006FA  162A               	andwf	??_I2C_ISR+1,f,c
  2117  0006FC  0EF0               	movlw	240
  2118  0006FE  1029               	iorwf	??_I2C_ISR,w,c
  2119  000700  6E24               	movwf	I2C_ISR@i2c_address,c
  2120  000702  502A               	movf	??_I2C_ISR+1,w,c
  2121  000704  6E25               	movwf	I2C_ISR@i2c_address+1,c
  2122                           
  2123                           ;i2c.c: 359: i2c_address |= 0x0001;
  2124  000706  8024               	bsf	I2C_ISR@i2c_address,0,c
  2125                           
  2126                           ;i2c.c: 362: i2c_10bit_address_restart = 1;
  2127  000708  0E01               	movlw	1
  2128  00070A  6E0E               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  2129                           
  2130                           ;i2c.c: 365: i2c_state = S_MASTER_SEND_ADDR;
  2131  00070C  0E02               	movlw	2
  2132  00070E  6E11               	movwf	_i2c_state,c
  2133                           
  2134                           ;i2c.c: 366: }
  2135                           ;i2c.c: 368: break;
  2136  000710  0012               	return	
  2137  000712                     i2l1157:
  2138                           
  2139                           ;i2c.c: 383: if(i2c_10bit_address_restart != 1)
  2140  000712  040E               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  2141  000714  B4D8               	btfsc	status,2,c
  2142  000716  D01A               	goto	i2l122
  2143                           
  2144                           ;i2c.c: 384: {
  2145                           ;i2c.c: 386: i2c_address = p_i2c_trb_current->address;
  2146  000718  C00C  FFD9         	movff	_p_i2c_trb_current,fsr2l
  2147  00071C  C00D  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  2148  000720  CFDE F024          	movff	postinc2,I2C_ISR@i2c_address
  2149  000724  CFDD F025          	movff	postdec2,I2C_ISR@i2c_address+1
  2150                           
  2151                           ;i2c.c: 387: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  2152  000728  EE20 F003          	lfsr	2,3
  2153  00072C  500C               	movf	_p_i2c_trb_current,w,c
  2154  00072E  26D9               	addwf	fsr2l,f,c
  2155  000730  500D               	movf	_p_i2c_trb_current+1,w,c
  2156  000732  22DA               	addwfc	fsr2h,f,c
  2157  000734  CFDE F008          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  2158  000738  CFDD F009          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  2159                           
  2160                           ;i2c.c: 388: i2c_bytes_left = p_i2c_trb_current->length;
  2161  00073C  EE20 F002          	lfsr	2,2
  2162  000740  500C               	movf	_p_i2c_trb_current,w,c
  2163  000742  26D9               	addwf	fsr2l,f,c
  2164  000744  500D               	movf	_p_i2c_trb_current+1,w,c
  2165  000746  22DA               	addwfc	fsr2h,f,c
  2166  000748  50DF               	movf	indf2,w,c
  2167  00074A  6E0F               	movwf	I2C_ISR@i2c_bytes_left,c
  2168  00074C                     i2l122:
  2169                           
  2170                           ;i2c.c: 411: else
  2171                           ;i2c.c: 412: {
  2172                           ;i2c.c: 414: SSPBUF = i2c_address;
  2173  00074C  C024  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  2174                           
  2175                           ;i2c.c: 415: if(i2c_address & 0x01)
  2176  000750  A024               	btfss	I2C_ISR@i2c_address,0,c
  2177  000752  D003               	goto	i2l1177
  2178                           
  2179                           ;i2c.c: 416: {
  2180                           ;i2c.c: 418: i2c_state = S_MASTER_ACK_ADDR;
  2181  000754  0E05               	movlw	5
  2182  000756  6E11               	movwf	_i2c_state,c
  2183                           
  2184                           ;i2c.c: 419: }
  2185  000758  0012               	return	
  2186  00075A                     i2l1177:
  2187                           
  2188                           ;i2c.c: 420: else
  2189                           ;i2c.c: 421: {
  2190                           ;i2c.c: 423: i2c_state = S_MASTER_SEND_DATA;
  2191  00075A  0E03               	movlw	3
  2192  00075C  6E11               	movwf	_i2c_state,c
  2193                           
  2194                           ;i2c.c: 424: }
  2195                           ;i2c.c: 425: }
  2196                           ;i2c.c: 426: break;
  2197  00075E  0012               	return	
  2198  000760                     i2l128:
  2199                           
  2200                           ;i2c.c: 431: if(SSPCON2bits.ACKSTAT)
  2201  000760  ACC5               	btfss	4037,6,c	;volatile
  2202  000762  D006               	goto	i2l1185
  2203                           
  2204                           ;i2c.c: 432: {
  2205                           ;i2c.c: 434: i2c_object.i2cErrors++;
  2206  000764  2A07               	incf	_i2c_object+6,f,c
  2207                           
  2208                           ;i2c.c: 437: SSPCON2bits.ACKSTAT = 0;
  2209  000766  9CC5               	bcf	4037,6,c	;volatile
  2210                           
  2211                           ;i2c.c: 440: I2C_Stop(I2C_DATA_NO_ACK);
  2212  000768  0E05               	movlw	5
  2213  00076A  ECE4  F004         	call	_I2C_Stop
  2214                           
  2215                           ;i2c.c: 442: }
  2216  00076E  0012               	return	
  2217  000770                     i2l1185:
  2218                           
  2219                           ;i2c.c: 443: else
  2220                           ;i2c.c: 444: {
  2221                           ;i2c.c: 446: if(i2c_bytes_left-- == 0U)
  2222  000770  060F               	decf	I2C_ISR@i2c_bytes_left,f,c
  2223  000772  280F               	incf	I2C_ISR@i2c_bytes_left,w,c
  2224  000774  A4D8               	btfss	status,2,c
  2225  000776  D00E               	goto	i2l1195
  2226                           
  2227                           ;i2c.c: 447: {
  2228                           ;i2c.c: 451: p_i2c_trb_current++;
  2229  000778  0E06               	movlw	6
  2230  00077A  260C               	addwf	_p_i2c_trb_current,f,c
  2231  00077C  0E00               	movlw	0
  2232  00077E  220D               	addwfc	_p_i2c_trb_current+1,f,c
  2233                           
  2234                           ;i2c.c: 454: if(--i2c_trb_count == 0)
  2235  000780  2E10               	decfsz	_i2c_trb_count,f,c
  2236  000782  D004               	goto	i2l132
  2237                           
  2238                           ;i2c.c: 455: {
  2239                           ;i2c.c: 456: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2240  000784  0E00               	movlw	0
  2241  000786  ECE4  F004         	call	_I2C_Stop
  2242                           
  2243                           ;i2c.c: 457: }
  2244  00078A  0012               	return	
  2245  00078C                     i2l132:
  2246                           
  2247                           ;i2c.c: 458: else
  2248                           ;i2c.c: 459: {
  2249                           ;i2c.c: 466: SSPCON2bits.RSEN = 1;
  2250  00078C  82C5               	bsf	4037,1,c	;volatile
  2251                           
  2252                           ;i2c.c: 469: i2c_state = S_MASTER_SEND_ADDR;
  2253  00078E  0E02               	movlw	2
  2254  000790  6E11               	movwf	_i2c_state,c
  2255                           
  2256                           ;i2c.c: 471: }
  2257                           ;i2c.c: 472: }
  2258  000792  0012               	return	
  2259  000794                     i2l1195:
  2260                           
  2261                           ;i2c.c: 473: else
  2262                           ;i2c.c: 474: {
  2263                           ;i2c.c: 476: SSPBUF = *pi2c_buf_ptr++;
  2264  000794  C008  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2265  000798  C009  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2266  00079C  50DF               	movf	indf2,w,c
  2267  00079E  6EC9               	movwf	4041,c	;volatile
  2268  0007A0  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2269  0007A2  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2270                           
  2271                           ;i2c.c: 477: }
  2272                           ;i2c.c: 478: }
  2273                           ;i2c.c: 479: break;
  2274  0007A4  0012               	return	
  2275  0007A6                     i2l135:
  2276                           
  2277                           ;i2c.c: 484: if(SSPCON2bits.ACKSTAT)
  2278  0007A6  ACC5               	btfss	4037,6,c	;volatile
  2279  0007A8  D006               	goto	i2l136
  2280                           
  2281                           ;i2c.c: 485: {
  2282                           ;i2c.c: 488: i2c_object.i2cErrors++;
  2283  0007AA  2A07               	incf	_i2c_object+6,f,c
  2284                           
  2285                           ;i2c.c: 491: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2286  0007AC  0E04               	movlw	4
  2287  0007AE  ECE4  F004         	call	_I2C_Stop
  2288                           
  2289                           ;i2c.c: 494: SSPCON2bits.ACKSTAT = 0;
  2290  0007B2  9CC5               	bcf	4037,6,c	;volatile
  2291                           
  2292                           ;i2c.c: 495: }
  2293  0007B4  0012               	return	
  2294  0007B6                     i2l136:
  2295                           
  2296                           ;i2c.c: 496: else
  2297                           ;i2c.c: 497: {
  2298                           ;i2c.c: 498: SSPCON2bits.RCEN = 1;
  2299  0007B6  86C5               	bsf	4037,3,c	;volatile
  2300                           
  2301                           ;i2c.c: 499: i2c_state = S_MASTER_ACK_RCV_DATA;
  2302  0007B8  0E08               	movlw	8
  2303  0007BA  6E11               	movwf	_i2c_state,c
  2304                           
  2305                           ;i2c.c: 500: }
  2306                           ;i2c.c: 501: break;
  2307  0007BC  0012               	return	
  2308  0007BE                     i2l1207:
  2309                           
  2310                           ;i2c.c: 508: i2c_state = S_MASTER_ACK_RCV_DATA;
  2311  0007BE  0E08               	movlw	8
  2312  0007C0  6E11               	movwf	_i2c_state,c
  2313                           
  2314                           ;i2c.c: 511: SSPCON2bits.RCEN = 1;
  2315  0007C2  86C5               	bsf	4037,3,c	;volatile
  2316                           
  2317                           ;i2c.c: 513: break;
  2318  0007C4  0012               	return	
  2319  0007C6                     i2l1211:
  2320                           
  2321                           ;i2c.c: 518: *pi2c_buf_ptr++ = SSPBUF;
  2322  0007C6  C008  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2323  0007CA  C009  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2324  0007CE  CFC9 FFDF          	movff	4041,indf2	;volatile
  2325  0007D2  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2326  0007D4  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2327                           
  2328                           ;i2c.c: 521: if(--i2c_bytes_left)
  2329  0007D6  0E01               	movlw	1
  2330  0007D8  5E0F               	subwf	I2C_ISR@i2c_bytes_left,f,c
  2331  0007DA  B4D8               	btfsc	status,2,c
  2332  0007DC  D004               	goto	i2l140
  2333                           
  2334                           ;i2c.c: 522: {
  2335                           ;i2c.c: 528: SSPCON2bits.ACKDT = 0;
  2336  0007DE  9AC5               	bcf	4037,5,c	;volatile
  2337                           
  2338                           ;i2c.c: 531: i2c_state = S_MASTER_RCV_DATA;
  2339  0007E0  0E06               	movlw	6
  2340  0007E2  6E11               	movwf	_i2c_state,c
  2341                           
  2342                           ;i2c.c: 532: }
  2343  0007E4  D003               	goto	i2l1223
  2344  0007E6                     i2l140:
  2345                           
  2346                           ;i2c.c: 533: else
  2347                           ;i2c.c: 534: {
  2348                           ;i2c.c: 538: SSPCON2bits.ACKDT = 1;
  2349  0007E6  8AC5               	bsf	4037,5,c	;volatile
  2350                           
  2351                           ;i2c.c: 540: I2C_FunctionComplete();
  2352  0007E8  EC84  F005         	call	_I2C_FunctionComplete	;wreg free
  2353  0007EC                     i2l1223:
  2354                           
  2355                           ;i2c.c: 541: }
  2356                           ;i2c.c: 544: SSPCON2bits.ACKEN = 1;
  2357  0007EC  88C5               	bsf	4037,4,c	;volatile
  2358                           
  2359                           ;i2c.c: 545: break;
  2360  0007EE  0012               	return	
  2361  0007F0                     i2l1225:
  2362                           
  2363                           ;i2c.c: 548: case S_MASTER_SEND_STOP:
  2364                           ;i2c.c: 551: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2365  0007F0  0E00               	movlw	0
  2366  0007F2  ECE4  F004         	call	_I2C_Stop
  2367                           
  2368                           ;i2c.c: 552: break;
  2369  0007F6  0012               	return	
  2370  0007F8                     i2l1227:
  2371                           
  2372                           ;i2c.c: 558: i2c_object.i2cErrors++;
  2373  0007F8  2A07               	incf	_i2c_object+6,f,c
  2374                           
  2375                           ;i2c.c: 559: I2C_Stop(I2C_LOST_STATE);
  2376  0007FA  0E06               	movlw	6
  2377  0007FC  ECE4  F004         	call	_I2C_Stop
  2378                           
  2379                           ;i2c.c: 562: }
  2380                           
  2381                           ;i2c.c: 560: break;
  2382  000800  0012               	return	
  2383  000802                     i2l1233:
  2384  000802  5011               	movf	_i2c_state,w,c
  2385                           
  2386                           ; Switch size 1, requested type "space"
  2387                           ; Number of cases is 11, Range of values is 0 to 11
  2388                           ; switch strategies available:
  2389                           ; Name         Instructions Cycles
  2390                           ; simple_byte           34    18 (average)
  2391                           ;	Chosen strategy is simple_byte
  2392  000804  0A00               	xorlw	0	; case 0
  2393  000806  B4D8               	btfsc	status,2,c
  2394  000808  D71B               	goto	i2l106
  2395  00080A  0A01               	xorlw	1	; case 1
  2396  00080C  B4D8               	btfsc	status,2,c
  2397  00080E  D749               	goto	i2l111
  2398  000810  0A03               	xorlw	3	; case 2
  2399  000812  B4D8               	btfsc	status,2,c
  2400  000814  D77E               	goto	i2l1157
  2401  000816  0A01               	xorlw	1	; case 3
  2402  000818  B4D8               	btfsc	status,2,c
  2403  00081A  D7A2               	goto	i2l128
  2404  00081C  0A07               	xorlw	7	; case 4
  2405  00081E  B4D8               	btfsc	status,2,c
  2406  000820  D7E7               	goto	i2l1225
  2407  000822  0A01               	xorlw	1	; case 5
  2408  000824  B4D8               	btfsc	status,2,c
  2409  000826  D7BF               	goto	i2l135
  2410  000828  0A03               	xorlw	3	; case 6
  2411  00082A  B4D8               	btfsc	status,2,c
  2412  00082C  D7C8               	goto	i2l1207
  2413  00082E  0A01               	xorlw	1	; case 7
  2414  000830  B4D8               	btfsc	status,2,c
  2415  000832  D7DE               	goto	i2l1225
  2416  000834  0A0F               	xorlw	15	; case 8
  2417  000836  B4D8               	btfsc	status,2,c
  2418  000838  D7C6               	goto	i2l1211
  2419  00083A  0A02               	xorlw	2	; case 10
  2420  00083C  B4D8               	btfsc	status,2,c
  2421  00083E  D735               	goto	i2l112
  2422  000840  0A01               	xorlw	1	; case 11
  2423  000842  B4D8               	btfsc	status,2,c
  2424  000844  D748               	goto	i2l117
  2425  000846  D7D8               	goto	i2l1227
  2426  000848                     __end_of_I2C_ISR:
  2427                           	opt stack 0
  2428                           pclatu	equ	0xFFB
  2429                           pclath	equ	0xFFA
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodh	equ	0xFF4
  2435                           prodl	equ	0xFF3
  2436                           intcon	equ	0xFF2
  2437                           intcon2	equ	0xFF1
  2438                           postinc0	equ	0xFEE
  2439                           fsr0h	equ	0xFEA
  2440                           fsr0l	equ	0xFE9
  2441                           wreg	equ	0xFE8
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           postinc2	equ	0xFDE
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           status	equ	0xFD8
  2450                           
  2451 ;; *************** function _I2C_Stop *****************
  2452 ;; Defined at:
  2453 ;;		line 583 in file "../KB_Scan.X/Source/i2c.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  completion_c    1    wreg     enum E3229
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  completion_c    1    2[COMRAM] enum E3229
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         0       0       0       0       0       0       0
  2468 ;;      Locals:         1       0       0       0       0       0       0
  2469 ;;      Temps:          2       0       0       0       0       0       0
  2470 ;;      Totals:         3       0       0       0       0       0       0
  2471 ;;Total ram usage:        3 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_I2C_ISR
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text21
  2481  0009C8                     __ptext21:
  2482                           	opt stack 0
  2483  0009C8                     _I2C_Stop:
  2484                           	opt stack 25
  2485                           
  2486                           ;incstack = 0
  2487                           ;I2C_Stop@completion_code stored from wreg
  2488  0009C8  6E28               	movwf	I2C_Stop@completion_code,c
  2489                           
  2490                           ;i2c.c: 586: SSPCON2bits.PEN = 1;
  2491  0009CA  84C5               	bsf	4037,2,c	;volatile
  2492                           
  2493                           ;i2c.c: 589: if (p_i2c_current->pTrFlag != (0))
  2494  0009CC  EE20 F003          	lfsr	2,3
  2495  0009D0  500A               	movf	_p_i2c_current,w,c
  2496  0009D2  26D9               	addwf	fsr2l,f,c
  2497  0009D4  500B               	movf	_p_i2c_current+1,w,c
  2498  0009D6  22DA               	addwfc	fsr2h,f,c
  2499  0009D8  50DE               	movf	postinc2,w,c
  2500  0009DA  10DE               	iorwf	postinc2,w,c
  2501  0009DC  B4D8               	btfsc	status,2,c
  2502  0009DE  D010               	goto	i2l1053
  2503                           
  2504                           ;i2c.c: 590: {
  2505                           ;i2c.c: 592: *(p_i2c_current->pTrFlag) = completion_code;
  2506  0009E0  EE20 F003          	lfsr	2,3
  2507  0009E4  500A               	movf	_p_i2c_current,w,c
  2508  0009E6  26D9               	addwf	fsr2l,f,c
  2509  0009E8  500B               	movf	_p_i2c_current+1,w,c
  2510  0009EA  22DA               	addwfc	fsr2h,f,c
  2511  0009EC  CFDE F026          	movff	postinc2,??_I2C_Stop
  2512  0009F0  CFDD F027          	movff	postdec2,??_I2C_Stop+1
  2513  0009F4  C026  FFD9         	movff	??_I2C_Stop,fsr2l
  2514  0009F8  C027  FFDA         	movff	??_I2C_Stop+1,fsr2h
  2515  0009FC  C028  FFDF         	movff	I2C_Stop@completion_code,indf2
  2516  000A00                     i2l1053:
  2517                           
  2518                           ;i2c.c: 593: }
  2519                           ;i2c.c: 596: i2c_state = S_MASTER_IDLE;
  2520  000A00  0E00               	movlw	0
  2521  000A02  6E11               	movwf	_i2c_state,c
  2522  000A04  0012               	return		;funcret
  2523  000A06                     __end_of_I2C_Stop:
  2524                           	opt stack 0
  2525                           pclatu	equ	0xFFB
  2526                           pclath	equ	0xFFA
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           prodh	equ	0xFF4
  2532                           prodl	equ	0xFF3
  2533                           intcon	equ	0xFF2
  2534                           intcon2	equ	0xFF1
  2535                           postinc0	equ	0xFEE
  2536                           fsr0h	equ	0xFEA
  2537                           fsr0l	equ	0xFE9
  2538                           wreg	equ	0xFE8
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           postinc2	equ	0xFDE
  2543                           postdec2	equ	0xFDD
  2544                           fsr2h	equ	0xFDA
  2545                           fsr2l	equ	0xFD9
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _I2C_FunctionComplete *****************
  2549 ;; Defined at:
  2550 ;;		line 565 in file "../KB_Scan.X/Source/i2c.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2564 ;;      Params:         0       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_I2C_ISR
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text22
  2578  000B08                     __ptext22:
  2579                           	opt stack 0
  2580  000B08                     _I2C_FunctionComplete:
  2581                           	opt stack 25
  2582                           
  2583                           ;i2c.c: 569: p_i2c_trb_current++;
  2584                           
  2585                           ;incstack = 0
  2586  000B08  0E06               	movlw	6
  2587  000B0A  260C               	addwf	_p_i2c_trb_current,f,c
  2588  000B0C  0E00               	movlw	0
  2589  000B0E  220D               	addwfc	_p_i2c_trb_current+1,f,c
  2590                           
  2591                           ;i2c.c: 572: if(--i2c_trb_count == 0)
  2592  000B10  2E10               	decfsz	_i2c_trb_count,f,c
  2593  000B12  D003               	goto	i2l1061
  2594                           
  2595                           ;i2c.c: 573: {
  2596                           ;i2c.c: 574: i2c_state = S_MASTER_SEND_STOP;
  2597  000B14  0E04               	movlw	4
  2598  000B16  6E11               	movwf	_i2c_state,c
  2599                           
  2600                           ;i2c.c: 575: }
  2601  000B18  0012               	return	
  2602  000B1A                     i2l1061:
  2603                           
  2604                           ;i2c.c: 576: else
  2605                           ;i2c.c: 577: {
  2606                           ;i2c.c: 578: i2c_state = S_MASTER_RESTART;
  2607  000B1A  0E01               	movlw	1
  2608  000B1C  6E11               	movwf	_i2c_state,c
  2609  000B1E  0012               	return	
  2610  000B20                     __end_of_I2C_FunctionComplete:
  2611                           	opt stack 0
  2612                           pclatu	equ	0xFFB
  2613                           pclath	equ	0xFFA
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           intcon	equ	0xFF2
  2621                           intcon2	equ	0xFF1
  2622                           postinc0	equ	0xFEE
  2623                           fsr0h	equ	0xFEA
  2624                           fsr0l	equ	0xFE9
  2625                           wreg	equ	0xFE8
  2626                           fsr1h	equ	0xFE2
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           postdec2	equ	0xFDD
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _I2C_BusCollisionISR *****************
  2636 ;; Defined at:
  2637 ;;		line 730 in file "../KB_Scan.X/Source/i2c.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		None
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2651 ;;      Params:         0       0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_INTERRUPT_InterruptManager
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text23
  2665  000B74                     __ptext23:
  2666                           	opt stack 0
  2667  000B74                     _I2C_BusCollisionISR:
  2668                           	opt stack 26
  2669                           
  2670                           ;incstack = 0
  2671  000B74  0012               	return		;funcret
  2672  000B76                     __end_of_I2C_BusCollisionISR:
  2673                           	opt stack 0
  2674                           pclatu	equ	0xFFB
  2675                           pclath	equ	0xFFA
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           prodh	equ	0xFF4
  2681                           prodl	equ	0xFF3
  2682                           intcon	equ	0xFF2
  2683                           intcon2	equ	0xFF1
  2684                           postinc0	equ	0xFEE
  2685                           fsr0h	equ	0xFEA
  2686                           fsr0l	equ	0xFE9
  2687                           wreg	equ	0xFE8
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           postinc2	equ	0xFDE
  2692                           postdec2	equ	0xFDD
  2693                           fsr2h	equ	0xFDA
  2694                           fsr2l	equ	0xFD9
  2695                           status	equ	0xFD8
  2696                           pclatu	equ	0xFFB
  2697                           pclath	equ	0xFFA
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           intcon	equ	0xFF2
  2705                           intcon2	equ	0xFF1
  2706                           postinc0	equ	0xFEE
  2707                           fsr0h	equ	0xFEA
  2708                           fsr0l	equ	0xFE9
  2709                           wreg	equ	0xFE8
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           postinc2	equ	0xFDE
  2714                           postdec2	equ	0xFDD
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719                           	psect	rparam
  2720  0000                     pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           intcon2	equ	0xFF1
  2730                           postinc0	equ	0xFEE
  2731                           fsr0h	equ	0xFEA
  2732                           fsr0l	equ	0xFE9
  2733                           wreg	equ	0xFE8
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743                           	psect	temp
  2744  000041                     btemp:
  2745                           	opt stack 0
  2746  000041                     	ds	1
  2747  0000                     int$flags	set	btemp
  2748                           pclatu	equ	0xFFB
  2749                           pclath	equ	0xFFA
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           intcon2	equ	0xFF1
  2758                           postinc0	equ	0xFEE
  2759                           fsr0h	equ	0xFEA
  2760                           fsr0l	equ	0xFE9
  2761                           wreg	equ	0xFE8
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           indf2	equ	0xFDF
  2765                           postinc2	equ	0xFDE
  2766                           postdec2	equ	0xFDD
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    F3347.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F3342.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S35$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    S47$pTrFlag	PTR enum E3229 size(2) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    S47$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S58$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    S58$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_Read_I2C
    _Write_I2C->_Encode_LED_Data_Channel1
    _Write_I2C->_I2C_Master_Write
    _Read_I2C->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     642
                                             25 COMRAM     2     2      0
           _Encode_LED_Data_Channel1
                           _Read_I2C
                       _Read_Port_IN
                  _SYSTEM_Initialize
                          _Write_I2C
 ---------------------------------------------------------------------------------
 (1) _Write_I2C                                            3     2      1     337
                                             21 COMRAM     3     2      1
           _Encode_LED_Data_Channel1 (ARG)
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CCP2_Initialize
                   _CVREF_Initialize
                   _ECCP1_Initialize
                 _EXT_INT_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CVREF_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Port_IN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_I2C                                             3     3      0     120
                                             22 COMRAM     3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      15
                                             20 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                             20 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Encode_LED_Data_Channel1                             2     2      0      45
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
                _I2C_BusCollisionISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              2     2      0      15
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Encode_LED_Data_Channel1
   _Read_I2C
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Read_Port_IN
   _SYSTEM_Initialize
     _CCP2_Initialize
     _CVREF_Initialize
     _ECCP1_Initialize
     _EXT_INT_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Write_I2C
     _Encode_LED_Data_Channel1 (ARG)
     _I2C_Master_Start (ARG)
       _I2C_Master_Wait
     _I2C_Master_Stop (ARG)
       _I2C_Master_Wait
     _I2C_Master_Write (ARG)
       _I2C_Master_Wait

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      40       1       68.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      14        0.0%
DATA                 0      0      40      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Jul 29 18:29:04 2017

              I2C_ISR@i2c_bytes_left 000F                                   u40 0AAA  
  __size_of_Encode_LED_Data_Channel1 002A            ?_Encode_LED_Data_Channel1 0026  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l205 0B20  
                                l304 08DC                                  l294 0A72  
                       __CFG_CPB$OFF 000000                                  _PEN 007E2A  
                       __CFG_CPD$OFF 000000                                  u507 0940  
                                u517 0964                                  _SEN 007E28  
                                u477 0994                                  u487 09BE  
                                u497 090A                      __end_of_I2C_ISR 0848  
                       __CFG_BORV$18 000000                                  wreg 000FE8  
           __end_of_CVREF_Initialize 0B6C                       _LED_Data_Chan1 0601  
                        main@channel 003F                                 l1071 0AAC  
                               l1313 0A6A                                 l1573 085E  
                               l1583 0890                                 l1591 08C2  
                               l1585 08A4                                 l1577 086E  
                               l1587 08B8                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
             ??_I2C_FunctionComplete 0026                        __CFG_DEBUG$ON 000000  
                               _RCEN 007E2B                                 _RSEN 007E29  
                               _WPUB 000F7C              __end_of_CCP2_Initialize 0B40  
                               _main 0848                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0041                     __end_of_I2C_Stop 0A06  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009A                        __CFG_IESO$OFF 000000  
                      __CFG_MCLRE$ON 000000                         ___param_bank 000000  
                   ?_I2C_Master_Read 0026                     ?_I2C_Master_Wait 0026  
                   ?_I2C_Master_Stop 0026       __size_of_OSCILLATOR_Initialize 000A  
      __end_of_OSCILLATOR_Initialize 0B56                                ?_main 0026  
                              _ACKEN 007E2C                                _ACKDT 007E2D  
                              _EEADR 000FA9                                _ANSEL 000F7E  
                      _i2c_trb_count 0010                                i2l111 06A2  
                              i2l112 06AA                                i2l122 074C  
                              i2l106 0640                                i2l140 07E6  
                              i2l132 078C                                i2l117 06D6  
                              i2l109 069A                                i2l118 06E4  
                              i2l135 07A6                                i2l136 07B6  
                              i2l128 0760                                i2l234 0052  
                              i2l238 005E               __end_of_LED_Data_Chan1 0609  
                              _PORTA 000F80                                _PORTD 000F83  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                        ?_Read_Port_IN 0026  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              pclath 000FFA                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                         _i2c_object 0001                      __initialization 0AD4  
                       __end_of_main 08E2                     __end_of_Read_I2C 0970  
                          ??_I2C_ISR 0029          ?_INTERRUPT_InterruptManager 0026  
                             ??_main 003F                        __activetblptr 000002  
                     ??_Read_Port_IN 0039        Encode_LED_Data_Channel1@index 0039  
                  ?_I2C_Master_Start 0026                    ?_I2C_Master_Write 0026  
                 ??_I2C_Master_Start 003A                   ??_I2C_Master_Write 003A  
                             _EEDATA 000FA8                               _CCPR1H 000FBF  
                             _CCPR2H 000FBC                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                               _EECON2 000FA7  
                             _ANSELH 000F7F                               _CVRCON 000FB5  
                             i2l1211 07C6                               i2l1061 0B1A  
                             i2l1053 0A00                               i2l1125 068A  
                             i2l1223 07EC                               i2l1207 07BE  
                             i2l1143 06D0                               i2l1225 07F0  
                             i2l1137 06B8                               i2l1233 0802  
                             i2l1227 07F8                               i2l1157 0712  
                             i2l1185 0770                               i2l1177 075A  
                             i2l1195 0794                       __CFG_WDTEN$OFF 000000  
                             _TABLAT 000FF5                               _OSCCON 000FD3  
                             _SSPADD 000FC8                               _SSPBUF 000FC9  
                   ?_CCP2_Initialize 0026                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 0ADA  
            __size_of_I2C_Initialize 002A                            ?_I2C_Stop 0026  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                  ?_ECCP1_Initialize 0026        __size_of_INTERRUPT_Initialize 0002  
                  _SYSTEM_Initialize 0AB2                   ??_ECCP1_Initialize 0039  
                         __accesstop 0060              __end_of__initialization 0AE0  
                    __CFG_PBADEN$OFF 000000                   __size_of_Write_I2C 0058  
   __end_of_Encode_LED_Data_Channel1 0A8C                   ?_SYSTEM_Initialize 0026  
                      ___rparam_used 000001                       __pcstackCOMRAM 0026  
                ??_SYSTEM_Initialize 0039          __size_of_EXT_INT_Initialize 0002  
                         ??_I2C_Stop 0026                    ?_CVREF_Initialize 0026  
          __end_of_SYSTEM_Initialize 0AD4                   ??_CVREF_Initialize 0039  
                          ?_Read_I2C 0026         __size_of_I2C_BusCollisionISR 0002  
               __end_of_Read_Port_IN 0B70                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                              _I2C_ISR 060A  
                            _ECCP1AS 000FB6                    __end_of_Write_I2C 09C8  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7              I2C_Stop@completion_code 0028  
                            _PSTRCON 000FB9                              _SSPCON1 000FC6  
                            _SSPCON2 000FC5                              _SSPSTAT 000FC7  
                         ??_Read_I2C 003C        __size_of_I2C_FunctionComplete 0018  
                            __Hparam 0000                              __Lparam 0000  
           _Encode_LED_Data_Channel1 0A62                     Read_I2C@rcv_data 003D  
                       __psmallconst 0600                              __pcinit 0AD4  
                     _I2C_Initialize 0A38                              __ramtop 0600  
                            __ptext0 0848                              __ptext1 0970  
                            __ptext2 0AB2                              __ptext3 0A06  
                            __ptext4 0B4C                              __ptext5 0B70  
                            __ptext6 0A38                              __ptext7 0B72  
                            __ptext8 0AEE                              __ptext9 0B66  
              _OSCILLATOR_Initialize 0B4C             ??_PIN_MANAGER_Initialize 0039  
           __size_of_I2C_Master_Read 0026             __size_of_I2C_Master_Wait 0012  
           __size_of_I2C_Master_Stop 0008           __size_of_SYSTEM_Initialize 0022  
               end_of_initialization 0AE0                        __Lmediumconst 0000  
          __size_of_I2C_Master_Start 0008            __size_of_I2C_Master_Write 000C  
                   I2C_Master_Read@a 003A                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
             __end_of_I2C_Initialize 0A62                            _PORTCbits 000F82  
                 I2C_ISR@i2c_address 0024                    __size_of_I2C_Stop 003E  
   I2C_ISR@i2c_10bit_address_restart 000E                __size_of_Read_Port_IN 0004  
                  _p_i2c_trb_current 000C            __size_of_ECCP1_Initialize 001A  
           __size_of_CCP2_Initialize 000E         __end_of_INTERRUPT_Initialize 0B72  
                    ?_I2C_Initialize 0026                         _i2c_tr_queue 001E  
             ?_OSCILLATOR_Initialize 0026                        Write_I2C@Data 003B  
                _I2C_BusCollisionISR 0B74                  start_initialization 0AD4  
                       _Read_Port_IN 0B6C      __size_of_PIN_MANAGER_Initialize 0032  
                          _i2c_state 0011                    ??_I2C_Master_Read 003A  
                  ??_I2C_Master_Wait 0039                    ??_I2C_Master_Stop 003A  
                  __size_of_Read_I2C 008E                 ?_I2C_BusCollisionISR 0026  
          __size_of_CVREF_Initialize 0006                     __CFG_LPT1OSC$OFF 000000  
                           ?_I2C_ISR 0026           __end_of_EXT_INT_Initialize 0B74  
                        __pbssCOMRAM 0001                            _Write_I2C 0970  
         ??_Encode_LED_Data_Channel1 0039                ??_I2C_BusCollisionISR 0026  
                   _I2C_Master_Start 0B5E                     _I2C_Master_Write 0B40  
             _PIN_MANAGER_Initialize 0A06                    __CFG_CCP2MX$PORTC 000000  
                          __pintcode 0008         __end_of_I2C_FunctionComplete 0B20  
       ??_INTERRUPT_InterruptManager 002B                          __smallconst 0600  
                  ??_CCP2_Initialize 0039                             _I2C_Stop 09C8  
                         ?_Write_I2C 003B                        _p_i2c_current 000A  
               _INTERRUPT_Initialize 0B70                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0  __size_of_INTERRUPT_InterruptManager 0092  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                   __CFG_WDTPS$32768 000000                     _ECCP1_Initialize 0AEE  
                I2C_ISR@pi2c_buf_ptr 0008                     __size_of_I2C_ISR 023E  
                I2C_Master_Read@temp 003B                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                             _Read_I2C 08E2  
                         _EECON1bits 000FA6                     ??_I2C_Initialize 0039  
                           __Hrparam 0000                     _CVREF_Initialize 0B66  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
            ??_OSCILLATOR_Initialize 0039                      _I2C_Master_Read 0A8C  
                    _I2C_Master_Wait 0B20                      _I2C_Master_Stop 0B56  
                        ??_Write_I2C 003C                             __ptext10 0B32  
                           __ptext11 0B6C                             __ptext20 060A  
                           __ptext12 08E2                             __ptext21 09C8  
                           __ptext13 0B40                             __ptext22 0B08  
                           __ptext14 0B56                             __ptext23 0B74  
                           __ptext15 0B5E                             __ptext16 0A8C  
                           __ptext17 0B20                             __ptext18 0A62  
                      __size_of_main 009A                 _I2C_FunctionComplete 0B08  
              Write_I2C@Channel_Addr 003D                             int$flags 0041  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
           __end_of_I2C_Master_Start 0B66             __end_of_I2C_Master_Write 0B4C  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0039  
                 _EXT_INT_Initialize 0B72                             intlevel2 0000  
              ?_I2C_FunctionComplete 0026              ?_PIN_MANAGER_Initialize 0026  
              I2C_MasterRead@trBlock 0012                 Read_I2C@Channel_Addr 003E  
                ?_EXT_INT_Initialize 0026  Encode_LED_Data_Channel1@DataReadI2C 003A  
                       main@I2C_Data 0040                      _CCP2_Initialize 0B32  
            __end_of_I2C_Master_Read 0AB2              __end_of_I2C_Master_Wait 0B32  
            __end_of_I2C_Master_Stop 0B5E                 ??_EXT_INT_Initialize 0039  
             I2C_MasterWrite@trBlock 0018                    I2C_Master_Write@d 003A  
                        _SSPCON1bits 000FC6                          _SSPCON2bits 000FC5  
           __end_of_ECCP1_Initialize 0B08          __end_of_I2C_BusCollisionISR 0B76  
     __end_of_PIN_MANAGER_Initialize 0A38                    __CFG_FOSC$INTIO67 000000  
