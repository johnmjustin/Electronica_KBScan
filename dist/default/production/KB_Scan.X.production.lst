

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Jul 29 17:11:47 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F45K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	smallconst
    73  000600                     __psmallconst:
    74                           	opt stack 0
    75  000600  00                 	db	0
    76  000601                     _LED_Data_Chan1:
    77                           	opt stack 0
    78  000601  08                 	db	8
    79  000602  04                 	db	4
    80  000603  02                 	db	2
    81  000604  01                 	db	1
    82  000605  80                 	db	128
    83  000606  40                 	db	64
    84  000607  20                 	db	32
    85  000608  10                 	db	16
    86  000609                     __end_of_LED_Data_Chan1:
    87                           	opt stack 0
    88  0000                     _INTCON2bits	set	4081
    89  0000                     _WPUB	set	3964
    90  0000                     _ANSEL	set	3966
    91  0000                     _ANSELH	set	3967
    92  0000                     _TRISD	set	3989
    93  0000                     _TRISC	set	3988
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISA	set	3986
    96  0000                     _TRISE	set	3990
    97  0000                     _LATC	set	3979
    98  0000                     _LATB	set	3978
    99  0000                     _LATA	set	3977
   100  0000                     _LATD	set	3980
   101  0000                     _LATE	set	3981
   102  0000                     _EEDATA	set	4008
   103  0000                     _EEADR	set	4009
   104  0000                     _EECON2	set	4007
   105  0000                     _EECON1bits	set	4006
   106  0000                     _TABLAT	set	4085
   107  0000                     _TBLPTRL	set	4086
   108  0000                     _TBLPTRH	set	4087
   109  0000                     _TBLPTRU	set	4088
   110  0000                     _PORTA	set	3968
   111  0000                     _PORTCbits	set	3970
   112  0000                     _PORTD	set	3971
   113  0000                     _OSCTUNE	set	3995
   114  0000                     _OSCCON	set	4051
   115  0000                     _PIR2bits	set	4001
   116  0000                     _PIE2bits	set	4000
   117  0000                     _INTCONbits	set	4082
   118  0000                     _SSPCON2	set	4037
   119  0000                     _SSPBUF	set	4041
   120  0000                     _SSPCON2bits	set	4037
   121  0000                     _SSPCON1bits	set	4038
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIR1bits	set	3998
   124  0000                     _SSPADD	set	4040
   125  0000                     _SSPCON1	set	4038
   126  0000                     _SSPSTAT	set	4039
   127  0000                     _CCPR1H	set	4031
   128  0000                     _CCPR1L	set	4030
   129  0000                     _PSTRCON	set	4025
   130  0000                     _PWM1CON	set	4023
   131  0000                     _ECCP1AS	set	4022
   132  0000                     _CCP1CON	set	4029
   133  0000                     _CVRCON	set	4021
   134  0000                     _CCPR2H	set	4028
   135  0000                     _CCPR2L	set	4027
   136  0000                     _CCP2CON	set	4026
   137  0000                     _RSEN	set	32297
   138  0000                     _PEN	set	32298
   139  0000                     _SEN	set	32296
   140  0000                     _ACKEN	set	32300
   141  0000                     _ACKDT	set	32301
   142  0000                     _RCEN	set	32299
   143                           
   144                           ; #config settings
   145  000609  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           	psect	cinit
   148  000ACA                     __pcinit:
   149                           	opt stack 0
   150  000ACA                     start_initialization:
   151                           	opt stack 0
   152  000ACA                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (37 bytes)
   156  000ACA  EE00  F001         	lfsr	0,__pbssCOMRAM
   157  000ACE  0E25               	movlw	37
   158  000AD0                     clear_0:
   159  000AD0  6AEE               	clrf	postinc0,c
   160  000AD2  06E8               	decf	wreg,f,c
   161  000AD4  E1FD               	bnz	clear_0
   162  000AD6                     end_of_initialization:
   163                           	opt stack 0
   164  000AD6                     __end_of__initialization:
   165                           	opt stack 0
   166  000AD6  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167  000AD8  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168  000ADA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  000ADC  6EF8               	movwf	tblptru,c
   170  000ADE  0100               	movlb	0
   171  000AE0  EF24  F004         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000001                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000001                     _i2c_object:
   180                           	opt stack 0
   181  000001                     	ds	7
   182  000008                     I2C_ISR@pi2c_buf_ptr:
   183                           	opt stack 0
   184  000008                     	ds	2
   185  00000A                     _p_i2c_current:
   186                           	opt stack 0
   187  00000A                     	ds	2
   188  00000C                     _p_i2c_trb_current:
   189                           	opt stack 0
   190  00000C                     	ds	2
   191  00000E                     I2C_ISR@i2c_10bit_address_restart:
   192                           	opt stack 0
   193  00000E                     	ds	1
   194  00000F                     I2C_ISR@i2c_bytes_left:
   195                           	opt stack 0
   196  00000F                     	ds	1
   197  000010                     _i2c_trb_count:
   198                           	opt stack 0
   199  000010                     	ds	1
   200  000011                     _i2c_state:
   201                           	opt stack 0
   202  000011                     	ds	1
   203  000012                     I2C_MasterRead@trBlock:
   204                           	opt stack 0
   205  000012                     	ds	6
   206  000018                     I2C_MasterWrite@trBlock:
   207                           	opt stack 0
   208  000018                     	ds	6
   209  00001E                     _i2c_tr_queue:
   210                           	opt stack 0
   211  00001E                     	ds	6
   212  000024                     I2C_ISR@i2c_address:
   213                           	opt stack 0
   214  000024                     	ds	2
   215                           tblptru	equ	0xFF8
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	cstackCOMRAM
   220  000026                     __pcstackCOMRAM:
   221                           	opt stack 0
   222  000026                     ??_I2C_Stop:
   223  000026                     
   224                           ; 1 bytes @ 0x0
   225  000026                     	ds	2
   226  000028                     I2C_Stop@completion_code:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  000028                     	ds	1
   231  000029                     ??_I2C_ISR:
   232                           
   233                           ; 1 bytes @ 0x3
   234  000029                     	ds	2
   235  00002B                     ??_INTERRUPT_InterruptManager:
   236                           
   237                           ; 1 bytes @ 0x5
   238  00002B                     	ds	14
   239  000039                     ??_I2C_Master_Wait:
   240  000039                     Encode_LED_Data_Channel1@index:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x13
   244  000039                     	ds	1
   245  00003A                     I2C_Master_Read@a:
   246                           	opt stack 0
   247  00003A                     I2C_Master_Write@d:
   248                           	opt stack 0
   249  00003A                     Encode_LED_Data_Channel1@DataReadI2C:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x14
   253  00003A                     	ds	1
   254  00003B                     I2C_Master_Read@temp:
   255                           	opt stack 0
   256  00003B                     Write_I2C@Data:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x15
   260  00003B                     	ds	1
   261  00003C                     ??_Read_I2C:
   262  00003C                     ??_Write_I2C:
   263                           
   264                           ; 1 bytes @ 0x16
   265  00003C                     	ds	1
   266  00003D                     Read_I2C@rcv_data:
   267                           	opt stack 0
   268  00003D                     Write_I2C@Channel_Addr:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x17
   272  00003D                     	ds	1
   273  00003E                     Read_I2C@Channel_Addr:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x18
   277  00003E                     	ds	1
   278  00003F                     main@channel:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x19
   282  00003F                     	ds	1
   283  000040                     main@Led_Data:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x1A
   287  000040                     	ds	1
   288  000041                     main@I2C_Data:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x1B
   292  000041                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 159 in file "../KB_Scan.X/Source/main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;  I2C_Data        1   27[COMRAM] unsigned char 
   307 ;;  Led_Data        1   26[COMRAM] unsigned char 
   308 ;;  channel         1   25[COMRAM] unsigned char 
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   318 ;;      Params:         0       0       0       0       0       0       0
   319 ;;      Locals:         3       0       0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0
   321 ;;      Totals:         3       0       0       0       0       0       0
   322 ;;Total ram usage:        3 bytes
   323 ;; Hardware stack levels required when called:    6
   324 ;; This function calls:
   325 ;;		_Encode_LED_Data_Channel1
   326 ;;		_Read_I2C
   327 ;;		_Read_Port_IN
   328 ;;		_SYSTEM_Initialize
   329 ;;		_Write_I2C
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336  000848                     __ptext0:
   337                           	opt stack 0
   338  000848                     _main:
   339                           	opt stack 25
   340                           
   341                           ;main.c: 161: SYSTEM_Initialize();
   342                           
   343                           ;incstack = 0
   344  000848  EC54  F005         	call	_SYSTEM_Initialize	;wreg free
   345                           
   346                           ;main.c: 163: uint8_t channel = 0x00;
   347  00084C  0E00               	movlw	0
   348  00084E  6E3F               	movwf	main@channel,c
   349                           
   350                           ;main.c: 164: uint8_t I2C_Data = 0x00;
   351  000850  0E00               	movlw	0
   352  000852  6E41               	movwf	main@I2C_Data,c
   353                           
   354                           ;main.c: 165: uint8_t Led_Data = 0x00;
   355  000854  0E00               	movlw	0
   356  000856  6E40               	movwf	main@Led_Data,c
   357  000858                     l1579:
   358                           
   359                           ;main.c: 169: {
   360                           ;main.c: 170: PORTCbits.RC5 = 1;
   361  000858  8A82               	bsf	3970,5,c	;volatile
   362                           
   363                           ;main.c: 171: channel = Read_Port_IN() & 0b11000000;
   364  00085A  ECB1  F005         	call	_Read_Port_IN	;wreg free
   365  00085E  0BC0               	andlw	192
   366  000860  6E3F               	movwf	main@channel,c
   367                           
   368                           ;main.c: 172: switch (channel)
   369  000862  D02B               	goto	l1599
   370  000864                     l1583:
   371                           
   372                           ;main.c: 176: I2C_Data = Read_I2C(71);
   373  000864  0E47               	movlw	71
   374  000866  EC6D  F004         	call	_Read_I2C
   375  00086A  6E41               	movwf	main@I2C_Data,c
   376                           
   377                           ;main.c: 177: if (I2C_Data != 0xFF)
   378  00086C  2841               	incf	main@I2C_Data,w,c
   379  00086E  B4D8               	btfsc	status,2,c
   380  000870  D031               	goto	l304
   381                           
   382                           ;main.c: 178: {
   383                           ;main.c: 179: Led_Data = Encode_LED_Data_Channel1(~I2C_Data);
   384  000872  5041               	movf	main@I2C_Data,w,c
   385  000874  0AFF               	xorlw	255
   386  000876  EC2D  F005         	call	_Encode_LED_Data_Channel1
   387  00087A  6E40               	movwf	main@Led_Data,c
   388                           
   389                           ;main.c: 180: Write_I2C(73,Led_Data);
   390  00087C  C040  F03B         	movff	main@Led_Data,Write_I2C@Data
   391  000880  0E49               	movlw	73
   392  000882  ECB4  F004         	call	_Write_I2C
   393                           
   394                           ;main.c: 181: }
   395                           ;main.c: 182: break;
   396  000886  D026               	goto	l304
   397  000888                     l1591:
   398                           
   399                           ;main.c: 184: I2C_Data = Read_I2C(65);
   400  000888  0E41               	movlw	65
   401  00088A  EC6D  F004         	call	_Read_I2C
   402  00088E  6E41               	movwf	main@I2C_Data,c
   403                           
   404                           ;main.c: 185: Write_I2C(75,I2C_Data);
   405  000890  C041  F03B         	movff	main@I2C_Data,Write_I2C@Data
   406  000894  0E4B               	movlw	75
   407  000896  ECB4  F004         	call	_Write_I2C
   408                           
   409                           ;main.c: 186: break;
   410  00089A  D01C               	goto	l304
   411  00089C                     l1593:
   412                           
   413                           ;main.c: 188: I2C_Data = Read_I2C(67);
   414  00089C  0E43               	movlw	67
   415  00089E  EC6D  F004         	call	_Read_I2C
   416  0008A2  6E41               	movwf	main@I2C_Data,c
   417                           
   418                           ;main.c: 189: Write_I2C(77,I2C_Data);
   419  0008A4  C041  F03B         	movff	main@I2C_Data,Write_I2C@Data
   420  0008A8  0E4D               	movlw	77
   421  0008AA  ECB4  F004         	call	_Write_I2C
   422                           
   423                           ;main.c: 190: break;
   424  0008AE  D012               	goto	l304
   425  0008B0                     l1595:
   426                           
   427                           ;main.c: 192: I2C_Data = Read_I2C(69);
   428  0008B0  0E45               	movlw	69
   429  0008B2  EC6D  F004         	call	_Read_I2C
   430  0008B6  6E41               	movwf	main@I2C_Data,c
   431                           
   432                           ;main.c: 197: }
   433                           
   434                           ;main.c: 196: break;
   435                           
   436                           ;main.c: 195: default:
   437                           
   438                           ;main.c: 194: break;
   439  0008B8  D00D               	goto	l304
   440  0008BA                     l1599:
   441  0008BA  503F               	movf	main@channel,w,c
   442                           
   443                           ; Switch size 1, requested type "space"
   444                           ; Number of cases is 4, Range of values is 0 to 192
   445                           ; switch strategies available:
   446                           ; Name         Instructions Cycles
   447                           ; simple_byte           13     7 (average)
   448                           ;	Chosen strategy is simple_byte
   449  0008BC  0A00               	xorlw	0	; case 0
   450  0008BE  B4D8               	btfsc	status,2,c
   451  0008C0  D7D1               	goto	l1583
   452  0008C2  0A40               	xorlw	64	; case 64
   453  0008C4  B4D8               	btfsc	status,2,c
   454  0008C6  D7E0               	goto	l1591
   455  0008C8  0AC0               	xorlw	192	; case 128
   456  0008CA  B4D8               	btfsc	status,2,c
   457  0008CC  D7E7               	goto	l1593
   458  0008CE  0A40               	xorlw	64	; case 192
   459  0008D0  B4D8               	btfsc	status,2,c
   460  0008D2  D7EE               	goto	l1595
   461  0008D4                     l304:
   462                           
   463                           ;main.c: 198: PORTA = I2C_Data;
   464  0008D4  C041  FF80         	movff	main@I2C_Data,3968	;volatile
   465  0008D8  D7BF               	goto	l1579
   466  0008DA                     __end_of_main:
   467                           	opt stack 0
   468                           tblptru	equ	0xFF8
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           status	equ	0xFD8
   472                           
   473 ;; *************** function _Write_I2C *****************
   474 ;; Defined at:
   475 ;;		line 132 in file "../KB_Scan.X/Source/main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  Channel_Addr    1    wreg     unsigned char 
   478 ;;  Data            1   21[COMRAM] unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  Channel_Addr    1   23[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   490 ;;      Params:         1       0       0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0       0       0
   493 ;;      Totals:         3       0       0       0       0       0       0
   494 ;;Total ram usage:        3 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    5
   497 ;; This function calls:
   498 ;;		_I2C_Master_Start
   499 ;;		_I2C_Master_Stop
   500 ;;		_I2C_Master_Write
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507  000968                     __ptext1:
   508                           	opt stack 0
   509  000968                     _Write_I2C:
   510                           	opt stack 25
   511                           
   512                           ;incstack = 0
   513                           ;Write_I2C@Channel_Addr stored from wreg
   514  000968  6E3D               	movwf	Write_I2C@Channel_Addr,c
   515                           
   516                           ;main.c: 134: I2C_Master_Start();
   517  00096A  ECAA  F005         	call	_I2C_Master_Start	;wreg free
   518                           
   519                           ;main.c: 135: I2C_Master_Write(Channel_Addr & 0xFE);
   520  00096E  503D               	movf	Write_I2C@Channel_Addr,w,c
   521  000970  0BFE               	andlw	254
   522  000972  EC9B  F005         	call	_I2C_Master_Write
   523                           
   524                           ;main.c: 136: I2C_Master_Write(0x03);
   525  000976  0E03               	movlw	3
   526  000978  EC9B  F005         	call	_I2C_Master_Write
   527                           
   528                           ;main.c: 137: I2C_Master_Write(0x00);
   529  00097C  0E00               	movlw	0
   530  00097E  EC9B  F005         	call	_I2C_Master_Write
   531                           
   532                           ;main.c: 138: I2C_Master_Stop();
   533  000982  ECA6  F005         	call	_I2C_Master_Stop	;wreg free
   534                           
   535                           ;main.c: 139: _delay((unsigned long)((1)*(8000000/4000.0)));
   536  000986  0E03               	movlw	3
   537  000988  6E3C               	movwf	??_Write_I2C& (0+255),c
   538  00098A  0E98               	movlw	152
   539  00098C                     u477:
   540  00098C  2EE8               	decfsz	wreg,f,c
   541  00098E  D7FE               	bra	u477
   542  000990  2E3C               	decfsz	??_Write_I2C& (0+255),f,c
   543  000992  D7FC               	bra	u477
   544                           
   545                           ;main.c: 140: I2C_Master_Start();
   546  000994  ECAA  F005         	call	_I2C_Master_Start	;wreg free
   547                           
   548                           ;main.c: 141: I2C_Master_Write(Channel_Addr & 0xFE);
   549  000998  503D               	movf	Write_I2C@Channel_Addr,w,c
   550  00099A  0BFE               	andlw	254
   551  00099C  EC9B  F005         	call	_I2C_Master_Write
   552                           
   553                           ;main.c: 142: I2C_Master_Write(0x01);
   554  0009A0  0E01               	movlw	1
   555  0009A2  EC9B  F005         	call	_I2C_Master_Write
   556                           
   557                           ;main.c: 143: I2C_Master_Write(Data);
   558  0009A6  503B               	movf	Write_I2C@Data,w,c
   559  0009A8  EC9B  F005         	call	_I2C_Master_Write
   560                           
   561                           ;main.c: 144: I2C_Master_Stop();
   562  0009AC  ECA6  F005         	call	_I2C_Master_Stop	;wreg free
   563                           
   564                           ;main.c: 145: _delay((unsigned long)((1)*(8000000/4000.0)));
   565  0009B0  0E03               	movlw	3
   566  0009B2  6E3C               	movwf	??_Write_I2C& (0+255),c
   567  0009B4  0E98               	movlw	152
   568  0009B6                     u487:
   569  0009B6  2EE8               	decfsz	wreg,f,c
   570  0009B8  D7FE               	bra	u487
   571  0009BA  2E3C               	decfsz	??_Write_I2C& (0+255),f,c
   572  0009BC  D7FC               	bra	u487
   573  0009BE  0012               	return		;funcret
   574  0009C0                     __end_of_Write_I2C:
   575                           	opt stack 0
   576                           tblptru	equ	0xFF8
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           status	equ	0xFD8
   580                           
   581 ;; *************** function _SYSTEM_Initialize *****************
   582 ;; Defined at:
   583 ;;		line 79 in file "../KB_Scan.X/Source/main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   597 ;;      Params:         0       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    4
   604 ;; This function calls:
   605 ;;		_CCP2_Initialize
   606 ;;		_CVREF_Initialize
   607 ;;		_ECCP1_Initialize
   608 ;;		_EXT_INT_Initialize
   609 ;;		_I2C_Initialize
   610 ;;		_INTERRUPT_Initialize
   611 ;;		_OSCILLATOR_Initialize
   612 ;;		_PIN_MANAGER_Initialize
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text2
   619  000AA8                     __ptext2:
   620                           	opt stack 0
   621  000AA8                     _SYSTEM_Initialize:
   622                           	opt stack 26
   623                           
   624                           ;main.c: 82: INTERRUPT_Initialize();
   625                           
   626                           ;incstack = 0
   627  000AA8  ECB3  F005         	call	_INTERRUPT_Initialize	;wreg free
   628                           
   629                           ;main.c: 83: PIN_MANAGER_Initialize();
   630  000AAC  ECFF  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   631                           
   632                           ;main.c: 84: OSCILLATOR_Initialize();
   633  000AB0  ECA1  F005         	call	_OSCILLATOR_Initialize	;wreg free
   634                           
   635                           ;main.c: 85: I2C_Initialize();
   636  000AB4  EC18  F005         	call	_I2C_Initialize	;wreg free
   637                           
   638                           ;main.c: 86: ECCP1_Initialize();
   639  000AB8  EC72  F005         	call	_ECCP1_Initialize	;wreg free
   640                           
   641                           ;main.c: 87: CVREF_Initialize();
   642  000ABC  ECAE  F005         	call	_CVREF_Initialize	;wreg free
   643                           
   644                           ;main.c: 88: CCP2_Initialize();
   645  000AC0  EC94  F005         	call	_CCP2_Initialize	;wreg free
   646                           
   647                           ;main.c: 89: EXT_INT_Initialize();
   648  000AC4  ECB4  F005         	call	_EXT_INT_Initialize	;wreg free
   649  000AC8  0012               	return		;funcret
   650  000ACA                     __end_of_SYSTEM_Initialize:
   651                           	opt stack 0
   652                           tblptru	equ	0xFF8
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _PIN_MANAGER_Initialize *****************
   658 ;; Defined at:
   659 ;;		line 52 in file "../KB_Scan.X/Source/pin_manager.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   673 ;;      Params:         0       0       0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    3
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_SYSTEM_Initialize
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text3
   688  0009FE                     __ptext3:
   689                           	opt stack 0
   690  0009FE                     _PIN_MANAGER_Initialize:
   691                           	opt stack 26
   692                           
   693                           ;pin_manager.c: 57: LATE = 0x00;
   694                           
   695                           ;incstack = 0
   696  0009FE  0E00               	movlw	0
   697  000A00  6E8D               	movwf	3981,c	;volatile
   698                           
   699                           ;pin_manager.c: 58: LATD = 0x00;
   700  000A02  0E00               	movlw	0
   701  000A04  6E8C               	movwf	3980,c	;volatile
   702                           
   703                           ;pin_manager.c: 59: LATA = 0x00;
   704  000A06  0E00               	movlw	0
   705  000A08  6E89               	movwf	3977,c	;volatile
   706                           
   707                           ;pin_manager.c: 60: LATB = 0x00;
   708  000A0A  0E00               	movlw	0
   709  000A0C  6E8A               	movwf	3978,c	;volatile
   710                           
   711                           ;pin_manager.c: 61: LATC = 0x00;
   712  000A0E  0E00               	movlw	0
   713  000A10  6E8B               	movwf	3979,c	;volatile
   714                           
   715                           ;pin_manager.c: 66: TRISE = 0x07;
   716  000A12  0E07               	movlw	7
   717  000A14  6E96               	movwf	3990,c	;volatile
   718                           
   719                           ;pin_manager.c: 67: TRISA = 0x00;
   720  000A16  0E00               	movlw	0
   721  000A18  6E92               	movwf	3986,c	;volatile
   722                           
   723                           ;pin_manager.c: 68: TRISB = 0xFF;
   724  000A1A  6893               	setf	3987,c	;volatile
   725                           
   726                           ;pin_manager.c: 69: TRISC = 0xDF;
   727  000A1C  0EDF               	movlw	223
   728  000A1E  6E94               	movwf	3988,c	;volatile
   729                           
   730                           ;pin_manager.c: 70: TRISD = 0xFF;
   731  000A20  6895               	setf	3989,c	;volatile
   732                           
   733                           ;pin_manager.c: 75: ANSELH = 0x1F;
   734  000A22  0E1F               	movlw	31
   735  000A24  6E7F               	movwf	3967,c	;volatile
   736                           
   737                           ;pin_manager.c: 76: ANSEL = 0xE0;
   738  000A26  0EE0               	movlw	224
   739  000A28  6E7E               	movwf	3966,c	;volatile
   740                           
   741                           ;pin_manager.c: 81: WPUB = 0xFF;
   742  000A2A  687C               	setf	3964,c	;volatile
   743                           
   744                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 0;
   745  000A2C  9EF1               	bcf	intcon2,7,c	;volatile
   746  000A2E  0012               	return		;funcret
   747  000A30                     __end_of_PIN_MANAGER_Initialize:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           intcon2	equ	0xFF1
   751                           postinc0	equ	0xFEE
   752                           wreg	equ	0xFE8
   753                           status	equ	0xFD8
   754                           
   755 ;; *************** function _OSCILLATOR_Initialize *****************
   756 ;; Defined at:
   757 ;;		line 92 in file "../KB_Scan.X/Source/main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         0       0       0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0
   774 ;;      Totals:         0       0       0       0       0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    3
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_SYSTEM_Initialize
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text4
   786  000B42                     __ptext4:
   787                           	opt stack 0
   788  000B42                     _OSCILLATOR_Initialize:
   789                           	opt stack 26
   790                           
   791                           ;main.c: 95: OSCCON = 0x60;
   792                           
   793                           ;incstack = 0
   794  000B42  0E60               	movlw	96
   795  000B44  6ED3               	movwf	4051,c	;volatile
   796                           
   797                           ;main.c: 97: OSCTUNE = 0x00;
   798  000B46  0E00               	movlw	0
   799  000B48  6E9B               	movwf	3995,c	;volatile
   800  000B4A  0012               	return		;funcret
   801  000B4C                     __end_of_OSCILLATOR_Initialize:
   802                           	opt stack 0
   803                           tblptru	equ	0xFF8
   804                           intcon2	equ	0xFF1
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _INTERRUPT_Initialize *****************
   810 ;; Defined at:
   811 ;;		line 51 in file "../KB_Scan.X/Source/interrupt_manager.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		None
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   825 ;;      Params:         0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    3
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_SYSTEM_Initialize
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text5
   840  000B66                     __ptext5:
   841                           	opt stack 0
   842  000B66                     _INTERRUPT_Initialize:
   843                           	opt stack 26
   844                           
   845                           ;incstack = 0
   846  000B66  0012               	return		;funcret
   847  000B68                     __end_of_INTERRUPT_Initialize:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           intcon2	equ	0xFF1
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           status	equ	0xFD8
   854                           
   855 ;; *************** function _I2C_Initialize *****************
   856 ;; Defined at:
   857 ;;		line 198 in file "../KB_Scan.X/Source/i2c.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_SYSTEM_Initialize
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text6
   886  000A30                     __ptext6:
   887                           	opt stack 0
   888  000A30                     _I2C_Initialize:
   889                           	opt stack 26
   890                           
   891                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
   892                           
   893                           ;incstack = 0
   894  000A30  0E1E               	movlw	low _i2c_tr_queue
   895  000A32  6E03               	movwf	_i2c_object+2,c
   896  000A34  0E00               	movlw	high _i2c_tr_queue
   897  000A36  6E04               	movwf	_i2c_object+3,c
   898                           
   899                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
   900  000A38  0E1E               	movlw	low _i2c_tr_queue
   901  000A3A  6E01               	movwf	_i2c_object,c
   902  000A3C  0E00               	movlw	high _i2c_tr_queue
   903  000A3E  6E02               	movwf	_i2c_object+1,c
   904                           
   905                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
   906  000A40  8205               	bsf	_i2c_object+4,1,c
   907                           
   908                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
   909  000A42  9005               	bcf	_i2c_object+4,0,c
   910                           
   911                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
   912  000A44  0E00               	movlw	0
   913  000A46  6E07               	movwf	_i2c_object+6,c
   914                           
   915                           ;i2c.c: 208: SSPSTAT = 0x80;
   916  000A48  0E80               	movlw	128
   917  000A4A  6EC7               	movwf	4039,c	;volatile
   918                           
   919                           ;i2c.c: 210: SSPCON1 = 0x28;
   920  000A4C  0E28               	movlw	40
   921  000A4E  6EC6               	movwf	4038,c	;volatile
   922                           
   923                           ;i2c.c: 212: SSPADD = 0x03;
   924  000A50  0E03               	movlw	3
   925  000A52  6EC8               	movwf	4040,c	;volatile
   926                           
   927                           ;i2c.c: 216: PIR1bits.SSPIF = 0;
   928  000A54  969E               	bcf	3998,3,c	;volatile
   929                           
   930                           ;i2c.c: 221: PIE1bits.SSPIE = 0;
   931  000A56  969D               	bcf	3997,3,c	;volatile
   932  000A58  0012               	return		;funcret
   933  000A5A                     __end_of_I2C_Initialize:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           intcon2	equ	0xFF1
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           status	equ	0xFD8
   940                           
   941 ;; *************** function _EXT_INT_Initialize *****************
   942 ;; Defined at:
   943 ;;		line 47 in file "../KB_Scan.X/Source/ext_int.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		None
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    3
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_SYSTEM_Initialize
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text7
   972  000B68                     __ptext7:
   973                           	opt stack 0
   974  000B68                     _EXT_INT_Initialize:
   975                           	opt stack 26
   976                           
   977                           ;incstack = 0
   978  000B68  0012               	return		;funcret
   979  000B6A                     __end_of_EXT_INT_Initialize:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           intcon2	equ	0xFF1
   983                           postinc0	equ	0xFEE
   984                           wreg	equ	0xFE8
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _ECCP1_Initialize *****************
   988 ;; Defined at:
   989 ;;		line 57 in file "../KB_Scan.X/Source/eccp1.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1003 ;;      Params:         0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    3
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_SYSTEM_Initialize
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text8
  1018  000AE4                     __ptext8:
  1019                           	opt stack 0
  1020  000AE4                     _ECCP1_Initialize:
  1021                           	opt stack 26
  1022                           
  1023                           ;eccp1.c: 60: CCP1CON = 0x00;
  1024                           
  1025                           ;incstack = 0
  1026  000AE4  0E00               	movlw	0
  1027  000AE6  6EBD               	movwf	4029,c	;volatile
  1028                           
  1029                           ;eccp1.c: 62: ECCP1AS = 0x00;
  1030  000AE8  0E00               	movlw	0
  1031  000AEA  6EB6               	movwf	4022,c	;volatile
  1032                           
  1033                           ;eccp1.c: 64: PWM1CON = 0x00;
  1034  000AEC  0E00               	movlw	0
  1035  000AEE  6EB7               	movwf	4023,c	;volatile
  1036                           
  1037                           ;eccp1.c: 66: PSTRCON = 0x01;
  1038  000AF0  0E01               	movlw	1
  1039  000AF2  6EB9               	movwf	4025,c	;volatile
  1040                           
  1041                           ;eccp1.c: 68: CCPR1L = 0x00;
  1042  000AF4  0E00               	movlw	0
  1043  000AF6  6EBE               	movwf	4030,c	;volatile
  1044                           
  1045                           ;eccp1.c: 70: CCPR1H = 0x00;
  1046  000AF8  0E00               	movlw	0
  1047  000AFA  6EBF               	movwf	4031,c	;volatile
  1048  000AFC  0012               	return		;funcret
  1049  000AFE                     __end_of_ECCP1_Initialize:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           intcon2	equ	0xFF1
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           status	equ	0xFD8
  1056                           
  1057 ;; *************** function _CVREF_Initialize *****************
  1058 ;; Defined at:
  1059 ;;		line 57 in file "../KB_Scan.X/Source/cvref.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         0       0       0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    3
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_SYSTEM_Initialize
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text9
  1088  000B5C                     __ptext9:
  1089                           	opt stack 0
  1090  000B5C                     _CVREF_Initialize:
  1091                           	opt stack 26
  1092                           
  1093                           ;cvref.c: 62: CVRCON = 0x80;
  1094                           
  1095                           ;incstack = 0
  1096  000B5C  0E80               	movlw	128
  1097  000B5E  6EB5               	movwf	4021,c	;volatile
  1098  000B60  0012               	return		;funcret
  1099  000B62                     __end_of_CVREF_Initialize:
  1100                           	opt stack 0
  1101                           tblptru	equ	0xFF8
  1102                           intcon2	equ	0xFF1
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           status	equ	0xFD8
  1106                           
  1107 ;; *************** function _CCP2_Initialize *****************
  1108 ;; Defined at:
  1109 ;;		line 57 in file "../KB_Scan.X/Source/ccp2.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1123 ;;      Params:         0       0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    3
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_SYSTEM_Initialize
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text10
  1138  000B28                     __ptext10:
  1139                           	opt stack 0
  1140  000B28                     _CCP2_Initialize:
  1141                           	opt stack 26
  1142                           
  1143                           ;ccp2.c: 60: CCP2CON = 0x00;
  1144                           
  1145                           ;incstack = 0
  1146  000B28  0E00               	movlw	0
  1147  000B2A  6EBA               	movwf	4026,c	;volatile
  1148                           
  1149                           ;ccp2.c: 62: CCPR2L = 0x00;
  1150  000B2C  0E00               	movlw	0
  1151  000B2E  6EBB               	movwf	4027,c	;volatile
  1152                           
  1153                           ;ccp2.c: 64: CCPR2H = 0x00;
  1154  000B30  0E00               	movlw	0
  1155  000B32  6EBC               	movwf	4028,c	;volatile
  1156  000B34  0012               	return		;funcret
  1157  000B36                     __end_of_CCP2_Initialize:
  1158                           	opt stack 0
  1159                           tblptru	equ	0xFF8
  1160                           intcon2	equ	0xFF1
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _Read_Port_IN *****************
  1166 ;; Defined at:
  1167 ;;		line 100 in file "../KB_Scan.X/Source/main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      unsigned char 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1181 ;;      Params:         0       0       0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text11
  1196  000B62                     __ptext11:
  1197                           	opt stack 0
  1198  000B62                     _Read_Port_IN:
  1199                           	opt stack 27
  1200                           
  1201                           ;main.c: 102: return(PORTD);
  1202                           
  1203                           ;incstack = 0
  1204  000B62  5083               	movf	3971,w,c	;volatile
  1205  000B64  0012               	return	
  1206  000B66                     __end_of_Read_Port_IN:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           intcon2	equ	0xFF1
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           status	equ	0xFD8
  1213                           
  1214 ;; *************** function _Read_I2C *****************
  1215 ;; Defined at:
  1216 ;;		line 105 in file "../KB_Scan.X/Source/main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  Channel_Addr    1    wreg     unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  Channel_Addr    1   24[COMRAM] unsigned char 
  1221 ;;  rcv_data        1   23[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       0       0       0       0       0       0
  1232 ;;      Locals:         2       0       0       0       0       0       0
  1233 ;;      Temps:          1       0       0       0       0       0       0
  1234 ;;      Totals:         3       0       0       0       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    5
  1238 ;; This function calls:
  1239 ;;		_I2C_Master_Read
  1240 ;;		_I2C_Master_Start
  1241 ;;		_I2C_Master_Stop
  1242 ;;		_I2C_Master_Write
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text12
  1249  0008DA                     __ptext12:
  1250                           	opt stack 0
  1251  0008DA                     _Read_I2C:
  1252                           	opt stack 25
  1253                           
  1254                           ;incstack = 0
  1255                           ;Read_I2C@Channel_Addr stored from wreg
  1256  0008DA  6E3E               	movwf	Read_I2C@Channel_Addr,c
  1257                           
  1258                           ;main.c: 107: uint8_t rcv_data = 0x00;
  1259  0008DC  0E00               	movlw	0
  1260  0008DE  6E3D               	movwf	Read_I2C@rcv_data,c
  1261                           
  1262                           ;main.c: 109: I2C_Master_Start();
  1263  0008E0  ECAA  F005         	call	_I2C_Master_Start	;wreg free
  1264                           
  1265                           ;main.c: 110: I2C_Master_Write(Channel_Addr & 0xFE);
  1266  0008E4  503E               	movf	Read_I2C@Channel_Addr,w,c
  1267  0008E6  0BFE               	andlw	254
  1268  0008E8  EC9B  F005         	call	_I2C_Master_Write
  1269                           
  1270                           ;main.c: 111: I2C_Master_Write(0x03);
  1271  0008EC  0E03               	movlw	3
  1272  0008EE  EC9B  F005         	call	_I2C_Master_Write
  1273                           
  1274                           ;main.c: 112: I2C_Master_Write(0xFF);
  1275  0008F2  0EFF               	movlw	255
  1276  0008F4  EC9B  F005         	call	_I2C_Master_Write
  1277                           
  1278                           ;main.c: 113: I2C_Master_Stop();
  1279  0008F8  ECA6  F005         	call	_I2C_Master_Stop	;wreg free
  1280                           
  1281                           ;main.c: 114: _delay((unsigned long)((1)*(8000000/4000.0)));
  1282  0008FC  0E03               	movlw	3
  1283  0008FE  6E3C               	movwf	??_Read_I2C& (0+255),c
  1284  000900  0E98               	movlw	152
  1285  000902                     u497:
  1286  000902  2EE8               	decfsz	wreg,f,c
  1287  000904  D7FE               	bra	u497
  1288  000906  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1289  000908  D7FC               	bra	u497
  1290                           
  1291                           ;main.c: 115: I2C_Master_Start();
  1292  00090A  ECAA  F005         	call	_I2C_Master_Start	;wreg free
  1293                           
  1294                           ;main.c: 116: I2C_Master_Write(Channel_Addr & 0xFE);
  1295  00090E  503E               	movf	Read_I2C@Channel_Addr,w,c
  1296  000910  0BFE               	andlw	254
  1297  000912  EC9B  F005         	call	_I2C_Master_Write
  1298                           
  1299                           ;main.c: 117: I2C_Master_Write(0x00);
  1300  000916  0E00               	movlw	0
  1301  000918  EC9B  F005         	call	_I2C_Master_Write
  1302                           
  1303                           ;main.c: 118: I2C_Master_Start();
  1304  00091C  ECAA  F005         	call	_I2C_Master_Start	;wreg free
  1305                           
  1306                           ;main.c: 119: I2C_Master_Write(Channel_Addr & 0xFF);
  1307  000920  503E               	movf	Read_I2C@Channel_Addr,w,c
  1308  000922  EC9B  F005         	call	_I2C_Master_Write
  1309                           
  1310                           ;main.c: 120: rcv_data = I2C_Master_Read(0);
  1311  000926  0E00               	movlw	0
  1312  000928  EC41  F005         	call	_I2C_Master_Read
  1313  00092C  6E3D               	movwf	Read_I2C@rcv_data,c
  1314                           
  1315                           ;main.c: 121: I2C_Master_Stop();
  1316  00092E  ECA6  F005         	call	_I2C_Master_Stop	;wreg free
  1317                           
  1318                           ;main.c: 122: _delay((unsigned long)((1)*(8000000/4000.0)));
  1319  000932  0E03               	movlw	3
  1320  000934  6E3C               	movwf	??_Read_I2C& (0+255),c
  1321  000936  0E98               	movlw	152
  1322  000938                     u507:
  1323  000938  2EE8               	decfsz	wreg,f,c
  1324  00093A  D7FE               	bra	u507
  1325  00093C  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1326  00093E  D7FC               	bra	u507
  1327                           
  1328                           ;main.c: 123: I2C_Master_Start();
  1329  000940  ECAA  F005         	call	_I2C_Master_Start	;wreg free
  1330                           
  1331                           ;main.c: 124: I2C_Master_Write(Channel_Addr & 0xFF);
  1332  000944  503E               	movf	Read_I2C@Channel_Addr,w,c
  1333  000946  EC9B  F005         	call	_I2C_Master_Write
  1334                           
  1335                           ;main.c: 125: rcv_data = I2C_Master_Read(0);
  1336  00094A  0E00               	movlw	0
  1337  00094C  EC41  F005         	call	_I2C_Master_Read
  1338  000950  6E3D               	movwf	Read_I2C@rcv_data,c
  1339                           
  1340                           ;main.c: 126: I2C_Master_Stop();
  1341  000952  ECA6  F005         	call	_I2C_Master_Stop	;wreg free
  1342                           
  1343                           ;main.c: 127: _delay((unsigned long)((1)*(8000000/4000.0)));
  1344  000956  0E03               	movlw	3
  1345  000958  6E3C               	movwf	??_Read_I2C& (0+255),c
  1346  00095A  0E98               	movlw	152
  1347  00095C                     u517:
  1348  00095C  2EE8               	decfsz	wreg,f,c
  1349  00095E  D7FE               	bra	u517
  1350  000960  2E3C               	decfsz	??_Read_I2C& (0+255),f,c
  1351  000962  D7FC               	bra	u517
  1352                           
  1353                           ;main.c: 128: return rcv_data;
  1354  000964  503D               	movf	Read_I2C@rcv_data,w,c
  1355  000966  0012               	return	
  1356  000968                     __end_of_Read_I2C:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           intcon2	equ	0xFF1
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _I2C_Master_Write *****************
  1365 ;; Defined at:
  1366 ;;		line 774 in file "../KB_Scan.X/Source/i2c.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  d               1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  d               1   20[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         0       0       0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0
  1383 ;;      Totals:         1       0       0       0       0       0       0
  1384 ;;Total ram usage:        1 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    4
  1387 ;; This function calls:
  1388 ;;		_I2C_Master_Wait
  1389 ;; This function is called by:
  1390 ;;		_Read_I2C
  1391 ;;		_Write_I2C
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text13
  1396  000B36                     __ptext13:
  1397                           	opt stack 0
  1398  000B36                     _I2C_Master_Write:
  1399                           	opt stack 25
  1400                           
  1401                           ;incstack = 0
  1402                           ;I2C_Master_Write@d stored from wreg
  1403  000B36  6E3A               	movwf	I2C_Master_Write@d,c
  1404                           
  1405                           ;i2c.c: 776: I2C_Master_Wait();
  1406  000B38  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1407                           
  1408                           ;i2c.c: 777: SSPBUF = d;
  1409  000B3C  C03A  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1410  000B40  0012               	return		;funcret
  1411  000B42                     __end_of_I2C_Master_Write:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           intcon2	equ	0xFF1
  1415                           postinc0	equ	0xFEE
  1416                           wreg	equ	0xFE8
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _I2C_Master_Stop *****************
  1420 ;; Defined at:
  1421 ;;		line 756 in file "../KB_Scan.X/Source/i2c.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    4
  1442 ;; This function calls:
  1443 ;;		_I2C_Master_Wait
  1444 ;; This function is called by:
  1445 ;;		_Read_I2C
  1446 ;;		_Write_I2C
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text14
  1451  000B4C                     __ptext14:
  1452                           	opt stack 0
  1453  000B4C                     _I2C_Master_Stop:
  1454                           	opt stack 25
  1455                           
  1456                           ;i2c.c: 758: I2C_Master_Wait();
  1457                           
  1458                           ;incstack = 0
  1459  000B4C  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1460                           
  1461                           ;i2c.c: 759: PEN = 1;
  1462  000B50  84C5               	bsf	4037,2,c	;volatile
  1463  000B52  0012               	return		;funcret
  1464  000B54                     __end_of_I2C_Master_Stop:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           intcon2	equ	0xFF1
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _I2C_Master_Start *****************
  1473 ;; Defined at:
  1474 ;;		line 750 in file "../KB_Scan.X/Source/i2c.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         0       0       0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    4
  1495 ;; This function calls:
  1496 ;;		_I2C_Master_Wait
  1497 ;; This function is called by:
  1498 ;;		_Read_I2C
  1499 ;;		_Write_I2C
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text15
  1504  000B54                     __ptext15:
  1505                           	opt stack 0
  1506  000B54                     _I2C_Master_Start:
  1507                           	opt stack 25
  1508                           
  1509                           ;i2c.c: 752: I2C_Master_Wait();
  1510                           
  1511                           ;incstack = 0
  1512  000B54  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1513                           
  1514                           ;i2c.c: 753: SEN = 1;
  1515  000B58  80C5               	bsf	4037,0,c	;volatile
  1516  000B5A  0012               	return		;funcret
  1517  000B5C                     __end_of_I2C_Master_Start:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           intcon2	equ	0xFF1
  1521                           postinc0	equ	0xFEE
  1522                           wreg	equ	0xFE8
  1523                           status	equ	0xFD8
  1524                           
  1525 ;; *************** function _I2C_Master_Read *****************
  1526 ;; Defined at:
  1527 ;;		line 736 in file "../KB_Scan.X/Source/i2c.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  a               1    wreg     unsigned char 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  a               1   20[COMRAM] unsigned char 
  1532 ;;  temp            1   21[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      unsigned char 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         0       0       0       0       0       0       0
  1543 ;;      Locals:         2       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0
  1545 ;;      Totals:         2       0       0       0       0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    4
  1549 ;; This function calls:
  1550 ;;		_I2C_Master_Wait
  1551 ;; This function is called by:
  1552 ;;		_Read_I2C
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text16
  1557  000A82                     __ptext16:
  1558                           	opt stack 0
  1559  000A82                     _I2C_Master_Read:
  1560                           	opt stack 25
  1561                           
  1562                           ;incstack = 0
  1563                           ;I2C_Master_Read@a stored from wreg
  1564  000A82  6E3A               	movwf	I2C_Master_Read@a,c
  1565                           
  1566                           ;i2c.c: 738: uint8_t temp;
  1567                           ;i2c.c: 739: I2C_Master_Wait();
  1568  000A84  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1569                           
  1570                           ;i2c.c: 740: RCEN = 1;
  1571  000A88  86C5               	bsf	4037,3,c	;volatile
  1572                           
  1573                           ;i2c.c: 741: I2C_Master_Wait();
  1574  000A8A  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1575                           
  1576                           ;i2c.c: 742: temp = SSPBUF;
  1577  000A8E  CFC9 F03B          	movff	4041,I2C_Master_Read@temp	;volatile
  1578                           
  1579                           ;i2c.c: 743: I2C_Master_Wait();
  1580  000A92  EC8B  F005         	call	_I2C_Master_Wait	;wreg free
  1581                           
  1582                           ;i2c.c: 744: ACKDT = (a)?0:1;
  1583  000A96  503A               	movf	I2C_Master_Read@a,w,c
  1584  000A98  A4D8               	btfss	status,2,c
  1585  000A9A  D002               	goto	u40
  1586  000A9C  8AC5               	bsf	4037,5,c	;volatile
  1587  000A9E  D001               	goto	l1071
  1588  000AA0                     u40:
  1589  000AA0  9AC5               	bcf	4037,5,c	;volatile
  1590  000AA2                     l1071:
  1591                           
  1592                           ;i2c.c: 745: ACKEN = 1;
  1593  000AA2  88C5               	bsf	4037,4,c	;volatile
  1594                           
  1595                           ;i2c.c: 746: return temp;
  1596  000AA4  503B               	movf	I2C_Master_Read@temp,w,c
  1597  000AA6  0012               	return	
  1598  000AA8                     __end_of_I2C_Master_Read:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           intcon2	equ	0xFF1
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _I2C_Master_Wait *****************
  1607 ;; Defined at:
  1608 ;;		line 762 in file "../KB_Scan.X/Source/i2c.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0       0       0
  1625 ;;      Totals:         1       0       0       0       0       0       0
  1626 ;;Total ram usage:        1 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_I2C_Master_Read
  1633 ;;		_I2C_Master_Start
  1634 ;;		_I2C_Master_Stop
  1635 ;;		_I2C_Master_Write
  1636 ;;		_I2C_Master_RepeatedStart
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text17
  1641  000B16                     __ptext17:
  1642                           	opt stack 0
  1643  000B16                     _I2C_Master_Wait:
  1644                           	opt stack 25
  1645  000B16                     l205:
  1646  000B16  B4C7               	btfsc	4039,2,c	;volatile
  1647  000B18  D7FE               	goto	l205
  1648  000B1A  CFC5 F039          	movff	4037,??_I2C_Master_Wait	;volatile
  1649  000B1E  0E1F               	movlw	31
  1650  000B20  1639               	andwf	??_I2C_Master_Wait,f,c
  1651  000B22  B4D8               	btfsc	status,2,c
  1652  000B24  0012               	return	
  1653  000B26  D7F7               	goto	l205
  1654  000B28                     __end_of_I2C_Master_Wait:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           intcon2	equ	0xFF1
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _Encode_LED_Data_Channel1 *****************
  1663 ;; Defined at:
  1664 ;;		line 148 in file "../KB_Scan.X/Source/main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  DataReadI2C     1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  DataReadI2C     1   20[COMRAM] unsigned char 
  1669 ;;  index           1   19[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      unsigned char 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         0       0       0       0       0       0       0
  1680 ;;      Locals:         2       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    3
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text18
  1694  000A5A                     __ptext18:
  1695                           	opt stack 0
  1696  000A5A                     _Encode_LED_Data_Channel1:
  1697                           	opt stack 27
  1698                           
  1699                           ;incstack = 0
  1700                           ;Encode_LED_Data_Channel1@DataReadI2C stored from wreg
  1701  000A5A  6E3A               	movwf	Encode_LED_Data_Channel1@DataReadI2C,c
  1702                           
  1703                           ;main.c: 150: uint8_t index = 0;
  1704  000A5C  0E00               	movlw	0
  1705  000A5E  6E39               	movwf	Encode_LED_Data_Channel1@index,c
  1706                           
  1707                           ;main.c: 152: while(!(DataReadI2C & 0b00000001))
  1708  000A60  D003               	goto	l1315
  1709  000A62                     l1313:
  1710                           
  1711                           ;main.c: 153: {
  1712                           ;main.c: 154: DataReadI2C = DataReadI2C >> 1;
  1713  000A62  90D8               	bcf	status,0,c
  1714  000A64  303A               	rrcf	Encode_LED_Data_Channel1@DataReadI2C,w,c
  1715  000A66  6E3A               	movwf	Encode_LED_Data_Channel1@DataReadI2C,c
  1716  000A68                     l1315:
  1717  000A68  A03A               	btfss	Encode_LED_Data_Channel1@DataReadI2C,0,c
  1718  000A6A  D7FB               	goto	l1313
  1719                           
  1720                           ;main.c: 155: }
  1721                           ;main.c: 156: return(LED_Data_Chan1[index]);
  1722  000A6C  5039               	movf	Encode_LED_Data_Channel1@index,w,c
  1723  000A6E  0D01               	mullw	1
  1724  000A70  0E01               	movlw	low _LED_Data_Chan1
  1725  000A72  24F3               	addwf	prodl,w,c
  1726  000A74  6EF6               	movwf	tblptrl,c
  1727  000A76  0E06               	movlw	high _LED_Data_Chan1
  1728  000A78  20F4               	addwfc	prodh,w,c
  1729  000A7A  6EF7               	movwf	tblptrh,c
  1730  000A7C                     	if	0	;There are less than 3 active tblptr bytes
  1731  000A7C                     	endif
  1732  000A7C  0008               	tblrd		*
  1733  000A7E  50F5               	movf	tablat,w,c
  1734  000A80  0012               	return	
  1735  000A82                     __end_of_Encode_LED_Data_Channel1:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon2	equ	0xFF1
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _INTERRUPT_InterruptManager *****************
  1749 ;; Defined at:
  1750 ;;		line 57 in file "../KB_Scan.X/Source/interrupt_manager.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         0       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0
  1766 ;;      Temps:         14       0       0       0       0       0       0
  1767 ;;      Totals:        14       0       0       0       0       0       0
  1768 ;;Total ram usage:       14 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    2
  1771 ;; This function calls:
  1772 ;;		_I2C_BusCollisionISR
  1773 ;;		_I2C_ISR
  1774 ;; This function is called by:
  1775 ;;		Interrupt level 2
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	intcode
  1780  000008                     __pintcode:
  1781                           	opt stack 0
  1782  000008                     _INTERRUPT_InterruptManager:
  1783                           	opt stack 25
  1784                           
  1785                           ;incstack = 0
  1786  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1787  00000A  CFFA F02B          	movff	pclath,??_INTERRUPT_InterruptManager
  1788  00000E  CFFB F02C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1789  000012  CFE9 F02D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1790  000016  CFEA F02E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1791  00001A  CFE1 F02F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1792  00001E  CFE2 F030          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1793  000022  CFD9 F031          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1794  000026  CFDA F032          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1795  00002A  CFF3 F033          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1796  00002E  CFF4 F034          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1797  000032  CFF6 F035          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1798  000036  CFF7 F036          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1799  00003A  CFF8 F037          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1800  00003E  CFF5 F038          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1801                           
  1802                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  1803  000042  BCF2               	btfsc	intcon,6,c	;volatile
  1804  000044  A6A0               	btfss	4000,3,c	;volatile
  1805  000046  D005               	goto	i2l234
  1806  000048  A6A1               	btfss	4001,3,c	;volatile
  1807  00004A  D003               	goto	i2l234
  1808                           
  1809                           ;interrupt_manager.c: 61: {
  1810                           ;interrupt_manager.c: 62: I2C_BusCollisionISR();
  1811  00004C  ECB5  F005         	call	_I2C_BusCollisionISR	;wreg free
  1812                           
  1813                           ;interrupt_manager.c: 63: }
  1814  000050  D006               	goto	i2l238
  1815  000052                     i2l234:
  1816                           
  1817                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bit
      +                          s.SSPIF == 1)
  1818  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1819  000054  A69D               	btfss	3997,3,c	;volatile
  1820  000056  D003               	goto	i2l238
  1821  000058  B69E               	btfsc	3998,3,c	;volatile
  1822                           
  1823                           ;interrupt_manager.c: 65: {
  1824                           ;interrupt_manager.c: 66: I2C_ISR();
  1825  00005A  EC05  F003         	call	_I2C_ISR	;wreg free
  1826  00005E                     i2l238:
  1827  00005E  C038  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1828  000062  C037  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1829  000066  C036  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1830  00006A  C035  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1831  00006E  C034  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1832  000072  C033  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1833  000076  C032  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1834  00007A  C031  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1835  00007E  C030  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1836  000082  C02F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1837  000086  C02E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1838  00008A  C02D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1839  00008E  C02C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1840  000092  C02B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1841  000096  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1842  000098  0011               	retfie		f
  1843  00009A                     __end_of_INTERRUPT_InterruptManager:
  1844                           	opt stack 0
  1845                           pclatu	equ	0xFFB
  1846                           pclath	equ	0xFFA
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           prodh	equ	0xFF4
  1852                           prodl	equ	0xFF3
  1853                           intcon	equ	0xFF2
  1854                           intcon2	equ	0xFF1
  1855                           postinc0	equ	0xFEE
  1856                           fsr0h	equ	0xFEA
  1857                           fsr0l	equ	0xFE9
  1858                           wreg	equ	0xFE8
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function _I2C_ISR *****************
  1866 ;; Defined at:
  1867 ;;		line 235 in file "../KB_Scan.X/Source/i2c.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1881 ;;      Params:         0       0       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0
  1883 ;;      Temps:          2       0       0       0       0       0       0
  1884 ;;      Totals:         2       0       0       0       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		_I2C_FunctionComplete
  1890 ;;		_I2C_Stop
  1891 ;; This function is called by:
  1892 ;;		_INTERRUPT_InterruptManager
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text20
  1897  00060A                     __ptext20:
  1898                           	opt stack 0
  1899  00060A                     _I2C_ISR:
  1900                           	opt stack 25
  1901                           
  1902                           ;i2c.c: 238: static uint8_t *pi2c_buf_ptr;
  1903                           ;i2c.c: 239: static uint16_t i2c_address = 0;
  1904                           ;i2c.c: 240: static uint8_t i2c_bytes_left = 0;
  1905                           ;i2c.c: 241: static uint8_t i2c_10bit_address_restart = 0;
  1906                           ;i2c.c: 243: PIR1bits.SSPIF = 0;
  1907                           
  1908                           ;incstack = 0
  1909  00060A  969E               	bcf	3998,3,c	;volatile
  1910                           
  1911                           ;i2c.c: 247: if(SSPCON1bits.WCOL)
  1912  00060C  AEC6               	btfss	4038,7,c	;volatile
  1913  00060E  D0F9               	goto	i2l1233
  1914                           
  1915                           ;i2c.c: 248: {
  1916                           ;i2c.c: 250: SSPCON1bits.WCOL = 0;
  1917  000610  9EC6               	bcf	4038,7,c	;volatile
  1918                           
  1919                           ;i2c.c: 251: i2c_state = S_MASTER_IDLE;
  1920  000612  0E00               	movlw	0
  1921  000614  6E11               	movwf	_i2c_state,c
  1922                           
  1923                           ;i2c.c: 252: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  1924  000616  EE20 F003          	lfsr	2,3
  1925  00061A  500A               	movf	_p_i2c_current,w,c
  1926  00061C  26D9               	addwf	fsr2l,f,c
  1927  00061E  500B               	movf	_p_i2c_current+1,w,c
  1928  000620  22DA               	addwfc	fsr2h,f,c
  1929  000622  CFDE F029          	movff	postinc2,??_I2C_ISR
  1930  000626  CFDD F02A          	movff	postdec2,??_I2C_ISR+1
  1931  00062A  C029  FFD9         	movff	??_I2C_ISR,fsr2l
  1932  00062E  C02A  FFDA         	movff	??_I2C_ISR+1,fsr2h
  1933  000632  0E01               	movlw	1
  1934  000634  6EDF               	movwf	indf2,c
  1935                           
  1936                           ;i2c.c: 255: p_i2c_current = (0);
  1937  000636  0E00               	movlw	0
  1938  000638  6E0A               	movwf	_p_i2c_current,c
  1939  00063A  0E00               	movlw	0
  1940  00063C  6E0B               	movwf	_p_i2c_current+1,c
  1941                           
  1942                           ;i2c.c: 257: return;
  1943  00063E  0012               	return	
  1944  000640                     i2l106:
  1945                           
  1946                           ;i2c.c: 265: if(i2c_object.trStatus.s.empty != 1)
  1947  000640  B205               	btfsc	_i2c_object+4,1,c
  1948  000642  0012               	return	
  1949                           
  1950                           ;i2c.c: 266: {
  1951                           ;i2c.c: 268: p_i2c_current = i2c_object.pTrHead;
  1952  000644  C003  F00A         	movff	_i2c_object+2,_p_i2c_current
  1953  000648  C004  F00B         	movff	_i2c_object+3,_p_i2c_current+1
  1954                           
  1955                           ;i2c.c: 269: i2c_trb_count = i2c_object.pTrHead->count;
  1956  00064C  C003  FFD9         	movff	_i2c_object+2,fsr2l
  1957  000650  C004  FFDA         	movff	_i2c_object+3,fsr2h
  1958  000654  50DF               	movf	indf2,w,c
  1959  000656  6E10               	movwf	_i2c_trb_count,c
  1960                           
  1961                           ;i2c.c: 270: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  1962  000658  EE20 F001          	lfsr	2,1
  1963  00065C  5003               	movf	_i2c_object+2,w,c
  1964  00065E  26D9               	addwf	fsr2l,f,c
  1965  000660  5004               	movf	_i2c_object+3,w,c
  1966  000662  22DA               	addwfc	fsr2h,f,c
  1967  000664  CFDE F00C          	movff	postinc2,_p_i2c_trb_current
  1968  000668  CFDD F00D          	movff	postdec2,_p_i2c_trb_current+1
  1969                           
  1970                           ;i2c.c: 272: i2c_object.pTrHead++;
  1971  00066C  0E06               	movlw	6
  1972  00066E  2603               	addwf	_i2c_object+2,f,c
  1973  000670  0E00               	movlw	0
  1974  000672  2204               	addwfc	_i2c_object+3,f,c
  1975                           
  1976                           ;i2c.c: 275: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  1977  000674  0E24               	movlw	low (_i2c_tr_queue+6)
  1978  000676  1803               	xorwf	_i2c_object+2,w,c
  1979  000678  E108               	bnz	i2l1125
  1980  00067A  0E00               	movlw	high (_i2c_tr_queue+6)
  1981  00067C  1804               	xorwf	_i2c_object+3,w,c
  1982  00067E  A4D8               	btfss	status,2,c
  1983  000680  D004               	goto	i2l1125
  1984                           
  1985                           ;i2c.c: 276: {
  1986                           ;i2c.c: 278: i2c_object.pTrHead = i2c_tr_queue;
  1987  000682  0E1E               	movlw	low _i2c_tr_queue
  1988  000684  6E03               	movwf	_i2c_object+2,c
  1989  000686  0E00               	movlw	high _i2c_tr_queue
  1990  000688  6E04               	movwf	_i2c_object+3,c
  1991  00068A                     i2l1125:
  1992                           
  1993                           ;i2c.c: 279: }
  1994                           ;i2c.c: 283: i2c_object.trStatus.s.full = 0;
  1995  00068A  9005               	bcf	_i2c_object+4,0,c
  1996                           
  1997                           ;i2c.c: 286: if(i2c_object.pTrHead == i2c_object.pTrTail)
  1998  00068C  5001               	movf	_i2c_object,w,c
  1999  00068E  1803               	xorwf	_i2c_object+2,w,c
  2000  000690  E104               	bnz	i2l109
  2001  000692  5002               	movf	_i2c_object+1,w,c
  2002  000694  1804               	xorwf	_i2c_object+3,w,c
  2003  000696  B4D8               	btfsc	status,2,c
  2004                           
  2005                           ;i2c.c: 287: {
  2006                           ;i2c.c: 289: i2c_object.trStatus.s.empty = 1;
  2007  000698  8205               	bsf	_i2c_object+4,1,c
  2008  00069A                     i2l109:
  2009                           
  2010                           ;i2c.c: 290: }
  2011                           ;i2c.c: 293: SSPCON2bits.SEN = 1;
  2012  00069A  80C5               	bsf	4037,0,c	;volatile
  2013                           
  2014                           ;i2c.c: 296: i2c_state = S_MASTER_SEND_ADDR;
  2015  00069C  0E02               	movlw	2
  2016  00069E  6E11               	movwf	_i2c_state,c
  2017                           
  2018                           ;i2c.c: 297: }
  2019                           ;i2c.c: 299: break;
  2020  0006A0  0012               	return	
  2021  0006A2                     i2l111:
  2022                           
  2023                           ;i2c.c: 306: SSPCON2bits.RSEN = 1;
  2024  0006A2  82C5               	bsf	4037,1,c	;volatile
  2025                           
  2026                           ;i2c.c: 309: i2c_state = S_MASTER_SEND_ADDR;
  2027  0006A4  0E02               	movlw	2
  2028  0006A6  6E11               	movwf	_i2c_state,c
  2029                           
  2030                           ;i2c.c: 311: break;
  2031  0006A8  0012               	return	
  2032  0006AA                     i2l112:
  2033                           
  2034                           ;i2c.c: 315: if(SSPCON2bits.ACKSTAT)
  2035  0006AA  ACC5               	btfss	4037,6,c	;volatile
  2036  0006AC  D005               	goto	i2l1137
  2037                           
  2038                           ;i2c.c: 316: {
  2039                           ;i2c.c: 317: i2c_object.i2cErrors++;
  2040  0006AE  2A07               	incf	_i2c_object+6,f,c
  2041                           
  2042                           ;i2c.c: 318: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2043  0006B0  0E04               	movlw	4
  2044  0006B2  ECE0  F004         	call	_I2C_Stop
  2045                           
  2046                           ;i2c.c: 319: }
  2047  0006B6  0012               	return	
  2048  0006B8                     i2l1137:
  2049                           
  2050                           ;i2c.c: 320: else
  2051                           ;i2c.c: 321: {
  2052                           ;i2c.c: 323: SSPBUF = (i2c_address >> 1) & 0x00FF;
  2053  0006B8  90D8               	bcf	status,0,c
  2054  0006BA  3025               	rrcf	I2C_ISR@i2c_address+1,w,c
  2055  0006BC  6E2A               	movwf	(??_I2C_ISR+1)& (0+255),c
  2056  0006BE  3024               	rrcf	I2C_ISR@i2c_address,w,c
  2057  0006C0  6E29               	movwf	??_I2C_ISR& (0+255),c
  2058  0006C2  5029               	movf	??_I2C_ISR,w,c
  2059  0006C4  6EC9               	movwf	4041,c	;volatile
  2060                           
  2061                           ;i2c.c: 326: if(i2c_address & 0x01)
  2062  0006C6  A024               	btfss	I2C_ISR@i2c_address,0,c
  2063  0006C8  D003               	goto	i2l1143
  2064                           
  2065                           ;i2c.c: 327: {
  2066                           ;i2c.c: 330: i2c_state = S_MASTER_10BIT_RESTART;
  2067  0006CA  0E0B               	movlw	11
  2068  0006CC  6E11               	movwf	_i2c_state,c
  2069                           
  2070                           ;i2c.c: 331: }
  2071  0006CE  0012               	return	
  2072  0006D0                     i2l1143:
  2073                           
  2074                           ;i2c.c: 332: else
  2075                           ;i2c.c: 333: {
  2076                           ;i2c.c: 335: i2c_state = S_MASTER_SEND_DATA;
  2077  0006D0  0E03               	movlw	3
  2078  0006D2  6E11               	movwf	_i2c_state,c
  2079                           
  2080                           ;i2c.c: 336: }
  2081                           ;i2c.c: 337: }
  2082                           ;i2c.c: 339: break;
  2083  0006D4  0012               	return	
  2084  0006D6                     i2l117:
  2085                           
  2086                           ;i2c.c: 343: if(SSPCON2bits.ACKSTAT)
  2087  0006D6  ACC5               	btfss	4037,6,c	;volatile
  2088  0006D8  D005               	goto	i2l118
  2089                           
  2090                           ;i2c.c: 344: {
  2091                           ;i2c.c: 345: i2c_object.i2cErrors++;
  2092  0006DA  2A07               	incf	_i2c_object+6,f,c
  2093                           
  2094                           ;i2c.c: 346: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2095  0006DC  0E04               	movlw	4
  2096  0006DE  ECE0  F004         	call	_I2C_Stop
  2097                           
  2098                           ;i2c.c: 347: }
  2099  0006E2  0012               	return	
  2100  0006E4                     i2l118:
  2101                           
  2102                           ;i2c.c: 348: else
  2103                           ;i2c.c: 349: {
  2104                           ;i2c.c: 352: SSPCON2bits.RSEN = 1;
  2105  0006E4  82C5               	bsf	4037,1,c	;volatile
  2106                           
  2107                           ;i2c.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2108  0006E6  C024  F029         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  2109  0006EA  C025  F02A         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  2110  0006EE  C02A  F029         	movff	??_I2C_ISR+1,??_I2C_ISR
  2111  0006F2  6A2A               	clrf	??_I2C_ISR+1,c
  2112  0006F4  0E06               	movlw	6
  2113  0006F6  1629               	andwf	??_I2C_ISR,f,c
  2114  0006F8  0E00               	movlw	0
  2115  0006FA  162A               	andwf	??_I2C_ISR+1,f,c
  2116  0006FC  0EF0               	movlw	240
  2117  0006FE  1029               	iorwf	??_I2C_ISR,w,c
  2118  000700  6E24               	movwf	I2C_ISR@i2c_address,c
  2119  000702  502A               	movf	??_I2C_ISR+1,w,c
  2120  000704  6E25               	movwf	I2C_ISR@i2c_address+1,c
  2121                           
  2122                           ;i2c.c: 359: i2c_address |= 0x0001;
  2123  000706  8024               	bsf	I2C_ISR@i2c_address,0,c
  2124                           
  2125                           ;i2c.c: 362: i2c_10bit_address_restart = 1;
  2126  000708  0E01               	movlw	1
  2127  00070A  6E0E               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  2128                           
  2129                           ;i2c.c: 365: i2c_state = S_MASTER_SEND_ADDR;
  2130  00070C  0E02               	movlw	2
  2131  00070E  6E11               	movwf	_i2c_state,c
  2132                           
  2133                           ;i2c.c: 366: }
  2134                           ;i2c.c: 368: break;
  2135  000710  0012               	return	
  2136  000712                     i2l1157:
  2137                           
  2138                           ;i2c.c: 383: if(i2c_10bit_address_restart != 1)
  2139  000712  040E               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  2140  000714  B4D8               	btfsc	status,2,c
  2141  000716  D01A               	goto	i2l122
  2142                           
  2143                           ;i2c.c: 384: {
  2144                           ;i2c.c: 386: i2c_address = p_i2c_trb_current->address;
  2145  000718  C00C  FFD9         	movff	_p_i2c_trb_current,fsr2l
  2146  00071C  C00D  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  2147  000720  CFDE F024          	movff	postinc2,I2C_ISR@i2c_address
  2148  000724  CFDD F025          	movff	postdec2,I2C_ISR@i2c_address+1
  2149                           
  2150                           ;i2c.c: 387: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  2151  000728  EE20 F003          	lfsr	2,3
  2152  00072C  500C               	movf	_p_i2c_trb_current,w,c
  2153  00072E  26D9               	addwf	fsr2l,f,c
  2154  000730  500D               	movf	_p_i2c_trb_current+1,w,c
  2155  000732  22DA               	addwfc	fsr2h,f,c
  2156  000734  CFDE F008          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  2157  000738  CFDD F009          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  2158                           
  2159                           ;i2c.c: 388: i2c_bytes_left = p_i2c_trb_current->length;
  2160  00073C  EE20 F002          	lfsr	2,2
  2161  000740  500C               	movf	_p_i2c_trb_current,w,c
  2162  000742  26D9               	addwf	fsr2l,f,c
  2163  000744  500D               	movf	_p_i2c_trb_current+1,w,c
  2164  000746  22DA               	addwfc	fsr2h,f,c
  2165  000748  50DF               	movf	indf2,w,c
  2166  00074A  6E0F               	movwf	I2C_ISR@i2c_bytes_left,c
  2167  00074C                     i2l122:
  2168                           
  2169                           ;i2c.c: 411: else
  2170                           ;i2c.c: 412: {
  2171                           ;i2c.c: 414: SSPBUF = i2c_address;
  2172  00074C  C024  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  2173                           
  2174                           ;i2c.c: 415: if(i2c_address & 0x01)
  2175  000750  A024               	btfss	I2C_ISR@i2c_address,0,c
  2176  000752  D003               	goto	i2l1177
  2177                           
  2178                           ;i2c.c: 416: {
  2179                           ;i2c.c: 418: i2c_state = S_MASTER_ACK_ADDR;
  2180  000754  0E05               	movlw	5
  2181  000756  6E11               	movwf	_i2c_state,c
  2182                           
  2183                           ;i2c.c: 419: }
  2184  000758  0012               	return	
  2185  00075A                     i2l1177:
  2186                           
  2187                           ;i2c.c: 420: else
  2188                           ;i2c.c: 421: {
  2189                           ;i2c.c: 423: i2c_state = S_MASTER_SEND_DATA;
  2190  00075A  0E03               	movlw	3
  2191  00075C  6E11               	movwf	_i2c_state,c
  2192                           
  2193                           ;i2c.c: 424: }
  2194                           ;i2c.c: 425: }
  2195                           ;i2c.c: 426: break;
  2196  00075E  0012               	return	
  2197  000760                     i2l128:
  2198                           
  2199                           ;i2c.c: 431: if(SSPCON2bits.ACKSTAT)
  2200  000760  ACC5               	btfss	4037,6,c	;volatile
  2201  000762  D006               	goto	i2l1185
  2202                           
  2203                           ;i2c.c: 432: {
  2204                           ;i2c.c: 434: i2c_object.i2cErrors++;
  2205  000764  2A07               	incf	_i2c_object+6,f,c
  2206                           
  2207                           ;i2c.c: 437: SSPCON2bits.ACKSTAT = 0;
  2208  000766  9CC5               	bcf	4037,6,c	;volatile
  2209                           
  2210                           ;i2c.c: 440: I2C_Stop(I2C_DATA_NO_ACK);
  2211  000768  0E05               	movlw	5
  2212  00076A  ECE0  F004         	call	_I2C_Stop
  2213                           
  2214                           ;i2c.c: 442: }
  2215  00076E  0012               	return	
  2216  000770                     i2l1185:
  2217                           
  2218                           ;i2c.c: 443: else
  2219                           ;i2c.c: 444: {
  2220                           ;i2c.c: 446: if(i2c_bytes_left-- == 0U)
  2221  000770  060F               	decf	I2C_ISR@i2c_bytes_left,f,c
  2222  000772  280F               	incf	I2C_ISR@i2c_bytes_left,w,c
  2223  000774  A4D8               	btfss	status,2,c
  2224  000776  D00E               	goto	i2l1195
  2225                           
  2226                           ;i2c.c: 447: {
  2227                           ;i2c.c: 451: p_i2c_trb_current++;
  2228  000778  0E06               	movlw	6
  2229  00077A  260C               	addwf	_p_i2c_trb_current,f,c
  2230  00077C  0E00               	movlw	0
  2231  00077E  220D               	addwfc	_p_i2c_trb_current+1,f,c
  2232                           
  2233                           ;i2c.c: 454: if(--i2c_trb_count == 0)
  2234  000780  2E10               	decfsz	_i2c_trb_count,f,c
  2235  000782  D004               	goto	i2l132
  2236                           
  2237                           ;i2c.c: 455: {
  2238                           ;i2c.c: 456: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2239  000784  0E00               	movlw	0
  2240  000786  ECE0  F004         	call	_I2C_Stop
  2241                           
  2242                           ;i2c.c: 457: }
  2243  00078A  0012               	return	
  2244  00078C                     i2l132:
  2245                           
  2246                           ;i2c.c: 458: else
  2247                           ;i2c.c: 459: {
  2248                           ;i2c.c: 466: SSPCON2bits.RSEN = 1;
  2249  00078C  82C5               	bsf	4037,1,c	;volatile
  2250                           
  2251                           ;i2c.c: 469: i2c_state = S_MASTER_SEND_ADDR;
  2252  00078E  0E02               	movlw	2
  2253  000790  6E11               	movwf	_i2c_state,c
  2254                           
  2255                           ;i2c.c: 471: }
  2256                           ;i2c.c: 472: }
  2257  000792  0012               	return	
  2258  000794                     i2l1195:
  2259                           
  2260                           ;i2c.c: 473: else
  2261                           ;i2c.c: 474: {
  2262                           ;i2c.c: 476: SSPBUF = *pi2c_buf_ptr++;
  2263  000794  C008  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2264  000798  C009  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2265  00079C  50DF               	movf	indf2,w,c
  2266  00079E  6EC9               	movwf	4041,c	;volatile
  2267  0007A0  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2268  0007A2  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2269                           
  2270                           ;i2c.c: 477: }
  2271                           ;i2c.c: 478: }
  2272                           ;i2c.c: 479: break;
  2273  0007A4  0012               	return	
  2274  0007A6                     i2l135:
  2275                           
  2276                           ;i2c.c: 484: if(SSPCON2bits.ACKSTAT)
  2277  0007A6  ACC5               	btfss	4037,6,c	;volatile
  2278  0007A8  D006               	goto	i2l136
  2279                           
  2280                           ;i2c.c: 485: {
  2281                           ;i2c.c: 488: i2c_object.i2cErrors++;
  2282  0007AA  2A07               	incf	_i2c_object+6,f,c
  2283                           
  2284                           ;i2c.c: 491: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2285  0007AC  0E04               	movlw	4
  2286  0007AE  ECE0  F004         	call	_I2C_Stop
  2287                           
  2288                           ;i2c.c: 494: SSPCON2bits.ACKSTAT = 0;
  2289  0007B2  9CC5               	bcf	4037,6,c	;volatile
  2290                           
  2291                           ;i2c.c: 495: }
  2292  0007B4  0012               	return	
  2293  0007B6                     i2l136:
  2294                           
  2295                           ;i2c.c: 496: else
  2296                           ;i2c.c: 497: {
  2297                           ;i2c.c: 498: SSPCON2bits.RCEN = 1;
  2298  0007B6  86C5               	bsf	4037,3,c	;volatile
  2299                           
  2300                           ;i2c.c: 499: i2c_state = S_MASTER_ACK_RCV_DATA;
  2301  0007B8  0E08               	movlw	8
  2302  0007BA  6E11               	movwf	_i2c_state,c
  2303                           
  2304                           ;i2c.c: 500: }
  2305                           ;i2c.c: 501: break;
  2306  0007BC  0012               	return	
  2307  0007BE                     i2l1207:
  2308                           
  2309                           ;i2c.c: 508: i2c_state = S_MASTER_ACK_RCV_DATA;
  2310  0007BE  0E08               	movlw	8
  2311  0007C0  6E11               	movwf	_i2c_state,c
  2312                           
  2313                           ;i2c.c: 511: SSPCON2bits.RCEN = 1;
  2314  0007C2  86C5               	bsf	4037,3,c	;volatile
  2315                           
  2316                           ;i2c.c: 513: break;
  2317  0007C4  0012               	return	
  2318  0007C6                     i2l1211:
  2319                           
  2320                           ;i2c.c: 518: *pi2c_buf_ptr++ = SSPBUF;
  2321  0007C6  C008  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2322  0007CA  C009  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2323  0007CE  CFC9 FFDF          	movff	4041,indf2	;volatile
  2324  0007D2  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2325  0007D4  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2326                           
  2327                           ;i2c.c: 521: if(--i2c_bytes_left)
  2328  0007D6  0E01               	movlw	1
  2329  0007D8  5E0F               	subwf	I2C_ISR@i2c_bytes_left,f,c
  2330  0007DA  B4D8               	btfsc	status,2,c
  2331  0007DC  D004               	goto	i2l140
  2332                           
  2333                           ;i2c.c: 522: {
  2334                           ;i2c.c: 528: SSPCON2bits.ACKDT = 0;
  2335  0007DE  9AC5               	bcf	4037,5,c	;volatile
  2336                           
  2337                           ;i2c.c: 531: i2c_state = S_MASTER_RCV_DATA;
  2338  0007E0  0E06               	movlw	6
  2339  0007E2  6E11               	movwf	_i2c_state,c
  2340                           
  2341                           ;i2c.c: 532: }
  2342  0007E4  D003               	goto	i2l1223
  2343  0007E6                     i2l140:
  2344                           
  2345                           ;i2c.c: 533: else
  2346                           ;i2c.c: 534: {
  2347                           ;i2c.c: 538: SSPCON2bits.ACKDT = 1;
  2348  0007E6  8AC5               	bsf	4037,5,c	;volatile
  2349                           
  2350                           ;i2c.c: 540: I2C_FunctionComplete();
  2351  0007E8  EC7F  F005         	call	_I2C_FunctionComplete	;wreg free
  2352  0007EC                     i2l1223:
  2353                           
  2354                           ;i2c.c: 541: }
  2355                           ;i2c.c: 544: SSPCON2bits.ACKEN = 1;
  2356  0007EC  88C5               	bsf	4037,4,c	;volatile
  2357                           
  2358                           ;i2c.c: 545: break;
  2359  0007EE  0012               	return	
  2360  0007F0                     i2l1225:
  2361                           
  2362                           ;i2c.c: 548: case S_MASTER_SEND_STOP:
  2363                           ;i2c.c: 551: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2364  0007F0  0E00               	movlw	0
  2365  0007F2  ECE0  F004         	call	_I2C_Stop
  2366                           
  2367                           ;i2c.c: 552: break;
  2368  0007F6  0012               	return	
  2369  0007F8                     i2l1227:
  2370                           
  2371                           ;i2c.c: 558: i2c_object.i2cErrors++;
  2372  0007F8  2A07               	incf	_i2c_object+6,f,c
  2373                           
  2374                           ;i2c.c: 559: I2C_Stop(I2C_LOST_STATE);
  2375  0007FA  0E06               	movlw	6
  2376  0007FC  ECE0  F004         	call	_I2C_Stop
  2377                           
  2378                           ;i2c.c: 562: }
  2379                           
  2380                           ;i2c.c: 560: break;
  2381  000800  0012               	return	
  2382  000802                     i2l1233:
  2383  000802  5011               	movf	_i2c_state,w,c
  2384                           
  2385                           ; Switch size 1, requested type "space"
  2386                           ; Number of cases is 11, Range of values is 0 to 11
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte           34    18 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391  000804  0A00               	xorlw	0	; case 0
  2392  000806  B4D8               	btfsc	status,2,c
  2393  000808  D71B               	goto	i2l106
  2394  00080A  0A01               	xorlw	1	; case 1
  2395  00080C  B4D8               	btfsc	status,2,c
  2396  00080E  D749               	goto	i2l111
  2397  000810  0A03               	xorlw	3	; case 2
  2398  000812  B4D8               	btfsc	status,2,c
  2399  000814  D77E               	goto	i2l1157
  2400  000816  0A01               	xorlw	1	; case 3
  2401  000818  B4D8               	btfsc	status,2,c
  2402  00081A  D7A2               	goto	i2l128
  2403  00081C  0A07               	xorlw	7	; case 4
  2404  00081E  B4D8               	btfsc	status,2,c
  2405  000820  D7E7               	goto	i2l1225
  2406  000822  0A01               	xorlw	1	; case 5
  2407  000824  B4D8               	btfsc	status,2,c
  2408  000826  D7BF               	goto	i2l135
  2409  000828  0A03               	xorlw	3	; case 6
  2410  00082A  B4D8               	btfsc	status,2,c
  2411  00082C  D7C8               	goto	i2l1207
  2412  00082E  0A01               	xorlw	1	; case 7
  2413  000830  B4D8               	btfsc	status,2,c
  2414  000832  D7DE               	goto	i2l1225
  2415  000834  0A0F               	xorlw	15	; case 8
  2416  000836  B4D8               	btfsc	status,2,c
  2417  000838  D7C6               	goto	i2l1211
  2418  00083A  0A02               	xorlw	2	; case 10
  2419  00083C  B4D8               	btfsc	status,2,c
  2420  00083E  D735               	goto	i2l112
  2421  000840  0A01               	xorlw	1	; case 11
  2422  000842  B4D8               	btfsc	status,2,c
  2423  000844  D748               	goto	i2l117
  2424  000846  D7D8               	goto	i2l1227
  2425  000848                     __end_of_I2C_ISR:
  2426                           	opt stack 0
  2427                           pclatu	equ	0xFFB
  2428                           pclath	equ	0xFFA
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           intcon2	equ	0xFF1
  2437                           postinc0	equ	0xFEE
  2438                           fsr0h	equ	0xFEA
  2439                           fsr0l	equ	0xFE9
  2440                           wreg	equ	0xFE8
  2441                           fsr1h	equ	0xFE2
  2442                           fsr1l	equ	0xFE1
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           postdec2	equ	0xFDD
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function _I2C_Stop *****************
  2451 ;; Defined at:
  2452 ;;		line 583 in file "../KB_Scan.X/Source/i2c.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  completion_c    1    wreg     enum E3229
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  completion_c    1    2[COMRAM] enum E3229
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2466 ;;      Params:         0       0       0       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0       0       0
  2469 ;;      Totals:         3       0       0       0       0       0       0
  2470 ;;Total ram usage:        3 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_I2C_ISR
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text21
  2480  0009C0                     __ptext21:
  2481                           	opt stack 0
  2482  0009C0                     _I2C_Stop:
  2483                           	opt stack 25
  2484                           
  2485                           ;incstack = 0
  2486                           ;I2C_Stop@completion_code stored from wreg
  2487  0009C0  6E28               	movwf	I2C_Stop@completion_code,c
  2488                           
  2489                           ;i2c.c: 586: SSPCON2bits.PEN = 1;
  2490  0009C2  84C5               	bsf	4037,2,c	;volatile
  2491                           
  2492                           ;i2c.c: 589: if (p_i2c_current->pTrFlag != (0))
  2493  0009C4  EE20 F003          	lfsr	2,3
  2494  0009C8  500A               	movf	_p_i2c_current,w,c
  2495  0009CA  26D9               	addwf	fsr2l,f,c
  2496  0009CC  500B               	movf	_p_i2c_current+1,w,c
  2497  0009CE  22DA               	addwfc	fsr2h,f,c
  2498  0009D0  50DE               	movf	postinc2,w,c
  2499  0009D2  10DE               	iorwf	postinc2,w,c
  2500  0009D4  B4D8               	btfsc	status,2,c
  2501  0009D6  D010               	goto	i2l1053
  2502                           
  2503                           ;i2c.c: 590: {
  2504                           ;i2c.c: 592: *(p_i2c_current->pTrFlag) = completion_code;
  2505  0009D8  EE20 F003          	lfsr	2,3
  2506  0009DC  500A               	movf	_p_i2c_current,w,c
  2507  0009DE  26D9               	addwf	fsr2l,f,c
  2508  0009E0  500B               	movf	_p_i2c_current+1,w,c
  2509  0009E2  22DA               	addwfc	fsr2h,f,c
  2510  0009E4  CFDE F026          	movff	postinc2,??_I2C_Stop
  2511  0009E8  CFDD F027          	movff	postdec2,??_I2C_Stop+1
  2512  0009EC  C026  FFD9         	movff	??_I2C_Stop,fsr2l
  2513  0009F0  C027  FFDA         	movff	??_I2C_Stop+1,fsr2h
  2514  0009F4  C028  FFDF         	movff	I2C_Stop@completion_code,indf2
  2515  0009F8                     i2l1053:
  2516                           
  2517                           ;i2c.c: 593: }
  2518                           ;i2c.c: 596: i2c_state = S_MASTER_IDLE;
  2519  0009F8  0E00               	movlw	0
  2520  0009FA  6E11               	movwf	_i2c_state,c
  2521  0009FC  0012               	return		;funcret
  2522  0009FE                     __end_of_I2C_Stop:
  2523                           	opt stack 0
  2524                           pclatu	equ	0xFFB
  2525                           pclath	equ	0xFFA
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodh	equ	0xFF4
  2531                           prodl	equ	0xFF3
  2532                           intcon	equ	0xFF2
  2533                           intcon2	equ	0xFF1
  2534                           postinc0	equ	0xFEE
  2535                           fsr0h	equ	0xFEA
  2536                           fsr0l	equ	0xFE9
  2537                           wreg	equ	0xFE8
  2538                           fsr1h	equ	0xFE2
  2539                           fsr1l	equ	0xFE1
  2540                           indf2	equ	0xFDF
  2541                           postinc2	equ	0xFDE
  2542                           postdec2	equ	0xFDD
  2543                           fsr2h	equ	0xFDA
  2544                           fsr2l	equ	0xFD9
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _I2C_FunctionComplete *****************
  2548 ;; Defined at:
  2549 ;;		line 565 in file "../KB_Scan.X/Source/i2c.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2563 ;;      Params:         0       0       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_I2C_ISR
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text22
  2577  000AFE                     __ptext22:
  2578                           	opt stack 0
  2579  000AFE                     _I2C_FunctionComplete:
  2580                           	opt stack 25
  2581                           
  2582                           ;i2c.c: 569: p_i2c_trb_current++;
  2583                           
  2584                           ;incstack = 0
  2585  000AFE  0E06               	movlw	6
  2586  000B00  260C               	addwf	_p_i2c_trb_current,f,c
  2587  000B02  0E00               	movlw	0
  2588  000B04  220D               	addwfc	_p_i2c_trb_current+1,f,c
  2589                           
  2590                           ;i2c.c: 572: if(--i2c_trb_count == 0)
  2591  000B06  2E10               	decfsz	_i2c_trb_count,f,c
  2592  000B08  D003               	goto	i2l1061
  2593                           
  2594                           ;i2c.c: 573: {
  2595                           ;i2c.c: 574: i2c_state = S_MASTER_SEND_STOP;
  2596  000B0A  0E04               	movlw	4
  2597  000B0C  6E11               	movwf	_i2c_state,c
  2598                           
  2599                           ;i2c.c: 575: }
  2600  000B0E  0012               	return	
  2601  000B10                     i2l1061:
  2602                           
  2603                           ;i2c.c: 576: else
  2604                           ;i2c.c: 577: {
  2605                           ;i2c.c: 578: i2c_state = S_MASTER_RESTART;
  2606  000B10  0E01               	movlw	1
  2607  000B12  6E11               	movwf	_i2c_state,c
  2608  000B14  0012               	return	
  2609  000B16                     __end_of_I2C_FunctionComplete:
  2610                           	opt stack 0
  2611                           pclatu	equ	0xFFB
  2612                           pclath	equ	0xFFA
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           intcon	equ	0xFF2
  2620                           intcon2	equ	0xFF1
  2621                           postinc0	equ	0xFEE
  2622                           fsr0h	equ	0xFEA
  2623                           fsr0l	equ	0xFE9
  2624                           wreg	equ	0xFE8
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           indf2	equ	0xFDF
  2628                           postinc2	equ	0xFDE
  2629                           postdec2	equ	0xFDD
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function _I2C_BusCollisionISR *****************
  2635 ;; Defined at:
  2636 ;;		line 730 in file "../KB_Scan.X/Source/i2c.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		None
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2650 ;;      Params:         0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_INTERRUPT_InterruptManager
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text23
  2664  000B6A                     __ptext23:
  2665                           	opt stack 0
  2666  000B6A                     _I2C_BusCollisionISR:
  2667                           	opt stack 26
  2668                           
  2669                           ;incstack = 0
  2670  000B6A  0012               	return		;funcret
  2671  000B6C                     __end_of_I2C_BusCollisionISR:
  2672                           	opt stack 0
  2673                           pclatu	equ	0xFFB
  2674                           pclath	equ	0xFFA
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           prodh	equ	0xFF4
  2680                           prodl	equ	0xFF3
  2681                           intcon	equ	0xFF2
  2682                           intcon2	equ	0xFF1
  2683                           postinc0	equ	0xFEE
  2684                           fsr0h	equ	0xFEA
  2685                           fsr0l	equ	0xFE9
  2686                           wreg	equ	0xFE8
  2687                           fsr1h	equ	0xFE2
  2688                           fsr1l	equ	0xFE1
  2689                           indf2	equ	0xFDF
  2690                           postinc2	equ	0xFDE
  2691                           postdec2	equ	0xFDD
  2692                           fsr2h	equ	0xFDA
  2693                           fsr2l	equ	0xFD9
  2694                           status	equ	0xFD8
  2695                           pclatu	equ	0xFFB
  2696                           pclath	equ	0xFFA
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           intcon2	equ	0xFF1
  2705                           postinc0	equ	0xFEE
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           fsr1h	equ	0xFE2
  2710                           fsr1l	equ	0xFE1
  2711                           indf2	equ	0xFDF
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718                           	psect	rparam
  2719  0000                     pclatu	equ	0xFFB
  2720                           pclath	equ	0xFFA
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           intcon	equ	0xFF2
  2728                           intcon2	equ	0xFF1
  2729                           postinc0	equ	0xFEE
  2730                           fsr0h	equ	0xFEA
  2731                           fsr0l	equ	0xFE9
  2732                           wreg	equ	0xFE8
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           postdec2	equ	0xFDD
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742                           	psect	temp
  2743  000042                     btemp:
  2744                           	opt stack 0
  2745  000042                     	ds	1
  2746  0000                     int$flags	set	btemp
  2747                           pclatu	equ	0xFFB
  2748                           pclath	equ	0xFFA
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           intcon2	equ	0xFF1
  2757                           postinc0	equ	0xFEE
  2758                           fsr0h	equ	0xFEA
  2759                           fsr0l	equ	0xFE9
  2760                           wreg	equ	0xFE8
  2761                           fsr1h	equ	0xFE2
  2762                           fsr1l	equ	0xFE1
  2763                           indf2	equ	0xFDF
  2764                           postinc2	equ	0xFDE
  2765                           postdec2	equ	0xFDD
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      65
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    F3347.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F3342.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S35$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    S47$pTrFlag	PTR enum E3229 size(2) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E3229 size(2) Largest target is 0

    S47$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(COMRAM[6]), I2C_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S58$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    S58$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_Read_I2C
    _Write_I2C->_I2C_Master_Write
    _Read_I2C->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     601
                                             25 COMRAM     3     3      0
           _Encode_LED_Data_Channel1
                           _Read_I2C
                       _Read_Port_IN
                  _SYSTEM_Initialize
                          _Write_I2C
 ---------------------------------------------------------------------------------
 (1) _Write_I2C                                            3     2      1     273
                                             21 COMRAM     3     2      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CCP2_Initialize
                   _CVREF_Initialize
                   _ECCP1_Initialize
                 _EXT_INT_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CVREF_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Port_IN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_I2C                                             3     3      0     120
                                             22 COMRAM     3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      15
                                             20 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                             20 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Encode_LED_Data_Channel1                             2     2      0      45
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
                _I2C_BusCollisionISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              2     2      0      15
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Encode_LED_Data_Channel1
   _Read_I2C
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Read_Port_IN
   _SYSTEM_Initialize
     _CCP2_Initialize
     _CVREF_Initialize
     _ECCP1_Initialize
     _EXT_INT_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Write_I2C
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _INTERRUPT_InterruptManager (ROOT)
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      41       1       69.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      15        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Jul 29 17:11:47 2017

              I2C_ISR@i2c_bytes_left 000F                         main@Led_Data 0040  
                                 u40 0AA0    __size_of_Encode_LED_Data_Channel1 0028  
          ?_Encode_LED_Data_Channel1 0026                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                          __CFG_LVP$ON 000000  
                                l205 0B16                                  l304 08D4  
                       __CFG_CPB$OFF 000000                                  _PEN 007E2A  
                       __CFG_CPD$OFF 000000                                  u507 0938  
                                u517 095C                                  _SEN 007E28  
                                u477 098C                                  u487 09B6  
                                u497 0902                      __end_of_I2C_ISR 0848  
                       __CFG_BORV$18 000000                                  wreg 000FE8  
           __end_of_CVREF_Initialize 0B62                       _LED_Data_Chan1 0601  
                        main@channel 003F                                 l1071 0AA2  
                               l1313 0A62                                 l1315 0A68  
                               l1591 0888                                 l1583 0864  
                               l1593 089C                                 l1595 08B0  
                               l1579 0858                                 l1599 08BA  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D               ??_I2C_FunctionComplete 0026  
                      __CFG_DEBUG$ON 000000                                 _RCEN 007E2B  
                               _RSEN 007E29                                 _WPUB 000F7C  
            __end_of_CCP2_Initialize 0B36                                 _main 0848  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0042  
                   __end_of_I2C_Stop 09FE                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                        __CFG_MCLRE$ON 000000  
                       ___param_bank 000000                     ?_I2C_Master_Read 0026  
                   ?_I2C_Master_Wait 0026                     ?_I2C_Master_Stop 0026  
     __size_of_OSCILLATOR_Initialize 000A        __end_of_OSCILLATOR_Initialize 0B4C  
                              ?_main 0026                                _ACKEN 007E2C  
                              _ACKDT 007E2D                                _EEADR 000FA9  
                              _ANSEL 000F7E                        _i2c_trb_count 0010  
                              i2l111 06A2                                i2l112 06AA  
                              i2l122 074C                                i2l106 0640  
                              i2l140 07E6                                i2l132 078C  
                              i2l117 06D6                                i2l109 069A  
                              i2l118 06E4                                i2l135 07A6  
                              i2l136 07B6                                i2l128 0760  
                              i2l234 0052                                i2l238 005E  
             __end_of_LED_Data_Chan1 0609                                _PORTA 000F80  
                              _PORTD 000F83                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      ?_Read_Port_IN 0026                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                pclath 000FFA  
                              tablat 000FF5                                status 000FD8  
                     __CFG_HFOFST$ON 000000                           _i2c_object 0001  
                    __initialization 0ACA                         __end_of_main 08DA  
                   __end_of_Read_I2C 0968                            ??_I2C_ISR 0029  
        ?_INTERRUPT_InterruptManager 0026                               ??_main 003F  
                      __activetblptr 000002                       ??_Read_Port_IN 0039  
      Encode_LED_Data_Channel1@index 0039                    ?_I2C_Master_Start 0026  
                  ?_I2C_Master_Write 0026                   ??_I2C_Master_Start 003A  
                 ??_I2C_Master_Write 003A                               _EEDATA 000FA8  
                             _CCPR1H 000FBF                               _CCPR2H 000FBC  
                             _CCPR1L 000FBE                               _CCPR2L 000FBB  
                             _EECON2 000FA7                               _ANSELH 000F7F  
                             _CVRCON 000FB5                               i2l1211 07C6  
                             i2l1061 0B10                               i2l1053 09F8  
                             i2l1125 068A                               i2l1223 07EC  
                             i2l1207 07BE                               i2l1143 06D0  
                             i2l1225 07F0                               i2l1137 06B8  
                             i2l1233 0802                               i2l1227 07F8  
                             i2l1157 0712                               i2l1185 0770  
                             i2l1177 075A                               i2l1195 0794  
                     __CFG_WDTEN$OFF 000000                               _TABLAT 000FF5  
                             _OSCCON 000FD3                               _SSPADD 000FC8  
                             _SSPBUF 000FC9                     ?_CCP2_Initialize 0026  
                     __CFG_XINST$OFF 000000                       __CFG_STVREN$ON 000000  
                             clear_0 0AD0              __size_of_I2C_Initialize 002A  
                          ?_I2C_Stop 0026                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                    ?_ECCP1_Initialize 0026  
      __size_of_INTERRUPT_Initialize 0002                    _SYSTEM_Initialize 0AA8  
                 ??_ECCP1_Initialize 0039                           __accesstop 0060  
            __end_of__initialization 0AD6                      __CFG_PBADEN$OFF 000000  
                 __size_of_Write_I2C 0058     __end_of_Encode_LED_Data_Channel1 0A82  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0039  
        __size_of_EXT_INT_Initialize 0002                           ??_I2C_Stop 0026  
                  ?_CVREF_Initialize 0026            __end_of_SYSTEM_Initialize 0ACA  
                 ??_CVREF_Initialize 0039                            ?_Read_I2C 0026  
       __size_of_I2C_BusCollisionISR 0002                 __end_of_Read_Port_IN 0B66  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                            _I2C_ISR 060A                              _ECCP1AS 000FB6  
                  __end_of_Write_I2C 09C0                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
            I2C_Stop@completion_code 0028                              _PSTRCON 000FB9  
                            _SSPCON1 000FC6                              _SSPCON2 000FC5  
                            _SSPSTAT 000FC7                           ??_Read_I2C 003C  
      __size_of_I2C_FunctionComplete 0018                              __Hparam 0000  
                            __Lparam 0000             _Encode_LED_Data_Channel1 0A5A  
                   Read_I2C@rcv_data 003D                         __psmallconst 0600  
                            __pcinit 0ACA                       _I2C_Initialize 0A30  
                            __ramtop 0600                              __ptext0 0848  
                            __ptext1 0968                              __ptext2 0AA8  
                            __ptext3 09FE                              __ptext4 0B42  
                            __ptext5 0B66                              __ptext6 0A30  
                            __ptext7 0B68                              __ptext8 0AE4  
                            __ptext9 0B5C                _OSCILLATOR_Initialize 0B42  
           ??_PIN_MANAGER_Initialize 0039             __size_of_I2C_Master_Read 0026  
           __size_of_I2C_Master_Wait 0012             __size_of_I2C_Master_Stop 0008  
         __size_of_SYSTEM_Initialize 0022                 end_of_initialization 0AD6  
                      __Lmediumconst 0000            __size_of_I2C_Master_Start 0008  
          __size_of_I2C_Master_Write 000C                     I2C_Master_Read@a 003A  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE               __end_of_I2C_Initialize 0A5A  
                          _PORTCbits 000F82                   I2C_ISR@i2c_address 0024  
                  __size_of_I2C_Stop 003E     I2C_ISR@i2c_10bit_address_restart 000E  
              __size_of_Read_Port_IN 0004                    _p_i2c_trb_current 000C  
          __size_of_ECCP1_Initialize 001A             __size_of_CCP2_Initialize 000E  
       __end_of_INTERRUPT_Initialize 0B68                      ?_I2C_Initialize 0026  
                       _i2c_tr_queue 001E               ?_OSCILLATOR_Initialize 0026  
                      Write_I2C@Data 003B                  _I2C_BusCollisionISR 0B6A  
                start_initialization 0ACA                         _Read_Port_IN 0B62  
    __size_of_PIN_MANAGER_Initialize 0032                            _i2c_state 0011  
                  ??_I2C_Master_Read 003A                    ??_I2C_Master_Wait 0039  
                  ??_I2C_Master_Stop 003A                    __size_of_Read_I2C 008E  
               ?_I2C_BusCollisionISR 0026            __size_of_CVREF_Initialize 0006  
                   __CFG_LPT1OSC$OFF 000000                             ?_I2C_ISR 0026  
         __end_of_EXT_INT_Initialize 0B6A                          __pbssCOMRAM 0001  
                          _Write_I2C 0968           ??_Encode_LED_Data_Channel1 0039  
              ??_I2C_BusCollisionISR 0026                     _I2C_Master_Start 0B54  
                   _I2C_Master_Write 0B36               _PIN_MANAGER_Initialize 09FE  
                  __CFG_CCP2MX$PORTC 000000                            __pintcode 0008  
       __end_of_I2C_FunctionComplete 0B16         ??_INTERRUPT_InterruptManager 002B  
                        __smallconst 0600                    ??_CCP2_Initialize 0039  
                           _I2C_Stop 09C0                           ?_Write_I2C 003B  
                      _p_i2c_current 000A                 _INTERRUPT_Initialize 0B66  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
__size_of_INTERRUPT_InterruptManager 0092                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                     __CFG_WDTPS$32768 000000  
                   _ECCP1_Initialize 0AE4                  I2C_ISR@pi2c_buf_ptr 0008  
                   __size_of_I2C_ISR 023E                  I2C_Master_Read@temp 003B  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0026  
                           _Read_I2C 08DA                           _EECON1bits 000FA6  
                   ??_I2C_Initialize 0039                             __Hrparam 0000  
                   _CVREF_Initialize 0B5C                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000              ??_OSCILLATOR_Initialize 0039  
                    _I2C_Master_Read 0A82                      _I2C_Master_Wait 0B16  
                    _I2C_Master_Stop 0B4C                          ??_Write_I2C 003C  
                           __ptext10 0B28                             __ptext11 0B62  
                           __ptext20 060A                             __ptext12 08DA  
                           __ptext21 09C0                             __ptext13 0B36  
                           __ptext22 0AFE                             __ptext14 0B4C  
                           __ptext23 0B6A                             __ptext15 0B54  
                           __ptext16 0A82                             __ptext17 0B16  
                           __ptext18 0A5A                        __size_of_main 0092  
               _I2C_FunctionComplete 0AFE                Write_I2C@Channel_Addr 003D  
                           int$flags 0042   __end_of_INTERRUPT_InterruptManager 009A  
         _INTERRUPT_InterruptManager 0008             __end_of_I2C_Master_Start 0B5C  
           __end_of_I2C_Master_Write 0B42                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0039                   _EXT_INT_Initialize 0B68  
                           intlevel2 0000                ?_I2C_FunctionComplete 0026  
            ?_PIN_MANAGER_Initialize 0026                I2C_MasterRead@trBlock 0012  
               Read_I2C@Channel_Addr 003E                  ?_EXT_INT_Initialize 0026  
Encode_LED_Data_Channel1@DataReadI2C 003A                         main@I2C_Data 0041  
                    _CCP2_Initialize 0B28              __end_of_I2C_Master_Read 0AA8  
            __end_of_I2C_Master_Wait 0B28              __end_of_I2C_Master_Stop 0B54  
               ??_EXT_INT_Initialize 0039               I2C_MasterWrite@trBlock 0018  
                  I2C_Master_Write@d 003A                          _SSPCON1bits 000FC6  
                        _SSPCON2bits 000FC5             __end_of_ECCP1_Initialize 0AFE  
        __end_of_I2C_BusCollisionISR 0B6C       __end_of_PIN_MANAGER_Initialize 0A30  
                  __CFG_FOSC$INTIO67 000000  
